<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Imx.Sdk</name>
    </assembly>
    <members>
        <member name="M:Imx.Sdk.Client.GetAsset(System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Get details of an asset
            </summary>
            <remarks>
            Get details of an asset
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="tokenAddress">Address of the ERC721 contract</param>
            <param name="tokenId">Either ERC721 token ID or internal IMX ID</param>
            <param name="includeFees">Set flag to include fees associated with the asset (optional)</param>
        </member>
        <member name="M:Imx.Sdk.Client.GetAssetAsync(System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Get details of an asset
            </summary>
            <remarks>
            Get details of an asset
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="tokenAddress">Address of the ERC721 contract</param>
            <param name="tokenId">Either ERC721 token ID or internal IMX ID</param>
            <param name="includeFees">Set flag to include fees associated with the asset (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Asset</returns>
        </member>
        <member name="M:Imx.Sdk.Client.ListAssets(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of assets Get a list of assets
            </summary>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who owns these assets (optional)</param>
            <param name="status">Status of these assets (optional)</param>
            <param name="name">Name of the asset to search (optional)</param>
            <param name="metadata">URL JSON-encoded metadata filters for these assets. Javascript example: encodeURI(JSON.stringify({&#39;proto&#39;:[&#39;1147&#39;],&#39;quality&#39;:[&#39;Meteorite&#39;]})) (optional)</param>
            <param name="sellOrders">Set flag to true to fetch an array of sell order details with accepted status associated with the asset (optional)</param>
            <param name="buyOrders">Set flag to true to fetch an array of buy order details  with accepted status associated with the asset (optional)</param>
            <param name="includeFees">Set flag to include fees associated with the asset (optional)</param>
            <param name="collection">Collection contract address (optional)</param>
            <param name="updatedMinTimestamp">Minimum timestamp for when these assets were last updated, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="updatedMaxTimestamp">Maximum timestamp for when these assets were last updated, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="auxiliaryFeePercentages">Comma separated string of fee percentages that are to be paired with auxiliary_fee_recipients (optional)</param>
            <param name="auxiliaryFeeRecipients">Comma separated string of fee recipients that are to be paired with auxiliary_fee_percentages (optional)</param>
            <returns>ListAssetsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Client.ListAssetsAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of assets Get a list of assets
            </summary>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who owns these assets (optional)</param>
            <param name="status">Status of these assets (optional)</param>
            <param name="name">Name of the asset to search (optional)</param>
            <param name="metadata">URL JSON-encoded metadata filters for these assets. Javascript example: encodeURI(JSON.stringify({&#39;proto&#39;:[&#39;1147&#39;],&#39;quality&#39;:[&#39;Meteorite&#39;]})) (optional)</param>
            <param name="sellOrders">Set flag to true to fetch an array of sell order details with accepted status associated with the asset (optional)</param>
            <param name="buyOrders">Set flag to true to fetch an array of buy order details  with accepted status associated with the asset (optional)</param>
            <param name="includeFees">Set flag to include fees associated with the asset (optional)</param>
            <param name="collection">Collection contract address (optional)</param>
            <param name="updatedMinTimestamp">Minimum timestamp for when these assets were last updated, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="updatedMaxTimestamp">Maximum timestamp for when these assets were last updated, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="auxiliaryFeePercentages">Comma separated string of fee percentages that are to be paired with auxiliary_fee_recipients (optional)</param>
            <param name="auxiliaryFeeRecipients">Comma separated string of fee recipients that are to be paired with auxiliary_fee_percentages (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ListAssetsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Client.GetBalance(System.String,System.String)">
            <summary>
            Fetches the token balances of the user
            </summary>
            <remarks>
            Fetches the token balances of the user
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="owner">Address of the owner/user</param>
            <param name="address">Token address or 'eth'</param>
            <returns>Balance</returns>
        </member>
        <member name="M:Imx.Sdk.Client.GetBalanceAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Fetches the token balances of the user
            </summary>
            <remarks>
            Fetches the token balances of the user
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="owner">Address of the owner/user</param>
            <param name="address">Token address or 'eth'</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Balance</returns>
        </member>
        <member name="M:Imx.Sdk.Client.ListBalances(System.String,System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get a list of balances for given user
            </summary>
            <remarks>
            Get a list of balances for given user
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="owner">Ethereum wallet address for user</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <returns>ListBalancesResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Client.ListBalancesAsync(System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of balances for given user
            </summary>
            <remarks>
            Get a list of balances for given user
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="owner">Ethereum wallet address for user</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ListBalancesResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Client.GetCollection(System.String)">
            <summary>
            Get details of a collection at the given address
            </summary>
            <remarks>
            Get details of a collection at the given address
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Collection contract address</param>
            <returns>Collection</returns>
        </member>
        <member name="M:Imx.Sdk.Client.GetCollectionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get details of a collection at the given address
            </summary>
            <remarks>
            Get details of a collection at the given address
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Collection contract address</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Collection</returns>
        </member>
        <member name="M:Imx.Sdk.Client.ListCollectionFilters(System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Get a list of collection filters
            </summary>
            <remarks>
            Get a list of collection filters
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Collection contract address</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="nextPageToken">Next page token (optional)</param>
            <returns>CollectionFilter</returns>
        </member>
        <member name="M:Imx.Sdk.Client.ListCollections(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of collections
            </summary>
            <remarks>
            Get a list of collections
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="blacklist">List of collections not to be included, separated by commas (optional)</param>
            <param name="whitelist">List of collections to be included, separated by commas (optional)</param>
            <param name="keyword">Keyword to search in collection name and description (optional)</param>
            <returns>ListCollectionsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Client.ListCollectionsAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of collections
            </summary>
            <remarks>
            Get a list of collections
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="blacklist">List of collections not to be included, separated by commas (optional)</param>
            <param name="whitelist">List of collections to be included, separated by commas (optional)</param>
            <param name="keyword">Keyword to search in collection name and description (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ListCollectionsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Client.GetDeposit(System.String)">
            <summary>
            Get details of a deposit with the given ID
            </summary>
            <remarks>
            Get details of a deposit with the given ID
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Deposit ID</param>
            <returns>Deposit</returns>
        </member>
        <member name="M:Imx.Sdk.Client.GetDepositAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get details of a deposit with the given ID
            </summary>
            <remarks>
            Get details of a deposit with the given ID
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Deposit ID</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Deposit</returns>
        </member>
        <member name="M:Imx.Sdk.Client.ListDeposits(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of deposits
            </summary>
            <remarks>
            Get a list of deposits
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this deposit (optional)</param>
            <param name="status">Status of this deposit (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the deposited asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the deposited asset (optional)</param>
            <param name="tokenName">Token name of the deposited asset (optional)</param>
            <param name="minQuantity">Min quantity for the deposited asset (optional)</param>
            <param name="maxQuantity">Max quantity for the deposited asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the deposited asset (optional)</param>
            <returns>ListDepositsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Client.ListDepositsAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of deposits
            </summary>
            <remarks>
            Get a list of deposits
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this deposit (optional)</param>
            <param name="status">Status of this deposit (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the deposited asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the deposited asset (optional)</param>
            <param name="tokenName">Token name of the deposited asset (optional)</param>
            <param name="minQuantity">Min quantity for the deposited asset (optional)</param>
            <param name="maxQuantity">Max quantity for the deposited asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the deposited asset (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ListDepositsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Client.GetExchange(System.String)">
            <summary>
            Get an exchange by ID
            </summary>
            <remarks>
            Get an exchange by ID
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Exchange ID</param>
            <returns>Exchange</returns>
        </member>
        <member name="M:Imx.Sdk.Client.GetExchangeAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get an exchange by ID
            </summary>
            <remarks>
            Get an exchange by ID
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Exchange ID</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Exchange</returns>
        </member>
        <member name="M:Imx.Sdk.Client.GetExchanges(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String)">
            <summary>
            Returns a list of exchanges based on the request
            </summary>
            <remarks>
            Returns a list of exchanges based on the request
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (optional)</param>
            <param name="id">Transaction ID (optional)</param>
            <param name="walletAddress">Ethereum address of the user who created transaction (optional)</param>
            <param name="status">Transaction status (optional)</param>
            <param name="provider">Provider name (optional)</param>
            <param name="transferId">Transfer ID (optional)</param>
            <returns>GetTransactionsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Client.GetExchangesAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns a list of exchanges based on the request
            </summary>
            <remarks>
            Returns a list of exchanges based on the request
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (optional)</param>
            <param name="id">Transaction ID (optional)</param>
            <param name="walletAddress">Ethereum address of the user who created transaction (optional)</param>
            <param name="status">Transaction status (optional)</param>
            <param name="provider">Provider name (optional)</param>
            <param name="transferId">Transfer ID (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of GetTransactionsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Client.GetMetadataSchema(System.String)">
            <summary>
            Get collection metadata schema
            </summary>
            <remarks>
            Get collection metadata schema
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Collection contract address</param>
            <returns>List&lt;MetadataSchemaProperty&gt;</returns>
        </member>
        <member name="M:Imx.Sdk.Client.GetMetadataSchemaAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get collection metadata schema
            </summary>
            <remarks>
            Get collection metadata schema
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Collection contract address</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of List&lt;MetadataSchemaProperty&gt;</returns>
        </member>
        <member name="M:Imx.Sdk.Client.GetMint(System.String)">
            <summary>
            Get details of a mint with the given ID
            </summary>
            <remarks>
            Get details of a mint with the given ID
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Mint ID. This is the transaction_id returned from listMints</param>
            <returns>Mint</returns>
        </member>
        <member name="M:Imx.Sdk.Client.GetMintAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get details of a mint with the given ID
            </summary>
            <remarks>
            Get details of a mint with the given ID
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Mint ID. This is the transaction_id returned from listMints</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Mint</returns>
        </member>
        <member name="M:Imx.Sdk.Client.GetMintableTokenDetailsByClientTokenId(System.String,System.String)">
            <summary>
            Get details of a mintable token with the given token address and token ID
            </summary>
            <remarks>
            Get details of a mintable token with the given token address and token ID
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="tokenAddress">Address of the ERC721 contract</param>
            <param name="tokenId">ERC721 token ID</param>
            <returns>MintableTokenDetails</returns>
        </member>
        <member name="M:Imx.Sdk.Client.GetMintableTokenDetailsByClientTokenIdAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details of a mintable token with the given token address and token ID
            </summary>
            <remarks>
            Get details of a mintable token with the given token address and token ID
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="tokenAddress">Address of the ERC721 contract</param>
            <param name="tokenId">ERC721 token ID</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of MintableTokenDetails</returns>
        </member>
        <member name="M:Imx.Sdk.Client.ListMints(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of mints
            </summary>
            <remarks>
            Get information about token mints. If you want to get information about tokens that have already been minted, use the listAssets endpoint.
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this mint (optional)</param>
            <param name="status">Status of this mint (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this mint, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this mint, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the minted asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">[DEPRECATED] Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenName">Token Name of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the minted asset (optional)</param>
            <param name="minQuantity">Min quantity for the minted asset (optional)</param>
            <param name="maxQuantity">Max quantity for the minted asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the minted asset (optional)</param>
            <returns>ListMintsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Client.ListMintsAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of mints
            </summary>
            <remarks>
            Get information about token mints. If you want to get information about tokens that have already been minted, use the listAssets endpoint.
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this mint (optional)</param>
            <param name="status">Status of this mint (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this mint, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this mint, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the minted asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">[DEPRECATED] Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenName">Token Name of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the minted asset (optional)</param>
            <param name="minQuantity">Min quantity for the minted asset (optional)</param>
            <param name="maxQuantity">Max quantity for the minted asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the minted asset (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ListMintsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Client.GetNftPrimaryTransaction(System.String)">
            <summary>
            Get NFT primary sale transaction by id
            </summary>
            <remarks>
            given a transaction id, returns the corresponding transaction representing a mint executed from a card payment
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="transactionId">Transaction id</param>
            <returns>NftprimarytransactionGetResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Client.GetNftPrimaryTransactionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get NFT primary sale transaction by id
            </summary>
            <remarks>
            given a transaction id, returns the corresponding transaction representing a mint executed from a card payment
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="transactionId">Transaction id</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of NftprimarytransactionGetResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Client.ListNftPrimaryTransactions(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of NFT primary sales transactions
            </summary>
            <remarks>
            Returns a list of NFT primary sales transactions
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="transactionId">Transaction id (optional)</param>
            <param name="contractAddress">Contract address of the asset (optional)</param>
            <param name="sellerWalletAddress">Ethereum address of the seller (optional)</param>
            <param name="userWalletAddress">Ethereum address of the user who wants to create transaction (optional)</param>
            <param name="status">Transaction status (optional)</param>
            <param name="provider">Checkout provider name (optional)</param>
            <param name="mintId">Minting transaction ID - see mintTokens response (optional)</param>
            <returns>NftprimarytransactionListTransactionsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Client.ListNftPrimaryTransactionsAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of NFT primary sales transactions
            </summary>
            <remarks>
            Returns a list of NFT primary sales transactions
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="transactionId">Transaction id (optional)</param>
            <param name="contractAddress">Contract address of the asset (optional)</param>
            <param name="sellerWalletAddress">Ethereum address of the seller (optional)</param>
            <param name="userWalletAddress">Ethereum address of the user who wants to create transaction (optional)</param>
            <param name="status">Transaction status (optional)</param>
            <param name="provider">Checkout provider name (optional)</param>
            <param name="mintId">Minting transaction ID - see mintTokens response (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of NftprimarytransactionListTransactionsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Client.GetCurrenciesNFTCheckoutPrimary(System.String,System.Nullable{System.Boolean})">
            <summary>
            Get currencies with limits
            </summary>
            <remarks>
            Returns a list of supported currencies and their limits
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="provider">Provider name (optional)</param>
            <param name="includeLimits">Flag if limits should be included in the response or not (optional)</param>
            <returns>CurrencyWithLimits</returns>
        </member>
        <member name="M:Imx.Sdk.Client.GetCurrenciesNFTCheckoutPrimaryAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Get currencies with limits
            </summary>
            <remarks>
            Returns a list of supported currencies and their limits
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="provider">Provider name (optional)</param>
            <param name="includeLimits">Flag if limits should be included in the response or not (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of CurrencyWithLimits</returns>
        </member>
        <member name="M:Imx.Sdk.Client.GetOrder(System.String,System.Nullable{System.Boolean},System.String,System.String)">
            <summary>
            Get details of an order with the given ID
            </summary>
            <remarks>
            Get details of an order with the given ID
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Order ID</param>
            <param name="includeFees">Set flag to true to include fee body for the order (optional)</param>
            <param name="auxiliaryFeePercentages">Comma separated string of fee percentages that are to be paired with auxiliary_fee_recipients (optional)</param>
            <param name="auxiliaryFeeRecipients">Comma separated string of fee recipients that are to be paired with auxiliary_fee_percentages (optional)</param>
            <returns>Order</returns>
        </member>
        <member name="M:Imx.Sdk.Client.GetOrderAsync(System.String,System.Nullable{System.Boolean},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details of an order with the given ID
            </summary>
            <remarks>
            Get details of an order with the given ID
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Order ID</param>
            <param name="includeFees">Set flag to true to include fee body for the order (optional)</param>
            <param name="auxiliaryFeePercentages">Comma separated string of fee percentages that are to be paired with auxiliary_fee_recipients (optional)</param>
            <param name="auxiliaryFeeRecipients">Comma separated string of fee recipients that are to be paired with auxiliary_fee_percentages (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Order</returns>
        </member>
        <member name="M:Imx.Sdk.Client.ListOrders(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Get a list of orders
            </summary>
            <remarks>
            Get a list of orders
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this order (optional)</param>
            <param name="status">Status of this order (optional)</param>
            <param name="minTimestamp">Minimum created at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum created at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="updatedMinTimestamp">Minimum updated at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="updatedMaxTimestamp">Maximum updated at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="buyTokenType">Token type of the asset this order buys (optional)</param>
            <param name="buyTokenId">ERC721 Token ID of the asset this order buys (optional)</param>
            <param name="buyAssetId">Internal IMX ID of the asset this order buys (optional)</param>
            <param name="buyTokenAddress">Token address of the asset this order buys (optional)</param>
            <param name="buyTokenName">Token name of the asset this order buys (optional)</param>
            <param name="buyMinQuantity">Min quantity for the asset this order buys (optional)</param>
            <param name="buyMaxQuantity">Max quantity for the asset this order buys (optional)</param>
            <param name="buyMetadata">JSON-encoded metadata filters for the asset this order buys (optional)</param>
            <param name="sellTokenType">Token type of the asset this order sells (optional)</param>
            <param name="sellTokenId">ERC721 Token ID of the asset this order sells (optional)</param>
            <param name="sellAssetId">Internal IMX ID of the asset this order sells (optional)</param>
            <param name="sellTokenAddress">Token address of the asset this order sells (optional)</param>
            <param name="sellTokenName">Token name of the asset this order sells (optional)</param>
            <param name="sellMinQuantity">Min quantity for the asset this order sells (optional)</param>
            <param name="sellMaxQuantity">Max quantity for the asset this order sells (optional)</param>
            <param name="sellMetadata">JSON-encoded metadata filters for the asset this order sells (optional)</param>
            <param name="auxiliaryFeePercentages">Comma separated string of fee percentages that are to be paired with auxiliary_fee_recipients (optional)</param>
            <param name="auxiliaryFeeRecipients">Comma separated string of fee recipients that are to be paired with auxiliary_fee_percentages (optional)</param>
            <param name="includeFees">Set flag to true to include fee object for orders (optional)</param>
            <returns>ListOrdersResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Client.ListOrdersAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Get a list of orders
            </summary>
            <remarks>
            Get a list of orders
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this order (optional)</param>
            <param name="status">Status of this order (optional)</param>
            <param name="minTimestamp">Minimum created at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum created at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="updatedMinTimestamp">Minimum updated at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="updatedMaxTimestamp">Maximum updated at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="buyTokenType">Token type of the asset this order buys (optional)</param>
            <param name="buyTokenId">ERC721 Token ID of the asset this order buys (optional)</param>
            <param name="buyAssetId">Internal IMX ID of the asset this order buys (optional)</param>
            <param name="buyTokenAddress">Token address of the asset this order buys (optional)</param>
            <param name="buyTokenName">Token name of the asset this order buys (optional)</param>
            <param name="buyMinQuantity">Min quantity for the asset this order buys (optional)</param>
            <param name="buyMaxQuantity">Max quantity for the asset this order buys (optional)</param>
            <param name="buyMetadata">JSON-encoded metadata filters for the asset this order buys (optional)</param>
            <param name="sellTokenType">Token type of the asset this order sells (optional)</param>
            <param name="sellTokenId">ERC721 Token ID of the asset this order sells (optional)</param>
            <param name="sellAssetId">Internal IMX ID of the asset this order sells (optional)</param>
            <param name="sellTokenAddress">Token address of the asset this order sells (optional)</param>
            <param name="sellTokenName">Token name of the asset this order sells (optional)</param>
            <param name="sellMinQuantity">Min quantity for the asset this order sells (optional)</param>
            <param name="sellMaxQuantity">Max quantity for the asset this order sells (optional)</param>
            <param name="sellMetadata">JSON-encoded metadata filters for the asset this order sells (optional)</param>
            <param name="auxiliaryFeePercentages">Comma separated string of fee percentages that are to be paired with auxiliary_fee_recipients (optional)</param>
            <param name="auxiliaryFeeRecipients">Comma separated string of fee recipients that are to be paired with auxiliary_fee_percentages (optional)</param>
            <param name="includeFees">Set flag to true to include fee object for orders (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ListOrdersResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Client.GetToken(System.String)">
            <summary>
            Get details of a token
            </summary>
            <remarks>
            Get details of a token
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Token Contract Address</param>
            <returns>TokenDetails</returns>
        </member>
        <member name="M:Imx.Sdk.Client.GetTokenAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get details of a token
            </summary>
            <remarks>
            Get details of a token
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Token Contract Address</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TokenDetails</returns>
        </member>
        <member name="M:Imx.Sdk.Client.ListTokens(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of tokens
            </summary>
            <remarks>
            Get a list of tokens
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="address">Contract address of the token (optional)</param>
            <param name="symbols">Token symbols for the token, e.g. ?symbols&#x3D;IMX,ETH (optional)</param>
            <returns>ListTokensResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Client.ListTokensAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of tokens
            </summary>
            <remarks>
            Get a list of tokens
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="address">Contract address of the token (optional)</param>
            <param name="symbols">Token symbols for the token, e.g. ?symbols&#x3D;IMX,ETH (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ListTokensResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Client.GetTransfer(System.String)">
            <summary>
            Get details of a transfer with the given ID
            </summary>
            <remarks>
            Get details of a transfer with the given ID
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Transfer ID</param>
            <returns>Transfer</returns>
        </member>
        <member name="M:Imx.Sdk.Client.GetTransferAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get details of a transfer with the given ID
            </summary>
            <remarks>
            Get details of a transfer with the given ID
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Transfer ID</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Transfer</returns>
        </member>
        <member name="M:Imx.Sdk.Client.ListTransfers(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of transfers
            </summary>
            <remarks>
            Get a list of transfers
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this transfer (optional)</param>
            <param name="receiver">Ethereum address of the user who received this transfer (optional)</param>
            <param name="status">Status of this transfer (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this transfer, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this transfer, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the transferred asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the transferred asset (optional)</param>
            <param name="tokenName">Token name of the transferred asset (optional)</param>
            <param name="minQuantity">Max quantity for the transferred asset (optional)</param>
            <param name="maxQuantity">Max quantity for the transferred asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the transferred asset (optional)</param>
            <returns>ListTransfersResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Client.ListTransfersAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of transfers
            </summary>
            <remarks>
            Get a list of transfers
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this transfer (optional)</param>
            <param name="receiver">Ethereum address of the user who received this transfer (optional)</param>
            <param name="status">Status of this transfer (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this transfer, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this transfer, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the transferred asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the transferred asset (optional)</param>
            <param name="tokenName">Token name of the transferred asset (optional)</param>
            <param name="minQuantity">Max quantity for the transferred asset (optional)</param>
            <param name="maxQuantity">Max quantity for the transferred asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the transferred asset (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ListTransfersResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Client.GetTrade(System.String)">
            <summary>
            Get details of a trade with the given ID
            </summary>
            <remarks>
            Get details of a trade with the given ID
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Trade ID</param>
            <returns>Trade</returns>
        </member>
        <member name="M:Imx.Sdk.Client.GetTradeAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get details of a trade with the given ID
            </summary>
            <remarks>
            Get details of a trade with the given ID
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Trade ID</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Trade</returns>
        </member>
        <member name="M:Imx.Sdk.Client.ListTrades(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of trades
            </summary>
            <remarks>
            Get a list of trades
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="partyATokenType">Party A&#39;s (buy order) token type of currency used to buy (optional)</param>
            <param name="partyATokenAddress">Party A&#39;s (buy order) token address of currency used to buy (optional)</param>
            <param name="partyBTokenType">Party B&#39;s (sell order) token type of NFT sold - always ERC721 (optional)</param>
            <param name="partyBTokenAddress">Party B&#39;s (sell order) collection address of NFT sold (optional)</param>
            <param name="partyBTokenId">Party B&#39;s (sell order) token id of NFT sold (optional)</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this trade, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this trade, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <returns>ListTradesResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Client.ListTradesAsync(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of trades
            </summary>
            <remarks>
            Get a list of trades
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="partyATokenType">Party A&#39;s (buy order) token type of currency used to buy (optional)</param>
            <param name="partyATokenAddress">Party A&#39;s (buy order) token address of currency used to buy (optional)</param>
            <param name="partyBTokenType">Party B&#39;s (sell order) token type of NFT sold - always ERC721 (optional)</param>
            <param name="partyBTokenAddress">Party B&#39;s (sell order) collection address of NFT sold (optional)</param>
            <param name="partyBTokenId">Party B&#39;s (sell order) token id of NFT sold (optional)</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this trade, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this trade, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ListTradesResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Client.GetUsers(System.String)">
            <summary>
            Get stark keys for a registered user
            </summary>
            <remarks>
            Get stark keys for a registered user
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="user">User</param>
            <returns>GetUsersApiResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Client.GetUsersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get stark keys for a registered user
            </summary>
            <remarks>
            Get stark keys for a registered user
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="user">User</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of GetUsersApiResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Client.GetWithdrawal(System.String)">
            <summary>
            Gets details of withdrawal with the given ID
            </summary>
            <remarks>
            Gets details of withdrawal with the given ID
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Withdrawal ID</param>
            <returns>Withdrawal</returns>
        </member>
        <member name="M:Imx.Sdk.Client.GetWithdrawalAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets details of withdrawal with the given ID
            </summary>
            <remarks>
            Gets details of withdrawal with the given ID
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Withdrawal ID</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Withdrawal</returns>
        </member>
        <member name="M:Imx.Sdk.Client.ListWithdrawals(System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of withdrawals Get a list of withdrawals
            </summary>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="withdrawnToWallet">Withdrawal has been transferred to user&#39;s Layer 1 wallet (optional)</param>
            <param name="rollupStatus">Status of the on-chain batch confirmation for this withdrawal (optional)</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this withdrawal (optional)</param>
            <param name="status">Status of this withdrawal (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the withdrawn asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the withdrawn asset (optional)</param>
            <param name="tokenName">Token name of the withdrawn asset (optional)</param>
            <param name="minQuantity">Min quantity for the withdrawn asset (optional)</param>
            <param name="maxQuantity">Max quantity for the withdrawn asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the withdrawn asset (optional)</param>
            <returns>ListWithdrawalsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Client.ListWithdrawalsAsync(System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of withdrawals
            </summary>
            <remarks>
            Get a list of withdrawals
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="withdrawnToWallet">Withdrawal has been transferred to user&#39;s Layer 1 wallet (optional)</param>
            <param name="rollupStatus">Status of the on-chain batch confirmation for this withdrawal (optional)</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this withdrawal (optional)</param>
            <param name="status">Status of this withdrawal (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the withdrawn asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the withdrawn asset (optional)</param>
            <param name="tokenName">Token name of the withdrawn asset (optional)</param>
            <param name="minQuantity">Min quantity for the withdrawn asset (optional)</param>
            <param name="maxQuantity">Max quantity for the withdrawn asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the withdrawn asset (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ListWithdrawalsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.IClientAsync.GetAssetAsync(System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Get details of an asset
            </summary>
            <remarks>
            Get details of an asset
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="tokenAddress">Address of the ERC721 contract</param>
            <param name="tokenId">Either ERC721 token ID or internal IMX ID</param>
            <param name="includeFees">Set flag to include fees associated with the asset (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Asset</returns>
        </member>
        <member name="M:Imx.Sdk.IClientAsync.ListAssetsAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of assets Get a list of assets
            </summary>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who owns these assets (optional)</param>
            <param name="status">Status of these assets (optional)</param>
            <param name="name">Name of the asset to search (optional)</param>
            <param name="metadata">URL JSON-encoded metadata filters for these assets. Javascript example: encodeURI(JSON.stringify({&#39;proto&#39;:[&#39;1147&#39;],&#39;quality&#39;:[&#39;Meteorite&#39;]})) (optional)</param>
            <param name="sellOrders">Set flag to true to fetch an array of sell order details with accepted status associated with the asset (optional)</param>
            <param name="buyOrders">Set flag to true to fetch an array of buy order details  with accepted status associated with the asset (optional)</param>
            <param name="includeFees">Set flag to include fees associated with the asset (optional)</param>
            <param name="collection">Collection contract address (optional)</param>
            <param name="updatedMinTimestamp">Minimum timestamp for when these assets were last updated, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="updatedMaxTimestamp">Maximum timestamp for when these assets were last updated, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="auxiliaryFeePercentages">Comma separated string of fee percentages that are to be paired with auxiliary_fee_recipients (optional)</param>
            <param name="auxiliaryFeeRecipients">Comma separated string of fee recipients that are to be paired with auxiliary_fee_percentages (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ListAssetsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.IClientAsync.GetBalanceAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Fetches the token balances of the user
            </summary>
            <remarks>
            Fetches the token balances of the user
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="owner">Address of the owner/user</param>
            <param name="address">Token address or 'eth'</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Balance</returns>
        </member>
        <member name="M:Imx.Sdk.IClientAsync.ListBalancesAsync(System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of balances for given user
            </summary>
            <remarks>
            Get a list of balances for given user
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="owner">Ethereum wallet address for user</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ListBalancesResponse</returns>
        </member>
        <member name="M:Imx.Sdk.IClientAsync.GetCollectionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get details of a collection at the given address
            </summary>
            <remarks>
            Get details of a collection at the given address
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Collection contract address</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Collection</returns>
        </member>
        <member name="M:Imx.Sdk.IClientAsync.ListCollectionFiltersAsync(System.String,System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of collection filters
            </summary>
            <remarks>
            Get a list of collection filters
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Collection contract address</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="nextPageToken">Next page token (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of CollectionFilter</returns>
        </member>
        <member name="M:Imx.Sdk.IClientAsync.ListCollectionsAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of collections
            </summary>
            <remarks>
            Get a list of collections
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="blacklist">List of collections not to be included, separated by commas (optional)</param>
            <param name="whitelist">List of collections to be included, separated by commas (optional)</param>
            <param name="keyword">Keyword to search in collection name and description (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ListCollectionsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.IClientAsync.GetDepositAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get details of a deposit with the given ID
            </summary>
            <remarks>
            Get details of a deposit with the given ID
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Deposit ID</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Deposit</returns>
        </member>
        <member name="M:Imx.Sdk.IClientAsync.ListDepositsAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of deposits
            </summary>
            <remarks>
            Get a list of deposits
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this deposit (optional)</param>
            <param name="status">Status of this deposit (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the deposited asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the deposited asset (optional)</param>
            <param name="tokenName">Token name of the deposited asset (optional)</param>
            <param name="minQuantity">Min quantity for the deposited asset (optional)</param>
            <param name="maxQuantity">Max quantity for the deposited asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the deposited asset (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ListDepositsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.IClientAsync.GetExchangeAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get an exchange by ID
            </summary>
            <remarks>
            Get an exchange by ID
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Exchange ID</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Exchange</returns>
        </member>
        <member name="M:Imx.Sdk.IClientAsync.GetExchangesAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns a list of exchanges based on the request
            </summary>
            <remarks>
            Returns a list of exchanges based on the request
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (optional)</param>
            <param name="id">Transaction ID (optional)</param>
            <param name="walletAddress">Ethereum address of the user who created transaction (optional)</param>
            <param name="status">Transaction status (optional)</param>
            <param name="provider">Provider name (optional)</param>
            <param name="transferId">Transfer ID (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of GetTransactionsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.IClientAsync.GetMetadataSchemaAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get collection metadata schema
            </summary>
            <remarks>
            Get collection metadata schema
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Collection contract address</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of List&lt;MetadataSchemaProperty&gt;</returns>
        </member>
        <member name="M:Imx.Sdk.IClientAsync.GetMintAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get details of a mint with the given ID
            </summary>
            <remarks>
            Get details of a mint with the given ID
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Mint ID. This is the transaction_id returned from listMints</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Mint</returns>
        </member>
        <member name="M:Imx.Sdk.IClientAsync.GetMintableTokenDetailsByClientTokenIdAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details of a mintable token with the given token address and token ID
            </summary>
            <remarks>
            Get details of a mintable token with the given token address and token ID
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="tokenAddress">Address of the ERC721 contract</param>
            <param name="tokenId">ERC721 token ID</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of MintableTokenDetails</returns>
        </member>
        <member name="M:Imx.Sdk.IClientAsync.ListMintsAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of mints
            </summary>
            <remarks>
            Get information about token mints. If you want to get information about tokens that have already been minted, use the listAssets endpoint.
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this mint (optional)</param>
            <param name="status">Status of this mint (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this mint, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this mint, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the minted asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">[DEPRECATED] Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenName">Token Name of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the minted asset (optional)</param>
            <param name="minQuantity">Min quantity for the minted asset (optional)</param>
            <param name="maxQuantity">Max quantity for the minted asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the minted asset (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ListMintsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.IClientAsync.GetNftPrimaryTransactionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get NFT primary sale transaction by id
            </summary>
            <remarks>
            given a transaction id, returns the corresponding transaction representing a mint executed from a card payment
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="transactionId">Transaction id</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of NftprimarytransactionGetResponse</returns>
        </member>
        <member name="M:Imx.Sdk.IClientAsync.ListNftPrimaryTransactionsAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of NFT primary sales transactions
            </summary>
            <remarks>
            Returns a list of NFT primary sales transactions
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="transactionId">Transaction id (optional)</param>
            <param name="contractAddress">Contract address of the asset (optional)</param>
            <param name="sellerWalletAddress">Ethereum address of the seller (optional)</param>
            <param name="userWalletAddress">Ethereum address of the user who wants to create transaction (optional)</param>
            <param name="status">Transaction status (optional)</param>
            <param name="provider">Checkout provider name (optional)</param>
            <param name="mintId">Minting transaction ID - see mintTokens response (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of NftprimarytransactionListTransactionsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.IClientAsync.GetCurrenciesNFTCheckoutPrimaryAsync(System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Get currencies with limits
            </summary>
            <remarks>
            Returns a list of supported currencies and their limits
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="provider">Provider name (optional)</param>
            <param name="includeLimits">Flag if limits should be included in the response or not (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of CurrencyWithLimits</returns>
        </member>
        <member name="M:Imx.Sdk.IClientAsync.GetOrderAsync(System.String,System.Nullable{System.Boolean},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get details of an order with the given ID
            </summary>
            <remarks>
            Get details of an order with the given ID
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Order ID</param>
            <param name="includeFees">Set flag to true to include fee body for the order (optional)</param>
            <param name="auxiliaryFeePercentages">Comma separated string of fee percentages that are to be paired with auxiliary_fee_recipients (optional)</param>
            <param name="auxiliaryFeeRecipients">Comma separated string of fee recipients that are to be paired with auxiliary_fee_percentages (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Order</returns>
        </member>
        <member name="M:Imx.Sdk.IClientAsync.ListOrdersAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Get a list of orders
            </summary>
            <remarks>
            Get a list of orders
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this order (optional)</param>
            <param name="status">Status of this order (optional)</param>
            <param name="minTimestamp">Minimum created at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum created at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="updatedMinTimestamp">Minimum updated at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="updatedMaxTimestamp">Maximum updated at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="buyTokenType">Token type of the asset this order buys (optional)</param>
            <param name="buyTokenId">ERC721 Token ID of the asset this order buys (optional)</param>
            <param name="buyAssetId">Internal IMX ID of the asset this order buys (optional)</param>
            <param name="buyTokenAddress">Token address of the asset this order buys (optional)</param>
            <param name="buyTokenName">Token name of the asset this order buys (optional)</param>
            <param name="buyMinQuantity">Min quantity for the asset this order buys (optional)</param>
            <param name="buyMaxQuantity">Max quantity for the asset this order buys (optional)</param>
            <param name="buyMetadata">JSON-encoded metadata filters for the asset this order buys (optional)</param>
            <param name="sellTokenType">Token type of the asset this order sells (optional)</param>
            <param name="sellTokenId">ERC721 Token ID of the asset this order sells (optional)</param>
            <param name="sellAssetId">Internal IMX ID of the asset this order sells (optional)</param>
            <param name="sellTokenAddress">Token address of the asset this order sells (optional)</param>
            <param name="sellTokenName">Token name of the asset this order sells (optional)</param>
            <param name="sellMinQuantity">Min quantity for the asset this order sells (optional)</param>
            <param name="sellMaxQuantity">Max quantity for the asset this order sells (optional)</param>
            <param name="sellMetadata">JSON-encoded metadata filters for the asset this order sells (optional)</param>
            <param name="auxiliaryFeePercentages">Comma separated string of fee percentages that are to be paired with auxiliary_fee_recipients (optional)</param>
            <param name="auxiliaryFeeRecipients">Comma separated string of fee recipients that are to be paired with auxiliary_fee_percentages (optional)</param>
            <param name="includeFees">Set flag to true to include fee object for orders (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ListOrdersResponse</returns>
        </member>
        <member name="M:Imx.Sdk.IClientAsync.GetTokenAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get details of a token
            </summary>
            <remarks>
            Get details of a token
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Token Contract Address</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TokenDetails</returns>
        </member>
        <member name="M:Imx.Sdk.IClientAsync.ListTokensAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of tokens
            </summary>
            <remarks>
            Get a list of tokens
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="address">Contract address of the token (optional)</param>
            <param name="symbols">Token symbols for the token, e.g. ?symbols&#x3D;IMX,ETH (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ListTokensResponse</returns>
        </member>
        <member name="M:Imx.Sdk.IClientAsync.GetTradeAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get details of a trade with the given ID
            </summary>
            <remarks>
            Get details of a trade with the given ID
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Trade ID</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Trade</returns>
        </member>
        <member name="M:Imx.Sdk.IClientAsync.ListTradesAsync(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of trades
            </summary>
            <remarks>
            Get a list of trades
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="partyATokenType">Party A&#39;s (buy order) token type of currency used to buy (optional)</param>
            <param name="partyATokenAddress">Party A&#39;s (buy order) token address of currency used to buy (optional)</param>
            <param name="partyBTokenType">Party B&#39;s (sell order) token type of NFT sold - always ERC721 (optional)</param>
            <param name="partyBTokenAddress">Party B&#39;s (sell order) collection address of NFT sold (optional)</param>
            <param name="partyBTokenId">Party B&#39;s (sell order) token id of NFT sold (optional)</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this trade, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this trade, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ListTradesResponse</returns>
        </member>
        <member name="M:Imx.Sdk.IClientAsync.GetTransferAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get details of a transfer with the given ID
            </summary>
            <remarks>
            Get details of a transfer with the given ID
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Transfer ID</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Transfer</returns>
        </member>
        <member name="M:Imx.Sdk.IClientAsync.ListTransfersAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of transfers
            </summary>
            <remarks>
            Get a list of transfers
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this transfer (optional)</param>
            <param name="receiver">Ethereum address of the user who received this transfer (optional)</param>
            <param name="status">Status of this transfer (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this transfer, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this transfer, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the transferred asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the transferred asset (optional)</param>
            <param name="tokenName">Token name of the transferred asset (optional)</param>
            <param name="minQuantity">Max quantity for the transferred asset (optional)</param>
            <param name="maxQuantity">Max quantity for the transferred asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the transferred asset (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ListTransfersResponse</returns>
        </member>
        <member name="M:Imx.Sdk.IClientAsync.GetUsersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get stark keys for a registered user
            </summary>
            <remarks>
            Get stark keys for a registered user
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="user">User</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of GetUsersApiResponse</returns>
        </member>
        <member name="M:Imx.Sdk.IClientAsync.GetWithdrawalAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets details of withdrawal with the given ID
            </summary>
            <remarks>
            Gets details of withdrawal with the given ID
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Withdrawal ID</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Withdrawal</returns>
        </member>
        <member name="M:Imx.Sdk.IClientAsync.ListWithdrawalsAsync(System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get a list of withdrawals
            </summary>
            <remarks>
            Get a list of withdrawals
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="withdrawnToWallet">Withdrawal has been transferred to user&#39;s Layer 1 wallet (optional)</param>
            <param name="rollupStatus">Status of the on-chain batch confirmation for this withdrawal (optional)</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this withdrawal (optional)</param>
            <param name="status">Status of this withdrawal (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the withdrawn asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the withdrawn asset (optional)</param>
            <param name="tokenName">Token name of the withdrawn asset (optional)</param>
            <param name="minQuantity">Min quantity for the withdrawn asset (optional)</param>
            <param name="maxQuantity">Max quantity for the withdrawn asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the withdrawn asset (optional)</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ListWithdrawalsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.IClientSync.GetAsset(System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Get details of an asset
            </summary>
            <remarks>
            Get details of an asset
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="tokenAddress">Address of the ERC721 contract</param>
            <param name="tokenId">Either ERC721 token ID or internal IMX ID</param>
            <param name="includeFees">Set flag to include fees associated with the asset (optional)</param>
        </member>
        <member name="M:Imx.Sdk.IClientSync.ListAssets(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of assets Get a list of assets
            </summary>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who owns these assets (optional)</param>
            <param name="status">Status of these assets (optional)</param>
            <param name="name">Name of the asset to search (optional)</param>
            <param name="metadata">URL JSON-encoded metadata filters for these assets. Javascript example: encodeURI(JSON.stringify({&#39;proto&#39;:[&#39;1147&#39;],&#39;quality&#39;:[&#39;Meteorite&#39;]})) (optional)</param>
            <param name="sellOrders">Set flag to true to fetch an array of sell order details with accepted status associated with the asset (optional)</param>
            <param name="buyOrders">Set flag to true to fetch an array of buy order details  with accepted status associated with the asset (optional)</param>
            <param name="includeFees">Set flag to include fees associated with the asset (optional)</param>
            <param name="collection">Collection contract address (optional)</param>
            <param name="updatedMinTimestamp">Minimum timestamp for when these assets were last updated, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="updatedMaxTimestamp">Maximum timestamp for when these assets were last updated, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="auxiliaryFeePercentages">Comma separated string of fee percentages that are to be paired with auxiliary_fee_recipients (optional)</param>
            <param name="auxiliaryFeeRecipients">Comma separated string of fee recipients that are to be paired with auxiliary_fee_percentages (optional)</param>
            <returns>ListAssetsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.IClientSync.GetBalance(System.String,System.String)">
            <summary>
            Fetches the token balances of the user
            </summary>
            <remarks>
            Fetches the token balances of the user
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="owner">Address of the owner/user</param>
            <param name="address">Token address or 'eth'</param>
            <returns>Balance</returns>
        </member>
        <member name="M:Imx.Sdk.IClientSync.ListBalances(System.String,System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
            Get a list of balances for given user
            </summary>
            <remarks>
            Get a list of balances for given user
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="owner">Ethereum wallet address for user</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <returns>ListBalancesResponse</returns>
        </member>
        <member name="M:Imx.Sdk.IClientSync.GetCollection(System.String)">
            <summary>
            Get details of a collection at the given address
            </summary>
            <remarks>
            Get details of a collection at the given address
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Collection contract address</param>
            <returns>Collection</returns>
        </member>
        <member name="M:Imx.Sdk.IClientSync.ListCollectionFilters(System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Get a list of collection filters
            </summary>
            <remarks>
            Get a list of collection filters
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Collection contract address</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="nextPageToken">Next page token (optional)</param>
            <returns>CollectionFilter</returns>
        </member>
        <member name="M:Imx.Sdk.IClientSync.ListCollections(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of collections
            </summary>
            <remarks>
            Get a list of collections
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="blacklist">List of collections not to be included, separated by commas (optional)</param>
            <param name="whitelist">List of collections to be included, separated by commas (optional)</param>
            <param name="keyword">Keyword to search in collection name and description (optional)</param>
            <returns>ListCollectionsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.IClientSync.GetDeposit(System.String)">
            <summary>
            Get details of a deposit with the given ID
            </summary>
            <remarks>
            Get details of a deposit with the given ID
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Deposit ID</param>
            <returns>Deposit</returns>
        </member>
        <member name="M:Imx.Sdk.IClientSync.ListDeposits(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of deposits
            </summary>
            <remarks>
            Get a list of deposits
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this deposit (optional)</param>
            <param name="status">Status of this deposit (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the deposited asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the deposited asset (optional)</param>
            <param name="tokenName">Token name of the deposited asset (optional)</param>
            <param name="minQuantity">Min quantity for the deposited asset (optional)</param>
            <param name="maxQuantity">Max quantity for the deposited asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the deposited asset (optional)</param>
            <returns>ListDepositsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.IClientSync.GetExchange(System.String)">
            <summary>
            Get an exchange by ID
            </summary>
            <remarks>
            Get an exchange by ID
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Exchange ID</param>
            <returns>Exchange</returns>
        </member>
        <member name="M:Imx.Sdk.IClientSync.GetExchanges(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String)">
            <summary>
            Returns a list of exchanges based on the request
            </summary>
            <remarks>
            Returns a list of exchanges based on the request
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (optional)</param>
            <param name="id">Transaction ID (optional)</param>
            <param name="walletAddress">Ethereum address of the user who created transaction (optional)</param>
            <param name="status">Transaction status (optional)</param>
            <param name="provider">Provider name (optional)</param>
            <param name="transferId">Transfer ID (optional)</param>
            <returns>GetTransactionsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.IClientSync.GetMetadataSchema(System.String)">
            <summary>
            Get collection metadata schema
            </summary>
            <remarks>
            Get collection metadata schema
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Collection contract address</param>
            <returns>List&lt;MetadataSchemaProperty&gt;</returns>
        </member>
        <member name="M:Imx.Sdk.IClientSync.GetMint(System.String)">
            <summary>
            Get details of a mint with the given ID
            </summary>
            <remarks>
            Get details of a mint with the given ID
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Mint ID. This is the transaction_id returned from listMints</param>
            <returns>Mint</returns>
        </member>
        <member name="M:Imx.Sdk.IClientSync.GetMintableTokenDetailsByClientTokenId(System.String,System.String)">
            <summary>
            Get details of a mintable token with the given token address and token ID
            </summary>
            <remarks>
            Get details of a mintable token with the given token address and token ID
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="tokenAddress">Address of the ERC721 contract</param>
            <param name="tokenId">ERC721 token ID</param>
            <returns>MintableTokenDetails</returns>
        </member>
        <member name="M:Imx.Sdk.IClientSync.ListMints(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of mints
            </summary>
            <remarks>
            Get information about token mints. If you want to get information about tokens that have already been minted, use the listAssets endpoint.
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this mint (optional)</param>
            <param name="status">Status of this mint (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this mint, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this mint, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the minted asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">[DEPRECATED] Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenName">Token Name of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the minted asset (optional)</param>
            <param name="minQuantity">Min quantity for the minted asset (optional)</param>
            <param name="maxQuantity">Max quantity for the minted asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the minted asset (optional)</param>
            <returns>ListMintsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.IClientSync.GetNftPrimaryTransaction(System.String)">
            <summary>
            Get NFT primary sale transaction by id
            </summary>
            <remarks>
            given a transaction id, returns the corresponding transaction representing a mint executed from a card payment
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="transactionId">Transaction id</param>
            <returns>NftprimarytransactionGetResponse</returns>
        </member>
        <member name="M:Imx.Sdk.IClientSync.ListNftPrimaryTransactions(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of NFT primary sales transactions
            </summary>
            <remarks>
            Returns a list of NFT primary sales transactions
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="transactionId">Transaction id (optional)</param>
            <param name="contractAddress">Contract address of the asset (optional)</param>
            <param name="sellerWalletAddress">Ethereum address of the seller (optional)</param>
            <param name="userWalletAddress">Ethereum address of the user who wants to create transaction (optional)</param>
            <param name="status">Transaction status (optional)</param>
            <param name="provider">Checkout provider name (optional)</param>
            <param name="mintId">Minting transaction ID - see mintTokens response (optional)</param>
            <returns>NftprimarytransactionListTransactionsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.IClientSync.GetCurrenciesNFTCheckoutPrimary(System.String,System.Nullable{System.Boolean})">
            <summary>
            Get currencies with limits
            </summary>
            <remarks>
            Returns a list of supported currencies and their limits
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="provider">Provider name (optional)</param>
            <param name="includeLimits">Flag if limits should be included in the response or not (optional)</param>
            <returns>CurrencyWithLimits</returns>
        </member>
        <member name="M:Imx.Sdk.IClientSync.GetOrder(System.String,System.Nullable{System.Boolean},System.String,System.String)">
            <summary>
            Get details of an order with the given ID
            </summary>
            <remarks>
            Get details of an order with the given ID
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Order ID</param>
            <param name="includeFees">Set flag to true to include fee body for the order (optional)</param>
            <param name="auxiliaryFeePercentages">Comma separated string of fee percentages that are to be paired with auxiliary_fee_recipients (optional)</param>
            <param name="auxiliaryFeeRecipients">Comma separated string of fee recipients that are to be paired with auxiliary_fee_percentages (optional)</param>
            <returns>Order</returns>
        </member>
        <member name="M:Imx.Sdk.IClientSync.ListOrders(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Get a list of orders
            </summary>
            <remarks>
            Get a list of orders
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this order (optional)</param>
            <param name="status">Status of this order (optional)</param>
            <param name="minTimestamp">Minimum created at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum created at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="updatedMinTimestamp">Minimum updated at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="updatedMaxTimestamp">Maximum updated at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="buyTokenType">Token type of the asset this order buys (optional)</param>
            <param name="buyTokenId">ERC721 Token ID of the asset this order buys (optional)</param>
            <param name="buyAssetId">Internal IMX ID of the asset this order buys (optional)</param>
            <param name="buyTokenAddress">Token address of the asset this order buys (optional)</param>
            <param name="buyTokenName">Token name of the asset this order buys (optional)</param>
            <param name="buyMinQuantity">Min quantity for the asset this order buys (optional)</param>
            <param name="buyMaxQuantity">Max quantity for the asset this order buys (optional)</param>
            <param name="buyMetadata">JSON-encoded metadata filters for the asset this order buys (optional)</param>
            <param name="sellTokenType">Token type of the asset this order sells (optional)</param>
            <param name="sellTokenId">ERC721 Token ID of the asset this order sells (optional)</param>
            <param name="sellAssetId">Internal IMX ID of the asset this order sells (optional)</param>
            <param name="sellTokenAddress">Token address of the asset this order sells (optional)</param>
            <param name="sellTokenName">Token name of the asset this order sells (optional)</param>
            <param name="sellMinQuantity">Min quantity for the asset this order sells (optional)</param>
            <param name="sellMaxQuantity">Max quantity for the asset this order sells (optional)</param>
            <param name="sellMetadata">JSON-encoded metadata filters for the asset this order sells (optional)</param>
            <param name="auxiliaryFeePercentages">Comma separated string of fee percentages that are to be paired with auxiliary_fee_recipients (optional)</param>
            <param name="auxiliaryFeeRecipients">Comma separated string of fee recipients that are to be paired with auxiliary_fee_percentages (optional)</param>
            <param name="includeFees">Set flag to true to include fee object for orders (optional)</param>
            <returns>ListOrdersResponse</returns>
        </member>
        <member name="M:Imx.Sdk.IClientSync.GetToken(System.String)">
            <summary>
            Get details of a token
            </summary>
            <remarks>
            Get details of a token
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Token Contract Address</param>
            <returns>TokenDetails</returns>
        </member>
        <member name="M:Imx.Sdk.IClientSync.ListTokens(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of tokens
            </summary>
            <remarks>
            Get a list of tokens
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="address">Contract address of the token (optional)</param>
            <param name="symbols">Token symbols for the token, e.g. ?symbols&#x3D;IMX,ETH (optional)</param>
            <returns>ListTokensResponse</returns>
        </member>
        <member name="M:Imx.Sdk.IClientSync.GetTrade(System.String)">
            <summary>
            Get details of a trade with the given ID
            </summary>
            <remarks>
            Get details of a trade with the given ID
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Trade ID</param>
            <returns>Trade</returns>
        </member>
        <member name="M:Imx.Sdk.IClientSync.ListTrades(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of trades
            </summary>
            <remarks>
            Get a list of trades
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="partyATokenType">Party A&#39;s (buy order) token type of currency used to buy (optional)</param>
            <param name="partyATokenAddress">Party A&#39;s (buy order) token address of currency used to buy (optional)</param>
            <param name="partyBTokenType">Party B&#39;s (sell order) token type of NFT sold - always ERC721 (optional)</param>
            <param name="partyBTokenAddress">Party B&#39;s (sell order) collection address of NFT sold (optional)</param>
            <param name="partyBTokenId">Party B&#39;s (sell order) token id of NFT sold (optional)</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this trade, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this trade, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <returns>ListTradesResponse</returns>
        </member>
        <member name="M:Imx.Sdk.IClientSync.GetTransfer(System.String)">
            <summary>
            Get details of a transfer with the given ID
            </summary>
            <remarks>
            Get details of a transfer with the given ID
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Transfer ID</param>
            <returns>Transfer</returns>
        </member>
        <member name="M:Imx.Sdk.IClientSync.ListTransfers(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of transfers
            </summary>
            <remarks>
            Get a list of transfers
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this transfer (optional)</param>
            <param name="receiver">Ethereum address of the user who received this transfer (optional)</param>
            <param name="status">Status of this transfer (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this transfer, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this transfer, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the transferred asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the transferred asset (optional)</param>
            <param name="tokenName">Token name of the transferred asset (optional)</param>
            <param name="minQuantity">Max quantity for the transferred asset (optional)</param>
            <param name="maxQuantity">Max quantity for the transferred asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the transferred asset (optional)</param>
            <returns>ListTransfersResponse</returns>
        </member>
        <member name="M:Imx.Sdk.IClientSync.GetUsers(System.String)">
            <summary>
            Get stark keys for a registered user
            </summary>
            <remarks>
            Get stark keys for a registered user
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="user">User</param>
            <returns>GetUsersApiResponse</returns>
        </member>
        <member name="M:Imx.Sdk.IClientSync.GetWithdrawal(System.String)">
            <summary>
            Gets details of withdrawal with the given ID
            </summary>
            <remarks>
            Gets details of withdrawal with the given ID
            </remarks>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Withdrawal ID</param>
            <returns>Withdrawal</returns>
        </member>
        <member name="M:Imx.Sdk.IClientSync.ListWithdrawals(System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get a list of withdrawals Get a list of withdrawals
            </summary>
            <exception cref="!:api.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="withdrawnToWallet">Withdrawal has been transferred to user&#39;s Layer 1 wallet (optional)</param>
            <param name="rollupStatus">Status of the on-chain batch confirmation for this withdrawal (optional)</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this withdrawal (optional)</param>
            <param name="status">Status of this withdrawal (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the withdrawn asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the withdrawn asset (optional)</param>
            <param name="tokenName">Token name of the withdrawn asset (optional)</param>
            <param name="minQuantity">Min quantity for the withdrawn asset (optional)</param>
            <param name="maxQuantity">Max quantity for the withdrawn asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the withdrawn asset (optional)</param>
            <returns>ListWithdrawalsResponse</returns>
        </member>
    </members>
</doc>
