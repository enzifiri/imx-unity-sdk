<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Imx.Sdk.Gen</name>
    </assembly>
    <members>
        <member name="T:Imx.Sdk.Gen.Api.IAssetsApiSync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IAssetsApiSync.GetAsset(System.String,System.String,System.Nullable{System.Boolean},System.Int32)">
            <summary>
            Get details of an asset
            </summary>
            <remarks>
            Get details of an asset
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="tokenAddress">Address of the ERC721 contract</param>
            <param name="tokenId">Either ERC721 token ID or internal IMX ID</param>
            <param name="includeFees">Set flag to include fees associated with the asset (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>Asset</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IAssetsApiSync.GetAssetWithHttpInfo(System.String,System.String,System.Nullable{System.Boolean},System.Int32)">
            <summary>
            Get details of an asset
            </summary>
            <remarks>
            Get details of an asset
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="tokenAddress">Address of the ERC721 contract</param>
            <param name="tokenId">Either ERC721 token ID or internal IMX ID</param>
            <param name="includeFees">Set flag to include fees associated with the asset (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of Asset</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IAssetsApiSync.ListAssets(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Get a list of assets
            </summary>
            <remarks>
            Get a list of assets
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who owns these assets (optional)</param>
            <param name="status">Status of these assets (optional)</param>
            <param name="name">Name of the asset to search (optional)</param>
            <param name="metadata">URL JSON-encoded metadata filters for these assets. Javascript example: encodeURI(JSON.stringify({&#39;proto&#39;:[&#39;1147&#39;],&#39;quality&#39;:[&#39;Meteorite&#39;]})) (optional)</param>
            <param name="sellOrders">Set flag to true to fetch an array of sell order details with accepted status associated with the asset (optional)</param>
            <param name="buyOrders">Set flag to true to fetch an array of buy order details  with accepted status associated with the asset (optional)</param>
            <param name="includeFees">Set flag to include fees associated with the asset (optional)</param>
            <param name="collection">Collection contract address (optional)</param>
            <param name="updatedMinTimestamp">Minimum timestamp for when these assets were last updated, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="updatedMaxTimestamp">Maximum timestamp for when these assets were last updated, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="auxiliaryFeePercentages">Comma separated string of fee percentages that are to be paired with auxiliary_fee_recipients (optional)</param>
            <param name="auxiliaryFeeRecipients">Comma separated string of fee recipients that are to be paired with auxiliary_fee_percentages (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ListAssetsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IAssetsApiSync.ListAssetsWithHttpInfo(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Get a list of assets
            </summary>
            <remarks>
            Get a list of assets
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who owns these assets (optional)</param>
            <param name="status">Status of these assets (optional)</param>
            <param name="name">Name of the asset to search (optional)</param>
            <param name="metadata">URL JSON-encoded metadata filters for these assets. Javascript example: encodeURI(JSON.stringify({&#39;proto&#39;:[&#39;1147&#39;],&#39;quality&#39;:[&#39;Meteorite&#39;]})) (optional)</param>
            <param name="sellOrders">Set flag to true to fetch an array of sell order details with accepted status associated with the asset (optional)</param>
            <param name="buyOrders">Set flag to true to fetch an array of buy order details  with accepted status associated with the asset (optional)</param>
            <param name="includeFees">Set flag to include fees associated with the asset (optional)</param>
            <param name="collection">Collection contract address (optional)</param>
            <param name="updatedMinTimestamp">Minimum timestamp for when these assets were last updated, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="updatedMaxTimestamp">Maximum timestamp for when these assets were last updated, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="auxiliaryFeePercentages">Comma separated string of fee percentages that are to be paired with auxiliary_fee_recipients (optional)</param>
            <param name="auxiliaryFeeRecipients">Comma separated string of fee recipients that are to be paired with auxiliary_fee_percentages (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of ListAssetsResponse</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.IAssetsApiAsync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IAssetsApiAsync.GetAssetAsync(System.String,System.String,System.Nullable{System.Boolean},System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get details of an asset
            </summary>
            <remarks>
            Get details of an asset
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="tokenAddress">Address of the ERC721 contract</param>
            <param name="tokenId">Either ERC721 token ID or internal IMX ID</param>
            <param name="includeFees">Set flag to include fees associated with the asset (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Asset</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IAssetsApiAsync.GetAssetWithHttpInfoAsync(System.String,System.String,System.Nullable{System.Boolean},System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get details of an asset
            </summary>
            <remarks>
            Get details of an asset
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="tokenAddress">Address of the ERC721 contract</param>
            <param name="tokenId">Either ERC721 token ID or internal IMX ID</param>
            <param name="includeFees">Set flag to include fees associated with the asset (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (Asset)</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IAssetsApiAsync.ListAssetsAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of assets
            </summary>
            <remarks>
            Get a list of assets
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who owns these assets (optional)</param>
            <param name="status">Status of these assets (optional)</param>
            <param name="name">Name of the asset to search (optional)</param>
            <param name="metadata">URL JSON-encoded metadata filters for these assets. Javascript example: encodeURI(JSON.stringify({&#39;proto&#39;:[&#39;1147&#39;],&#39;quality&#39;:[&#39;Meteorite&#39;]})) (optional)</param>
            <param name="sellOrders">Set flag to true to fetch an array of sell order details with accepted status associated with the asset (optional)</param>
            <param name="buyOrders">Set flag to true to fetch an array of buy order details  with accepted status associated with the asset (optional)</param>
            <param name="includeFees">Set flag to include fees associated with the asset (optional)</param>
            <param name="collection">Collection contract address (optional)</param>
            <param name="updatedMinTimestamp">Minimum timestamp for when these assets were last updated, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="updatedMaxTimestamp">Maximum timestamp for when these assets were last updated, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="auxiliaryFeePercentages">Comma separated string of fee percentages that are to be paired with auxiliary_fee_recipients (optional)</param>
            <param name="auxiliaryFeeRecipients">Comma separated string of fee recipients that are to be paired with auxiliary_fee_percentages (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ListAssetsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IAssetsApiAsync.ListAssetsWithHttpInfoAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of assets
            </summary>
            <remarks>
            Get a list of assets
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who owns these assets (optional)</param>
            <param name="status">Status of these assets (optional)</param>
            <param name="name">Name of the asset to search (optional)</param>
            <param name="metadata">URL JSON-encoded metadata filters for these assets. Javascript example: encodeURI(JSON.stringify({&#39;proto&#39;:[&#39;1147&#39;],&#39;quality&#39;:[&#39;Meteorite&#39;]})) (optional)</param>
            <param name="sellOrders">Set flag to true to fetch an array of sell order details with accepted status associated with the asset (optional)</param>
            <param name="buyOrders">Set flag to true to fetch an array of buy order details  with accepted status associated with the asset (optional)</param>
            <param name="includeFees">Set flag to include fees associated with the asset (optional)</param>
            <param name="collection">Collection contract address (optional)</param>
            <param name="updatedMinTimestamp">Minimum timestamp for when these assets were last updated, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="updatedMaxTimestamp">Maximum timestamp for when these assets were last updated, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="auxiliaryFeePercentages">Comma separated string of fee percentages that are to be paired with auxiliary_fee_recipients (optional)</param>
            <param name="auxiliaryFeeRecipients">Comma separated string of fee recipients that are to be paired with auxiliary_fee_percentages (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ListAssetsResponse)</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.IAssetsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.AssetsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.AssetsApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.AssetsApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.AssetsApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.AssetsApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.AssetsApi.#ctor(Imx.Sdk.Gen.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.AssetsApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.AssetsApi.#ctor(Imx.Sdk.Gen.Client.ISynchronousClient,Imx.Sdk.Gen.Client.IAsynchronousClient,Imx.Sdk.Gen.Client.IReadableConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.AssetsApi"/> class
            using a Configuration object and client instance.
            </summary>
            <param name="client">The client interface for synchronous API access.</param>
            <param name="asyncClient">The client interface for asynchronous API access.</param>
            <param name="configuration">The configuration object.</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.AssetsApi.AsynchronousClient">
            <summary>
            The client for accessing this underlying API asynchronously.
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.AssetsApi.Client">
            <summary>
            The client for accessing this underlying API synchronously.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.AssetsApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.AssetsApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.AssetsApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.AssetsApi.GetAsset(System.String,System.String,System.Nullable{System.Boolean},System.Int32)">
            <summary>
            Get details of an asset Get details of an asset
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="tokenAddress">Address of the ERC721 contract</param>
            <param name="tokenId">Either ERC721 token ID or internal IMX ID</param>
            <param name="includeFees">Set flag to include fees associated with the asset (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>Asset</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.AssetsApi.GetAssetWithHttpInfo(System.String,System.String,System.Nullable{System.Boolean},System.Int32)">
            <summary>
            Get details of an asset Get details of an asset
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="tokenAddress">Address of the ERC721 contract</param>
            <param name="tokenId">Either ERC721 token ID or internal IMX ID</param>
            <param name="includeFees">Set flag to include fees associated with the asset (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of Asset</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.AssetsApi.GetAssetAsync(System.String,System.String,System.Nullable{System.Boolean},System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get details of an asset Get details of an asset
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="tokenAddress">Address of the ERC721 contract</param>
            <param name="tokenId">Either ERC721 token ID or internal IMX ID</param>
            <param name="includeFees">Set flag to include fees associated with the asset (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Asset</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.AssetsApi.GetAssetWithHttpInfoAsync(System.String,System.String,System.Nullable{System.Boolean},System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get details of an asset Get details of an asset
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="tokenAddress">Address of the ERC721 contract</param>
            <param name="tokenId">Either ERC721 token ID or internal IMX ID</param>
            <param name="includeFees">Set flag to include fees associated with the asset (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (Asset)</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.AssetsApi.ListAssets(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Get a list of assets Get a list of assets
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who owns these assets (optional)</param>
            <param name="status">Status of these assets (optional)</param>
            <param name="name">Name of the asset to search (optional)</param>
            <param name="metadata">URL JSON-encoded metadata filters for these assets. Javascript example: encodeURI(JSON.stringify({&#39;proto&#39;:[&#39;1147&#39;],&#39;quality&#39;:[&#39;Meteorite&#39;]})) (optional)</param>
            <param name="sellOrders">Set flag to true to fetch an array of sell order details with accepted status associated with the asset (optional)</param>
            <param name="buyOrders">Set flag to true to fetch an array of buy order details  with accepted status associated with the asset (optional)</param>
            <param name="includeFees">Set flag to include fees associated with the asset (optional)</param>
            <param name="collection">Collection contract address (optional)</param>
            <param name="updatedMinTimestamp">Minimum timestamp for when these assets were last updated, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="updatedMaxTimestamp">Maximum timestamp for when these assets were last updated, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="auxiliaryFeePercentages">Comma separated string of fee percentages that are to be paired with auxiliary_fee_recipients (optional)</param>
            <param name="auxiliaryFeeRecipients">Comma separated string of fee recipients that are to be paired with auxiliary_fee_percentages (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ListAssetsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.AssetsApi.ListAssetsWithHttpInfo(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Get a list of assets Get a list of assets
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who owns these assets (optional)</param>
            <param name="status">Status of these assets (optional)</param>
            <param name="name">Name of the asset to search (optional)</param>
            <param name="metadata">URL JSON-encoded metadata filters for these assets. Javascript example: encodeURI(JSON.stringify({&#39;proto&#39;:[&#39;1147&#39;],&#39;quality&#39;:[&#39;Meteorite&#39;]})) (optional)</param>
            <param name="sellOrders">Set flag to true to fetch an array of sell order details with accepted status associated with the asset (optional)</param>
            <param name="buyOrders">Set flag to true to fetch an array of buy order details  with accepted status associated with the asset (optional)</param>
            <param name="includeFees">Set flag to include fees associated with the asset (optional)</param>
            <param name="collection">Collection contract address (optional)</param>
            <param name="updatedMinTimestamp">Minimum timestamp for when these assets were last updated, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="updatedMaxTimestamp">Maximum timestamp for when these assets were last updated, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="auxiliaryFeePercentages">Comma separated string of fee percentages that are to be paired with auxiliary_fee_recipients (optional)</param>
            <param name="auxiliaryFeeRecipients">Comma separated string of fee recipients that are to be paired with auxiliary_fee_percentages (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of ListAssetsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.AssetsApi.ListAssetsAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of assets Get a list of assets
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who owns these assets (optional)</param>
            <param name="status">Status of these assets (optional)</param>
            <param name="name">Name of the asset to search (optional)</param>
            <param name="metadata">URL JSON-encoded metadata filters for these assets. Javascript example: encodeURI(JSON.stringify({&#39;proto&#39;:[&#39;1147&#39;],&#39;quality&#39;:[&#39;Meteorite&#39;]})) (optional)</param>
            <param name="sellOrders">Set flag to true to fetch an array of sell order details with accepted status associated with the asset (optional)</param>
            <param name="buyOrders">Set flag to true to fetch an array of buy order details  with accepted status associated with the asset (optional)</param>
            <param name="includeFees">Set flag to include fees associated with the asset (optional)</param>
            <param name="collection">Collection contract address (optional)</param>
            <param name="updatedMinTimestamp">Minimum timestamp for when these assets were last updated, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="updatedMaxTimestamp">Maximum timestamp for when these assets were last updated, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="auxiliaryFeePercentages">Comma separated string of fee percentages that are to be paired with auxiliary_fee_recipients (optional)</param>
            <param name="auxiliaryFeeRecipients">Comma separated string of fee recipients that are to be paired with auxiliary_fee_percentages (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ListAssetsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.AssetsApi.ListAssetsWithHttpInfoAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of assets Get a list of assets
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who owns these assets (optional)</param>
            <param name="status">Status of these assets (optional)</param>
            <param name="name">Name of the asset to search (optional)</param>
            <param name="metadata">URL JSON-encoded metadata filters for these assets. Javascript example: encodeURI(JSON.stringify({&#39;proto&#39;:[&#39;1147&#39;],&#39;quality&#39;:[&#39;Meteorite&#39;]})) (optional)</param>
            <param name="sellOrders">Set flag to true to fetch an array of sell order details with accepted status associated with the asset (optional)</param>
            <param name="buyOrders">Set flag to true to fetch an array of buy order details  with accepted status associated with the asset (optional)</param>
            <param name="includeFees">Set flag to include fees associated with the asset (optional)</param>
            <param name="collection">Collection contract address (optional)</param>
            <param name="updatedMinTimestamp">Minimum timestamp for when these assets were last updated, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="updatedMaxTimestamp">Maximum timestamp for when these assets were last updated, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="auxiliaryFeePercentages">Comma separated string of fee percentages that are to be paired with auxiliary_fee_recipients (optional)</param>
            <param name="auxiliaryFeeRecipients">Comma separated string of fee recipients that are to be paired with auxiliary_fee_percentages (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ListAssetsResponse)</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.IBalancesApiSync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IBalancesApiSync.GetBalance(System.String,System.String,System.Int32)">
            <summary>
            Fetches the token balances of the user
            </summary>
            <remarks>
            Fetches the token balances of the user
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="owner">Address of the owner/user</param>
            <param name="address">Token address</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>Balance</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IBalancesApiSync.GetBalanceWithHttpInfo(System.String,System.String,System.Int32)">
            <summary>
            Fetches the token balances of the user
            </summary>
            <remarks>
            Fetches the token balances of the user
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="owner">Address of the owner/user</param>
            <param name="address">Token address</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of Balance</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IBalancesApiSync.ListBalances(System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Int32)">
            <summary>
            Get a list of balances for given user
            </summary>
            <remarks>
            Get a list of balances for given user
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="owner">Ethereum wallet address for user</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ListBalancesResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IBalancesApiSync.ListBalancesWithHttpInfo(System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Int32)">
            <summary>
            Get a list of balances for given user
            </summary>
            <remarks>
            Get a list of balances for given user
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="owner">Ethereum wallet address for user</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of ListBalancesResponse</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.IBalancesApiAsync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IBalancesApiAsync.GetBalanceAsync(System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Fetches the token balances of the user
            </summary>
            <remarks>
            Fetches the token balances of the user
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="owner">Address of the owner/user</param>
            <param name="address">Token address</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Balance</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IBalancesApiAsync.GetBalanceWithHttpInfoAsync(System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Fetches the token balances of the user
            </summary>
            <remarks>
            Fetches the token balances of the user
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="owner">Address of the owner/user</param>
            <param name="address">Token address</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (Balance)</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IBalancesApiAsync.ListBalancesAsync(System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of balances for given user
            </summary>
            <remarks>
            Get a list of balances for given user
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="owner">Ethereum wallet address for user</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ListBalancesResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IBalancesApiAsync.ListBalancesWithHttpInfoAsync(System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of balances for given user
            </summary>
            <remarks>
            Get a list of balances for given user
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="owner">Ethereum wallet address for user</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ListBalancesResponse)</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.IBalancesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.BalancesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.BalancesApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.BalancesApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.BalancesApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.BalancesApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.BalancesApi.#ctor(Imx.Sdk.Gen.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.BalancesApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.BalancesApi.#ctor(Imx.Sdk.Gen.Client.ISynchronousClient,Imx.Sdk.Gen.Client.IAsynchronousClient,Imx.Sdk.Gen.Client.IReadableConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.BalancesApi"/> class
            using a Configuration object and client instance.
            </summary>
            <param name="client">The client interface for synchronous API access.</param>
            <param name="asyncClient">The client interface for asynchronous API access.</param>
            <param name="configuration">The configuration object.</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.BalancesApi.AsynchronousClient">
            <summary>
            The client for accessing this underlying API asynchronously.
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.BalancesApi.Client">
            <summary>
            The client for accessing this underlying API synchronously.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.BalancesApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.BalancesApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.BalancesApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.BalancesApi.GetBalance(System.String,System.String,System.Int32)">
            <summary>
            Fetches the token balances of the user Fetches the token balances of the user
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="owner">Address of the owner/user</param>
            <param name="address">Token address</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>Balance</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.BalancesApi.GetBalanceWithHttpInfo(System.String,System.String,System.Int32)">
            <summary>
            Fetches the token balances of the user Fetches the token balances of the user
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="owner">Address of the owner/user</param>
            <param name="address">Token address</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of Balance</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.BalancesApi.GetBalanceAsync(System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Fetches the token balances of the user Fetches the token balances of the user
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="owner">Address of the owner/user</param>
            <param name="address">Token address</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Balance</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.BalancesApi.GetBalanceWithHttpInfoAsync(System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Fetches the token balances of the user Fetches the token balances of the user
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="owner">Address of the owner/user</param>
            <param name="address">Token address</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (Balance)</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.BalancesApi.ListBalances(System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Int32)">
            <summary>
            Get a list of balances for given user Get a list of balances for given user
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="owner">Ethereum wallet address for user</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ListBalancesResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.BalancesApi.ListBalancesWithHttpInfo(System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Int32)">
            <summary>
            Get a list of balances for given user Get a list of balances for given user
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="owner">Ethereum wallet address for user</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of ListBalancesResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.BalancesApi.ListBalancesAsync(System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of balances for given user Get a list of balances for given user
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="owner">Ethereum wallet address for user</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ListBalancesResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.BalancesApi.ListBalancesWithHttpInfoAsync(System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of balances for given user Get a list of balances for given user
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="owner">Ethereum wallet address for user</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ListBalancesResponse)</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.ICollectionsApiSync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ICollectionsApiSync.GetCollection(System.String,System.Int32)">
            <summary>
            Get details of a collection at the given address
            </summary>
            <remarks>
            Get details of a collection at the given address
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Collection contract address</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>Collection</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ICollectionsApiSync.GetCollectionWithHttpInfo(System.String,System.Int32)">
            <summary>
            Get details of a collection at the given address
            </summary>
            <remarks>
            Get details of a collection at the given address
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Collection contract address</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of Collection</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ICollectionsApiSync.ListCollectionFilters(System.String,System.Nullable{System.Int32},System.String,System.Int32)">
            <summary>
            Get a list of collection filters
            </summary>
            <remarks>
            Get a list of collection filters
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Collection contract address</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="nextPageToken">Next page token (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>CollectionFilter</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ICollectionsApiSync.ListCollectionFiltersWithHttpInfo(System.String,System.Nullable{System.Int32},System.String,System.Int32)">
            <summary>
            Get a list of collection filters
            </summary>
            <remarks>
            Get a list of collection filters
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Collection contract address</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="nextPageToken">Next page token (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of CollectionFilter</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ICollectionsApiSync.ListCollections(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Get a list of collections
            </summary>
            <remarks>
            Get a list of collections
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="blacklist">List of collections not to be included, separated by commas (optional)</param>
            <param name="whitelist">List of collections to be included, separated by commas (optional)</param>
            <param name="keyword">Keyword to search in collection name and description (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ListCollectionsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ICollectionsApiSync.ListCollectionsWithHttpInfo(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Get a list of collections
            </summary>
            <remarks>
            Get a list of collections
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="blacklist">List of collections not to be included, separated by commas (optional)</param>
            <param name="whitelist">List of collections to be included, separated by commas (optional)</param>
            <param name="keyword">Keyword to search in collection name and description (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of ListCollectionsResponse</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.ICollectionsApiAsync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ICollectionsApiAsync.GetCollectionAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get details of a collection at the given address
            </summary>
            <remarks>
            Get details of a collection at the given address
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Collection contract address</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Collection</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ICollectionsApiAsync.GetCollectionWithHttpInfoAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get details of a collection at the given address
            </summary>
            <remarks>
            Get details of a collection at the given address
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Collection contract address</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (Collection)</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ICollectionsApiAsync.ListCollectionFiltersAsync(System.String,System.Nullable{System.Int32},System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of collection filters
            </summary>
            <remarks>
            Get a list of collection filters
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Collection contract address</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="nextPageToken">Next page token (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of CollectionFilter</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ICollectionsApiAsync.ListCollectionFiltersWithHttpInfoAsync(System.String,System.Nullable{System.Int32},System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of collection filters
            </summary>
            <remarks>
            Get a list of collection filters
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Collection contract address</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="nextPageToken">Next page token (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (CollectionFilter)</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ICollectionsApiAsync.ListCollectionsAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of collections
            </summary>
            <remarks>
            Get a list of collections
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="blacklist">List of collections not to be included, separated by commas (optional)</param>
            <param name="whitelist">List of collections to be included, separated by commas (optional)</param>
            <param name="keyword">Keyword to search in collection name and description (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ListCollectionsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ICollectionsApiAsync.ListCollectionsWithHttpInfoAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of collections
            </summary>
            <remarks>
            Get a list of collections
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="blacklist">List of collections not to be included, separated by commas (optional)</param>
            <param name="whitelist">List of collections to be included, separated by commas (optional)</param>
            <param name="keyword">Keyword to search in collection name and description (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ListCollectionsResponse)</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.ICollectionsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.CollectionsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.CollectionsApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.CollectionsApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.CollectionsApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.CollectionsApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.CollectionsApi.#ctor(Imx.Sdk.Gen.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.CollectionsApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.CollectionsApi.#ctor(Imx.Sdk.Gen.Client.ISynchronousClient,Imx.Sdk.Gen.Client.IAsynchronousClient,Imx.Sdk.Gen.Client.IReadableConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.CollectionsApi"/> class
            using a Configuration object and client instance.
            </summary>
            <param name="client">The client interface for synchronous API access.</param>
            <param name="asyncClient">The client interface for asynchronous API access.</param>
            <param name="configuration">The configuration object.</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.CollectionsApi.AsynchronousClient">
            <summary>
            The client for accessing this underlying API asynchronously.
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.CollectionsApi.Client">
            <summary>
            The client for accessing this underlying API synchronously.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.CollectionsApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.CollectionsApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.CollectionsApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.CollectionsApi.GetCollection(System.String,System.Int32)">
            <summary>
            Get details of a collection at the given address Get details of a collection at the given address
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Collection contract address</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>Collection</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.CollectionsApi.GetCollectionWithHttpInfo(System.String,System.Int32)">
            <summary>
            Get details of a collection at the given address Get details of a collection at the given address
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Collection contract address</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of Collection</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.CollectionsApi.GetCollectionAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get details of a collection at the given address Get details of a collection at the given address
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Collection contract address</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Collection</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.CollectionsApi.GetCollectionWithHttpInfoAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get details of a collection at the given address Get details of a collection at the given address
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Collection contract address</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (Collection)</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.CollectionsApi.ListCollectionFilters(System.String,System.Nullable{System.Int32},System.String,System.Int32)">
            <summary>
            Get a list of collection filters Get a list of collection filters
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Collection contract address</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="nextPageToken">Next page token (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>CollectionFilter</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.CollectionsApi.ListCollectionFiltersWithHttpInfo(System.String,System.Nullable{System.Int32},System.String,System.Int32)">
            <summary>
            Get a list of collection filters Get a list of collection filters
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Collection contract address</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="nextPageToken">Next page token (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of CollectionFilter</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.CollectionsApi.ListCollectionFiltersAsync(System.String,System.Nullable{System.Int32},System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of collection filters Get a list of collection filters
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Collection contract address</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="nextPageToken">Next page token (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of CollectionFilter</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.CollectionsApi.ListCollectionFiltersWithHttpInfoAsync(System.String,System.Nullable{System.Int32},System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of collection filters Get a list of collection filters
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Collection contract address</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="nextPageToken">Next page token (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (CollectionFilter)</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.CollectionsApi.ListCollections(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Get a list of collections Get a list of collections
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="blacklist">List of collections not to be included, separated by commas (optional)</param>
            <param name="whitelist">List of collections to be included, separated by commas (optional)</param>
            <param name="keyword">Keyword to search in collection name and description (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ListCollectionsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.CollectionsApi.ListCollectionsWithHttpInfo(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Get a list of collections Get a list of collections
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="blacklist">List of collections not to be included, separated by commas (optional)</param>
            <param name="whitelist">List of collections to be included, separated by commas (optional)</param>
            <param name="keyword">Keyword to search in collection name and description (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of ListCollectionsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.CollectionsApi.ListCollectionsAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of collections Get a list of collections
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="blacklist">List of collections not to be included, separated by commas (optional)</param>
            <param name="whitelist">List of collections to be included, separated by commas (optional)</param>
            <param name="keyword">Keyword to search in collection name and description (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ListCollectionsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.CollectionsApi.ListCollectionsWithHttpInfoAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of collections Get a list of collections
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="blacklist">List of collections not to be included, separated by commas (optional)</param>
            <param name="whitelist">List of collections to be included, separated by commas (optional)</param>
            <param name="keyword">Keyword to search in collection name and description (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ListCollectionsResponse)</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.IDepositsApiSync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IDepositsApiSync.GetDeposit(System.String,System.Int32)">
            <summary>
            Get details of a deposit with the given ID
            </summary>
            <remarks>
            Get details of a deposit with the given ID
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Deposit ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>Deposit</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IDepositsApiSync.GetDepositWithHttpInfo(System.String,System.Int32)">
            <summary>
            Get details of a deposit with the given ID
            </summary>
            <remarks>
            Get details of a deposit with the given ID
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Deposit ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of Deposit</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IDepositsApiSync.ListDeposits(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Get a list of deposits
            </summary>
            <remarks>
            Get a list of deposits
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this deposit (optional)</param>
            <param name="status">Status of this deposit (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the deposited asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the deposited asset (optional)</param>
            <param name="tokenName">Token name of the deposited asset (optional)</param>
            <param name="minQuantity">Min quantity for the deposited asset (optional)</param>
            <param name="maxQuantity">Max quantity for the deposited asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the deposited asset (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ListDepositsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IDepositsApiSync.ListDepositsWithHttpInfo(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Get a list of deposits
            </summary>
            <remarks>
            Get a list of deposits
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this deposit (optional)</param>
            <param name="status">Status of this deposit (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the deposited asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the deposited asset (optional)</param>
            <param name="tokenName">Token name of the deposited asset (optional)</param>
            <param name="minQuantity">Min quantity for the deposited asset (optional)</param>
            <param name="maxQuantity">Max quantity for the deposited asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the deposited asset (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of ListDepositsResponse</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.IDepositsApiAsync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IDepositsApiAsync.GetDepositAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get details of a deposit with the given ID
            </summary>
            <remarks>
            Get details of a deposit with the given ID
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Deposit ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Deposit</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IDepositsApiAsync.GetDepositWithHttpInfoAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get details of a deposit with the given ID
            </summary>
            <remarks>
            Get details of a deposit with the given ID
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Deposit ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (Deposit)</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IDepositsApiAsync.ListDepositsAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of deposits
            </summary>
            <remarks>
            Get a list of deposits
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this deposit (optional)</param>
            <param name="status">Status of this deposit (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the deposited asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the deposited asset (optional)</param>
            <param name="tokenName">Token name of the deposited asset (optional)</param>
            <param name="minQuantity">Min quantity for the deposited asset (optional)</param>
            <param name="maxQuantity">Max quantity for the deposited asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the deposited asset (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ListDepositsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IDepositsApiAsync.ListDepositsWithHttpInfoAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of deposits
            </summary>
            <remarks>
            Get a list of deposits
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this deposit (optional)</param>
            <param name="status">Status of this deposit (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the deposited asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the deposited asset (optional)</param>
            <param name="tokenName">Token name of the deposited asset (optional)</param>
            <param name="minQuantity">Min quantity for the deposited asset (optional)</param>
            <param name="maxQuantity">Max quantity for the deposited asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the deposited asset (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ListDepositsResponse)</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.IDepositsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.DepositsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.DepositsApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.DepositsApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.DepositsApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.DepositsApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.DepositsApi.#ctor(Imx.Sdk.Gen.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.DepositsApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.DepositsApi.#ctor(Imx.Sdk.Gen.Client.ISynchronousClient,Imx.Sdk.Gen.Client.IAsynchronousClient,Imx.Sdk.Gen.Client.IReadableConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.DepositsApi"/> class
            using a Configuration object and client instance.
            </summary>
            <param name="client">The client interface for synchronous API access.</param>
            <param name="asyncClient">The client interface for asynchronous API access.</param>
            <param name="configuration">The configuration object.</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.DepositsApi.AsynchronousClient">
            <summary>
            The client for accessing this underlying API asynchronously.
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.DepositsApi.Client">
            <summary>
            The client for accessing this underlying API synchronously.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.DepositsApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.DepositsApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.DepositsApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.DepositsApi.GetDeposit(System.String,System.Int32)">
            <summary>
            Get details of a deposit with the given ID Get details of a deposit with the given ID
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Deposit ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>Deposit</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.DepositsApi.GetDepositWithHttpInfo(System.String,System.Int32)">
            <summary>
            Get details of a deposit with the given ID Get details of a deposit with the given ID
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Deposit ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of Deposit</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.DepositsApi.GetDepositAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get details of a deposit with the given ID Get details of a deposit with the given ID
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Deposit ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Deposit</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.DepositsApi.GetDepositWithHttpInfoAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get details of a deposit with the given ID Get details of a deposit with the given ID
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Deposit ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (Deposit)</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.DepositsApi.ListDeposits(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Get a list of deposits Get a list of deposits
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this deposit (optional)</param>
            <param name="status">Status of this deposit (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the deposited asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the deposited asset (optional)</param>
            <param name="tokenName">Token name of the deposited asset (optional)</param>
            <param name="minQuantity">Min quantity for the deposited asset (optional)</param>
            <param name="maxQuantity">Max quantity for the deposited asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the deposited asset (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ListDepositsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.DepositsApi.ListDepositsWithHttpInfo(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Get a list of deposits Get a list of deposits
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this deposit (optional)</param>
            <param name="status">Status of this deposit (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the deposited asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the deposited asset (optional)</param>
            <param name="tokenName">Token name of the deposited asset (optional)</param>
            <param name="minQuantity">Min quantity for the deposited asset (optional)</param>
            <param name="maxQuantity">Max quantity for the deposited asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the deposited asset (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of ListDepositsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.DepositsApi.ListDepositsAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of deposits Get a list of deposits
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this deposit (optional)</param>
            <param name="status">Status of this deposit (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the deposited asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the deposited asset (optional)</param>
            <param name="tokenName">Token name of the deposited asset (optional)</param>
            <param name="minQuantity">Min quantity for the deposited asset (optional)</param>
            <param name="maxQuantity">Max quantity for the deposited asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the deposited asset (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ListDepositsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.DepositsApi.ListDepositsWithHttpInfoAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of deposits Get a list of deposits
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this deposit (optional)</param>
            <param name="status">Status of this deposit (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the deposited asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the deposited asset (optional)</param>
            <param name="tokenName">Token name of the deposited asset (optional)</param>
            <param name="minQuantity">Min quantity for the deposited asset (optional)</param>
            <param name="maxQuantity">Max quantity for the deposited asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the deposited asset (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ListDepositsResponse)</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.IExchangesApiSync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IExchangesApiSync.GetExchange(System.String,System.Int32)">
            <summary>
            Get an exchange by ID
            </summary>
            <remarks>
            Get an exchange by ID
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Exchange ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>Exchange</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IExchangesApiSync.GetExchangeWithHttpInfo(System.String,System.Int32)">
            <summary>
            Get an exchange by ID
            </summary>
            <remarks>
            Get an exchange by ID
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Exchange ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of Exchange</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IExchangesApiSync.GetExchanges(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Returns a list of exchanges based on the request
            </summary>
            <remarks>
            Returns a list of exchanges based on the request
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (optional)</param>
            <param name="id">Transaction ID (optional)</param>
            <param name="walletAddress">Ethereum address of the user who created transaction (optional)</param>
            <param name="status">Transaction status (optional)</param>
            <param name="provider">Provider name (optional)</param>
            <param name="transferId">Transfer ID (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>GetTransactionsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IExchangesApiSync.GetExchangesWithHttpInfo(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Returns a list of exchanges based on the request
            </summary>
            <remarks>
            Returns a list of exchanges based on the request
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (optional)</param>
            <param name="id">Transaction ID (optional)</param>
            <param name="walletAddress">Ethereum address of the user who created transaction (optional)</param>
            <param name="status">Transaction status (optional)</param>
            <param name="provider">Provider name (optional)</param>
            <param name="transferId">Transfer ID (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of GetTransactionsResponse</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.IExchangesApiAsync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IExchangesApiAsync.GetExchangeAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get an exchange by ID
            </summary>
            <remarks>
            Get an exchange by ID
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Exchange ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Exchange</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IExchangesApiAsync.GetExchangeWithHttpInfoAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get an exchange by ID
            </summary>
            <remarks>
            Get an exchange by ID
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Exchange ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (Exchange)</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IExchangesApiAsync.GetExchangesAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Returns a list of exchanges based on the request
            </summary>
            <remarks>
            Returns a list of exchanges based on the request
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (optional)</param>
            <param name="id">Transaction ID (optional)</param>
            <param name="walletAddress">Ethereum address of the user who created transaction (optional)</param>
            <param name="status">Transaction status (optional)</param>
            <param name="provider">Provider name (optional)</param>
            <param name="transferId">Transfer ID (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of GetTransactionsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IExchangesApiAsync.GetExchangesWithHttpInfoAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Returns a list of exchanges based on the request
            </summary>
            <remarks>
            Returns a list of exchanges based on the request
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (optional)</param>
            <param name="id">Transaction ID (optional)</param>
            <param name="walletAddress">Ethereum address of the user who created transaction (optional)</param>
            <param name="status">Transaction status (optional)</param>
            <param name="provider">Provider name (optional)</param>
            <param name="transferId">Transfer ID (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (GetTransactionsResponse)</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.IExchangesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.ExchangesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ExchangesApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.ExchangesApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ExchangesApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.ExchangesApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ExchangesApi.#ctor(Imx.Sdk.Gen.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.ExchangesApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ExchangesApi.#ctor(Imx.Sdk.Gen.Client.ISynchronousClient,Imx.Sdk.Gen.Client.IAsynchronousClient,Imx.Sdk.Gen.Client.IReadableConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.ExchangesApi"/> class
            using a Configuration object and client instance.
            </summary>
            <param name="client">The client interface for synchronous API access.</param>
            <param name="asyncClient">The client interface for asynchronous API access.</param>
            <param name="configuration">The configuration object.</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.ExchangesApi.AsynchronousClient">
            <summary>
            The client for accessing this underlying API asynchronously.
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.ExchangesApi.Client">
            <summary>
            The client for accessing this underlying API synchronously.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ExchangesApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.ExchangesApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.ExchangesApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ExchangesApi.GetExchange(System.String,System.Int32)">
            <summary>
            Get an exchange by ID Get an exchange by ID
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Exchange ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>Exchange</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ExchangesApi.GetExchangeWithHttpInfo(System.String,System.Int32)">
            <summary>
            Get an exchange by ID Get an exchange by ID
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Exchange ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of Exchange</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ExchangesApi.GetExchangeAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get an exchange by ID Get an exchange by ID
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Exchange ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Exchange</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ExchangesApi.GetExchangeWithHttpInfoAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get an exchange by ID Get an exchange by ID
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Exchange ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (Exchange)</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ExchangesApi.GetExchanges(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Returns a list of exchanges based on the request Returns a list of exchanges based on the request
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (optional)</param>
            <param name="id">Transaction ID (optional)</param>
            <param name="walletAddress">Ethereum address of the user who created transaction (optional)</param>
            <param name="status">Transaction status (optional)</param>
            <param name="provider">Provider name (optional)</param>
            <param name="transferId">Transfer ID (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>GetTransactionsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ExchangesApi.GetExchangesWithHttpInfo(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Returns a list of exchanges based on the request Returns a list of exchanges based on the request
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (optional)</param>
            <param name="id">Transaction ID (optional)</param>
            <param name="walletAddress">Ethereum address of the user who created transaction (optional)</param>
            <param name="status">Transaction status (optional)</param>
            <param name="provider">Provider name (optional)</param>
            <param name="transferId">Transfer ID (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of GetTransactionsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ExchangesApi.GetExchangesAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Returns a list of exchanges based on the request Returns a list of exchanges based on the request
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (optional)</param>
            <param name="id">Transaction ID (optional)</param>
            <param name="walletAddress">Ethereum address of the user who created transaction (optional)</param>
            <param name="status">Transaction status (optional)</param>
            <param name="provider">Provider name (optional)</param>
            <param name="transferId">Transfer ID (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of GetTransactionsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ExchangesApi.GetExchangesWithHttpInfoAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Returns a list of exchanges based on the request Returns a list of exchanges based on the request
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (optional)</param>
            <param name="id">Transaction ID (optional)</param>
            <param name="walletAddress">Ethereum address of the user who created transaction (optional)</param>
            <param name="status">Transaction status (optional)</param>
            <param name="provider">Provider name (optional)</param>
            <param name="transferId">Transfer ID (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (GetTransactionsResponse)</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.IMetadataApiSync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IMetadataApiSync.GetMetadataSchema(System.String,System.Int32)">
            <summary>
            Get collection metadata schema
            </summary>
            <remarks>
            Get collection metadata schema
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Collection contract address</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>List&lt;MetadataSchemaProperty&gt;</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IMetadataApiSync.GetMetadataSchemaWithHttpInfo(System.String,System.Int32)">
            <summary>
            Get collection metadata schema
            </summary>
            <remarks>
            Get collection metadata schema
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Collection contract address</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of List&lt;MetadataSchemaProperty&gt;</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.IMetadataApiAsync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IMetadataApiAsync.GetMetadataSchemaAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get collection metadata schema
            </summary>
            <remarks>
            Get collection metadata schema
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Collection contract address</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of List&lt;MetadataSchemaProperty&gt;</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IMetadataApiAsync.GetMetadataSchemaWithHttpInfoAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get collection metadata schema
            </summary>
            <remarks>
            Get collection metadata schema
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Collection contract address</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (List&lt;MetadataSchemaProperty&gt;)</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.IMetadataApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.MetadataApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.MetadataApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.MetadataApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.MetadataApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.MetadataApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.MetadataApi.#ctor(Imx.Sdk.Gen.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.MetadataApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.MetadataApi.#ctor(Imx.Sdk.Gen.Client.ISynchronousClient,Imx.Sdk.Gen.Client.IAsynchronousClient,Imx.Sdk.Gen.Client.IReadableConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.MetadataApi"/> class
            using a Configuration object and client instance.
            </summary>
            <param name="client">The client interface for synchronous API access.</param>
            <param name="asyncClient">The client interface for asynchronous API access.</param>
            <param name="configuration">The configuration object.</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.MetadataApi.AsynchronousClient">
            <summary>
            The client for accessing this underlying API asynchronously.
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.MetadataApi.Client">
            <summary>
            The client for accessing this underlying API synchronously.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.MetadataApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.MetadataApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.MetadataApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.MetadataApi.GetMetadataSchema(System.String,System.Int32)">
            <summary>
            Get collection metadata schema Get collection metadata schema
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Collection contract address</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>List&lt;MetadataSchemaProperty&gt;</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.MetadataApi.GetMetadataSchemaWithHttpInfo(System.String,System.Int32)">
            <summary>
            Get collection metadata schema Get collection metadata schema
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Collection contract address</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of List&lt;MetadataSchemaProperty&gt;</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.MetadataApi.GetMetadataSchemaAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get collection metadata schema Get collection metadata schema
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Collection contract address</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of List&lt;MetadataSchemaProperty&gt;</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.MetadataApi.GetMetadataSchemaWithHttpInfoAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get collection metadata schema Get collection metadata schema
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Collection contract address</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (List&lt;MetadataSchemaProperty&gt;)</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.IMintsApiSync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IMintsApiSync.GetMint(System.String,System.Int32)">
            <summary>
            Get details of a mint with the given ID
            </summary>
            <remarks>
            Get details of a mint with the given ID
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Mint ID. This is the transaction_id returned from listMints</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>Mint</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IMintsApiSync.GetMintWithHttpInfo(System.String,System.Int32)">
            <summary>
            Get details of a mint with the given ID
            </summary>
            <remarks>
            Get details of a mint with the given ID
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Mint ID. This is the transaction_id returned from listMints</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of Mint</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IMintsApiSync.GetMintableTokenDetailsByClientTokenId(System.String,System.String,System.Int32)">
            <summary>
            Get details of a mintable token with the given token address and token ID
            </summary>
            <remarks>
            Get details of a mintable token with the given token address and token ID
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="tokenAddress">Address of the ERC721 contract</param>
            <param name="tokenId">ERC721 token ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>MintableTokenDetails</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IMintsApiSync.GetMintableTokenDetailsByClientTokenIdWithHttpInfo(System.String,System.String,System.Int32)">
            <summary>
            Get details of a mintable token with the given token address and token ID
            </summary>
            <remarks>
            Get details of a mintable token with the given token address and token ID
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="tokenAddress">Address of the ERC721 contract</param>
            <param name="tokenId">ERC721 token ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of MintableTokenDetails</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IMintsApiSync.ListMints(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Get a list of mints
            </summary>
            <remarks>
            Get information about token mints. If you want to get information about tokens that have already been minted, use the listAssets endpoint.
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this mint (optional)</param>
            <param name="status">Status of this mint (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this mint, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this mint, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the minted asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">[DEPRECATED] Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenName">Token Name of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the minted asset (optional)</param>
            <param name="minQuantity">Min quantity for the minted asset (optional)</param>
            <param name="maxQuantity">Max quantity for the minted asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the minted asset (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ListMintsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IMintsApiSync.ListMintsWithHttpInfo(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Get a list of mints
            </summary>
            <remarks>
            Get information about token mints. If you want to get information about tokens that have already been minted, use the listAssets endpoint.
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this mint (optional)</param>
            <param name="status">Status of this mint (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this mint, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this mint, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the minted asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">[DEPRECATED] Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenName">Token Name of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the minted asset (optional)</param>
            <param name="minQuantity">Min quantity for the minted asset (optional)</param>
            <param name="maxQuantity">Max quantity for the minted asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the minted asset (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of ListMintsResponse</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.IMintsApiAsync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IMintsApiAsync.GetMintAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get details of a mint with the given ID
            </summary>
            <remarks>
            Get details of a mint with the given ID
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Mint ID. This is the transaction_id returned from listMints</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Mint</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IMintsApiAsync.GetMintWithHttpInfoAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get details of a mint with the given ID
            </summary>
            <remarks>
            Get details of a mint with the given ID
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Mint ID. This is the transaction_id returned from listMints</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (Mint)</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IMintsApiAsync.GetMintableTokenDetailsByClientTokenIdAsync(System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get details of a mintable token with the given token address and token ID
            </summary>
            <remarks>
            Get details of a mintable token with the given token address and token ID
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="tokenAddress">Address of the ERC721 contract</param>
            <param name="tokenId">ERC721 token ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of MintableTokenDetails</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IMintsApiAsync.GetMintableTokenDetailsByClientTokenIdWithHttpInfoAsync(System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get details of a mintable token with the given token address and token ID
            </summary>
            <remarks>
            Get details of a mintable token with the given token address and token ID
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="tokenAddress">Address of the ERC721 contract</param>
            <param name="tokenId">ERC721 token ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (MintableTokenDetails)</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IMintsApiAsync.ListMintsAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of mints
            </summary>
            <remarks>
            Get information about token mints. If you want to get information about tokens that have already been minted, use the listAssets endpoint.
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this mint (optional)</param>
            <param name="status">Status of this mint (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this mint, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this mint, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the minted asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">[DEPRECATED] Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenName">Token Name of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the minted asset (optional)</param>
            <param name="minQuantity">Min quantity for the minted asset (optional)</param>
            <param name="maxQuantity">Max quantity for the minted asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the minted asset (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ListMintsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IMintsApiAsync.ListMintsWithHttpInfoAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of mints
            </summary>
            <remarks>
            Get information about token mints. If you want to get information about tokens that have already been minted, use the listAssets endpoint.
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this mint (optional)</param>
            <param name="status">Status of this mint (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this mint, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this mint, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the minted asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">[DEPRECATED] Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenName">Token Name of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the minted asset (optional)</param>
            <param name="minQuantity">Min quantity for the minted asset (optional)</param>
            <param name="maxQuantity">Max quantity for the minted asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the minted asset (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ListMintsResponse)</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.IMintsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.MintsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.MintsApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.MintsApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.MintsApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.MintsApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.MintsApi.#ctor(Imx.Sdk.Gen.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.MintsApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.MintsApi.#ctor(Imx.Sdk.Gen.Client.ISynchronousClient,Imx.Sdk.Gen.Client.IAsynchronousClient,Imx.Sdk.Gen.Client.IReadableConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.MintsApi"/> class
            using a Configuration object and client instance.
            </summary>
            <param name="client">The client interface for synchronous API access.</param>
            <param name="asyncClient">The client interface for asynchronous API access.</param>
            <param name="configuration">The configuration object.</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.MintsApi.AsynchronousClient">
            <summary>
            The client for accessing this underlying API asynchronously.
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.MintsApi.Client">
            <summary>
            The client for accessing this underlying API synchronously.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.MintsApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.MintsApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.MintsApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.MintsApi.GetMint(System.String,System.Int32)">
            <summary>
            Get details of a mint with the given ID Get details of a mint with the given ID
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Mint ID. This is the transaction_id returned from listMints</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>Mint</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.MintsApi.GetMintWithHttpInfo(System.String,System.Int32)">
            <summary>
            Get details of a mint with the given ID Get details of a mint with the given ID
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Mint ID. This is the transaction_id returned from listMints</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of Mint</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.MintsApi.GetMintAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get details of a mint with the given ID Get details of a mint with the given ID
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Mint ID. This is the transaction_id returned from listMints</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Mint</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.MintsApi.GetMintWithHttpInfoAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get details of a mint with the given ID Get details of a mint with the given ID
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Mint ID. This is the transaction_id returned from listMints</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (Mint)</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.MintsApi.GetMintableTokenDetailsByClientTokenId(System.String,System.String,System.Int32)">
            <summary>
            Get details of a mintable token with the given token address and token ID Get details of a mintable token with the given token address and token ID
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="tokenAddress">Address of the ERC721 contract</param>
            <param name="tokenId">ERC721 token ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>MintableTokenDetails</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.MintsApi.GetMintableTokenDetailsByClientTokenIdWithHttpInfo(System.String,System.String,System.Int32)">
            <summary>
            Get details of a mintable token with the given token address and token ID Get details of a mintable token with the given token address and token ID
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="tokenAddress">Address of the ERC721 contract</param>
            <param name="tokenId">ERC721 token ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of MintableTokenDetails</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.MintsApi.GetMintableTokenDetailsByClientTokenIdAsync(System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get details of a mintable token with the given token address and token ID Get details of a mintable token with the given token address and token ID
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="tokenAddress">Address of the ERC721 contract</param>
            <param name="tokenId">ERC721 token ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of MintableTokenDetails</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.MintsApi.GetMintableTokenDetailsByClientTokenIdWithHttpInfoAsync(System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get details of a mintable token with the given token address and token ID Get details of a mintable token with the given token address and token ID
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="tokenAddress">Address of the ERC721 contract</param>
            <param name="tokenId">ERC721 token ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (MintableTokenDetails)</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.MintsApi.ListMints(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Get a list of mints Get information about token mints. If you want to get information about tokens that have already been minted, use the listAssets endpoint.
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this mint (optional)</param>
            <param name="status">Status of this mint (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this mint, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this mint, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the minted asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">[DEPRECATED] Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenName">Token Name of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the minted asset (optional)</param>
            <param name="minQuantity">Min quantity for the minted asset (optional)</param>
            <param name="maxQuantity">Max quantity for the minted asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the minted asset (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ListMintsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.MintsApi.ListMintsWithHttpInfo(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Get a list of mints Get information about token mints. If you want to get information about tokens that have already been minted, use the listAssets endpoint.
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this mint (optional)</param>
            <param name="status">Status of this mint (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this mint, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this mint, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the minted asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">[DEPRECATED] Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenName">Token Name of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the minted asset (optional)</param>
            <param name="minQuantity">Min quantity for the minted asset (optional)</param>
            <param name="maxQuantity">Max quantity for the minted asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the minted asset (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of ListMintsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.MintsApi.ListMintsAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of mints Get information about token mints. If you want to get information about tokens that have already been minted, use the listAssets endpoint.
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this mint (optional)</param>
            <param name="status">Status of this mint (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this mint, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this mint, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the minted asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">[DEPRECATED] Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenName">Token Name of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the minted asset (optional)</param>
            <param name="minQuantity">Min quantity for the minted asset (optional)</param>
            <param name="maxQuantity">Max quantity for the minted asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the minted asset (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ListMintsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.MintsApi.ListMintsWithHttpInfoAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of mints Get information about token mints. If you want to get information about tokens that have already been minted, use the listAssets endpoint.
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this mint (optional)</param>
            <param name="status">Status of this mint (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this mint, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this mint, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the minted asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">[DEPRECATED] Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenName">Token Name of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the minted asset (optional)</param>
            <param name="minQuantity">Min quantity for the minted asset (optional)</param>
            <param name="maxQuantity">Max quantity for the minted asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the minted asset (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ListMintsResponse)</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.INftCheckoutPrimaryApiSync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.INftCheckoutPrimaryApiSync.GetCurrenciesNFTCheckoutPrimary(System.String,System.Nullable{System.Boolean},System.Int32)">
            <summary>
            Get currencies with limits
            </summary>
            <remarks>
            Returns a list of supported currencies and their limits
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="provider">Provider name (optional)</param>
            <param name="includeLimits">Flag if limits should be included in the response or not (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>CurrencyWithLimits</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.INftCheckoutPrimaryApiSync.GetCurrenciesNFTCheckoutPrimaryWithHttpInfo(System.String,System.Nullable{System.Boolean},System.Int32)">
            <summary>
            Get currencies with limits
            </summary>
            <remarks>
            Returns a list of supported currencies and their limits
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="provider">Provider name (optional)</param>
            <param name="includeLimits">Flag if limits should be included in the response or not (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of CurrencyWithLimits</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.INftCheckoutPrimaryApiSync.GetNftPrimaryTransaction(System.String,System.Int32)">
            <summary>
            Get NFT primary sale transaction by id
            </summary>
            <remarks>
            given a transaction id, returns the corresponding transaction representing a mint executed from a card payment
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="transactionId">Transaction id</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>NftprimarytransactionGetResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.INftCheckoutPrimaryApiSync.GetNftPrimaryTransactionWithHttpInfo(System.String,System.Int32)">
            <summary>
            Get NFT primary sale transaction by id
            </summary>
            <remarks>
            given a transaction id, returns the corresponding transaction representing a mint executed from a card payment
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="transactionId">Transaction id</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of NftprimarytransactionGetResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.INftCheckoutPrimaryApiSync.GetNftPrimaryTransactions(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Get a list of NFT primary sales transactions
            </summary>
            <remarks>
            Returns a list of NFT primary sales transactions
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="transactionId">Transaction id (optional)</param>
            <param name="contractAddress">Contract address of the asset (optional)</param>
            <param name="sellerWalletAddress">Ethereum address of the seller (optional)</param>
            <param name="userWalletAddress">Ethereum address of the user who wants to create transaction (optional)</param>
            <param name="status">Transaction status (optional)</param>
            <param name="provider">Checkout provider name (optional)</param>
            <param name="mintId">Minting transaction ID - see mintTokens response (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>NftprimarytransactionListTransactionsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.INftCheckoutPrimaryApiSync.GetNftPrimaryTransactionsWithHttpInfo(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Get a list of NFT primary sales transactions
            </summary>
            <remarks>
            Returns a list of NFT primary sales transactions
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="transactionId">Transaction id (optional)</param>
            <param name="contractAddress">Contract address of the asset (optional)</param>
            <param name="sellerWalletAddress">Ethereum address of the seller (optional)</param>
            <param name="userWalletAddress">Ethereum address of the user who wants to create transaction (optional)</param>
            <param name="status">Transaction status (optional)</param>
            <param name="provider">Checkout provider name (optional)</param>
            <param name="mintId">Minting transaction ID - see mintTokens response (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of NftprimarytransactionListTransactionsResponse</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.INftCheckoutPrimaryApiAsync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.INftCheckoutPrimaryApiAsync.GetCurrenciesNFTCheckoutPrimaryAsync(System.String,System.Nullable{System.Boolean},System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get currencies with limits
            </summary>
            <remarks>
            Returns a list of supported currencies and their limits
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="provider">Provider name (optional)</param>
            <param name="includeLimits">Flag if limits should be included in the response or not (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of CurrencyWithLimits</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.INftCheckoutPrimaryApiAsync.GetCurrenciesNFTCheckoutPrimaryWithHttpInfoAsync(System.String,System.Nullable{System.Boolean},System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get currencies with limits
            </summary>
            <remarks>
            Returns a list of supported currencies and their limits
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="provider">Provider name (optional)</param>
            <param name="includeLimits">Flag if limits should be included in the response or not (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (CurrencyWithLimits)</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.INftCheckoutPrimaryApiAsync.GetNftPrimaryTransactionAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get NFT primary sale transaction by id
            </summary>
            <remarks>
            given a transaction id, returns the corresponding transaction representing a mint executed from a card payment
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="transactionId">Transaction id</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of NftprimarytransactionGetResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.INftCheckoutPrimaryApiAsync.GetNftPrimaryTransactionWithHttpInfoAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get NFT primary sale transaction by id
            </summary>
            <remarks>
            given a transaction id, returns the corresponding transaction representing a mint executed from a card payment
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="transactionId">Transaction id</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (NftprimarytransactionGetResponse)</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.INftCheckoutPrimaryApiAsync.GetNftPrimaryTransactionsAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of NFT primary sales transactions
            </summary>
            <remarks>
            Returns a list of NFT primary sales transactions
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="transactionId">Transaction id (optional)</param>
            <param name="contractAddress">Contract address of the asset (optional)</param>
            <param name="sellerWalletAddress">Ethereum address of the seller (optional)</param>
            <param name="userWalletAddress">Ethereum address of the user who wants to create transaction (optional)</param>
            <param name="status">Transaction status (optional)</param>
            <param name="provider">Checkout provider name (optional)</param>
            <param name="mintId">Minting transaction ID - see mintTokens response (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of NftprimarytransactionListTransactionsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.INftCheckoutPrimaryApiAsync.GetNftPrimaryTransactionsWithHttpInfoAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of NFT primary sales transactions
            </summary>
            <remarks>
            Returns a list of NFT primary sales transactions
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="transactionId">Transaction id (optional)</param>
            <param name="contractAddress">Contract address of the asset (optional)</param>
            <param name="sellerWalletAddress">Ethereum address of the seller (optional)</param>
            <param name="userWalletAddress">Ethereum address of the user who wants to create transaction (optional)</param>
            <param name="status">Transaction status (optional)</param>
            <param name="provider">Checkout provider name (optional)</param>
            <param name="mintId">Minting transaction ID - see mintTokens response (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (NftprimarytransactionListTransactionsResponse)</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.INftCheckoutPrimaryApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.NftCheckoutPrimaryApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.NftCheckoutPrimaryApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.NftCheckoutPrimaryApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.NftCheckoutPrimaryApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.NftCheckoutPrimaryApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.NftCheckoutPrimaryApi.#ctor(Imx.Sdk.Gen.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.NftCheckoutPrimaryApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.NftCheckoutPrimaryApi.#ctor(Imx.Sdk.Gen.Client.ISynchronousClient,Imx.Sdk.Gen.Client.IAsynchronousClient,Imx.Sdk.Gen.Client.IReadableConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.NftCheckoutPrimaryApi"/> class
            using a Configuration object and client instance.
            </summary>
            <param name="client">The client interface for synchronous API access.</param>
            <param name="asyncClient">The client interface for asynchronous API access.</param>
            <param name="configuration">The configuration object.</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.NftCheckoutPrimaryApi.AsynchronousClient">
            <summary>
            The client for accessing this underlying API asynchronously.
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.NftCheckoutPrimaryApi.Client">
            <summary>
            The client for accessing this underlying API synchronously.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.NftCheckoutPrimaryApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.NftCheckoutPrimaryApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.NftCheckoutPrimaryApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.NftCheckoutPrimaryApi.GetCurrenciesNFTCheckoutPrimary(System.String,System.Nullable{System.Boolean},System.Int32)">
            <summary>
            Get currencies with limits Returns a list of supported currencies and their limits
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="provider">Provider name (optional)</param>
            <param name="includeLimits">Flag if limits should be included in the response or not (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>CurrencyWithLimits</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.NftCheckoutPrimaryApi.GetCurrenciesNFTCheckoutPrimaryWithHttpInfo(System.String,System.Nullable{System.Boolean},System.Int32)">
            <summary>
            Get currencies with limits Returns a list of supported currencies and their limits
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="provider">Provider name (optional)</param>
            <param name="includeLimits">Flag if limits should be included in the response or not (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of CurrencyWithLimits</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.NftCheckoutPrimaryApi.GetCurrenciesNFTCheckoutPrimaryAsync(System.String,System.Nullable{System.Boolean},System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get currencies with limits Returns a list of supported currencies and their limits
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="provider">Provider name (optional)</param>
            <param name="includeLimits">Flag if limits should be included in the response or not (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of CurrencyWithLimits</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.NftCheckoutPrimaryApi.GetCurrenciesNFTCheckoutPrimaryWithHttpInfoAsync(System.String,System.Nullable{System.Boolean},System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get currencies with limits Returns a list of supported currencies and their limits
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="provider">Provider name (optional)</param>
            <param name="includeLimits">Flag if limits should be included in the response or not (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (CurrencyWithLimits)</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.NftCheckoutPrimaryApi.GetNftPrimaryTransaction(System.String,System.Int32)">
            <summary>
            Get NFT primary sale transaction by id given a transaction id, returns the corresponding transaction representing a mint executed from a card payment
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="transactionId">Transaction id</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>NftprimarytransactionGetResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.NftCheckoutPrimaryApi.GetNftPrimaryTransactionWithHttpInfo(System.String,System.Int32)">
            <summary>
            Get NFT primary sale transaction by id given a transaction id, returns the corresponding transaction representing a mint executed from a card payment
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="transactionId">Transaction id</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of NftprimarytransactionGetResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.NftCheckoutPrimaryApi.GetNftPrimaryTransactionAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get NFT primary sale transaction by id given a transaction id, returns the corresponding transaction representing a mint executed from a card payment
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="transactionId">Transaction id</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of NftprimarytransactionGetResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.NftCheckoutPrimaryApi.GetNftPrimaryTransactionWithHttpInfoAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get NFT primary sale transaction by id given a transaction id, returns the corresponding transaction representing a mint executed from a card payment
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="transactionId">Transaction id</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (NftprimarytransactionGetResponse)</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.NftCheckoutPrimaryApi.GetNftPrimaryTransactions(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Get a list of NFT primary sales transactions Returns a list of NFT primary sales transactions
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="transactionId">Transaction id (optional)</param>
            <param name="contractAddress">Contract address of the asset (optional)</param>
            <param name="sellerWalletAddress">Ethereum address of the seller (optional)</param>
            <param name="userWalletAddress">Ethereum address of the user who wants to create transaction (optional)</param>
            <param name="status">Transaction status (optional)</param>
            <param name="provider">Checkout provider name (optional)</param>
            <param name="mintId">Minting transaction ID - see mintTokens response (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>NftprimarytransactionListTransactionsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.NftCheckoutPrimaryApi.GetNftPrimaryTransactionsWithHttpInfo(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Get a list of NFT primary sales transactions Returns a list of NFT primary sales transactions
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="transactionId">Transaction id (optional)</param>
            <param name="contractAddress">Contract address of the asset (optional)</param>
            <param name="sellerWalletAddress">Ethereum address of the seller (optional)</param>
            <param name="userWalletAddress">Ethereum address of the user who wants to create transaction (optional)</param>
            <param name="status">Transaction status (optional)</param>
            <param name="provider">Checkout provider name (optional)</param>
            <param name="mintId">Minting transaction ID - see mintTokens response (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of NftprimarytransactionListTransactionsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.NftCheckoutPrimaryApi.GetNftPrimaryTransactionsAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of NFT primary sales transactions Returns a list of NFT primary sales transactions
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="transactionId">Transaction id (optional)</param>
            <param name="contractAddress">Contract address of the asset (optional)</param>
            <param name="sellerWalletAddress">Ethereum address of the seller (optional)</param>
            <param name="userWalletAddress">Ethereum address of the user who wants to create transaction (optional)</param>
            <param name="status">Transaction status (optional)</param>
            <param name="provider">Checkout provider name (optional)</param>
            <param name="mintId">Minting transaction ID - see mintTokens response (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of NftprimarytransactionListTransactionsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.NftCheckoutPrimaryApi.GetNftPrimaryTransactionsWithHttpInfoAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of NFT primary sales transactions Returns a list of NFT primary sales transactions
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="transactionId">Transaction id (optional)</param>
            <param name="contractAddress">Contract address of the asset (optional)</param>
            <param name="sellerWalletAddress">Ethereum address of the seller (optional)</param>
            <param name="userWalletAddress">Ethereum address of the user who wants to create transaction (optional)</param>
            <param name="status">Transaction status (optional)</param>
            <param name="provider">Checkout provider name (optional)</param>
            <param name="mintId">Minting transaction ID - see mintTokens response (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (NftprimarytransactionListTransactionsResponse)</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.IOrdersApiSync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IOrdersApiSync.GetOrder(System.String,System.Nullable{System.Boolean},System.String,System.String,System.Int32)">
            <summary>
            Get details of an order with the given ID
            </summary>
            <remarks>
            Get details of an order with the given ID
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Order ID</param>
            <param name="includeFees">Set flag to true to include fee body for the order (optional)</param>
            <param name="auxiliaryFeePercentages">Comma separated string of fee percentages that are to be paired with auxiliary_fee_recipients (optional)</param>
            <param name="auxiliaryFeeRecipients">Comma separated string of fee recipients that are to be paired with auxiliary_fee_percentages (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>Order</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IOrdersApiSync.GetOrderWithHttpInfo(System.String,System.Nullable{System.Boolean},System.String,System.String,System.Int32)">
            <summary>
            Get details of an order with the given ID
            </summary>
            <remarks>
            Get details of an order with the given ID
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Order ID</param>
            <param name="includeFees">Set flag to true to include fee body for the order (optional)</param>
            <param name="auxiliaryFeePercentages">Comma separated string of fee percentages that are to be paired with auxiliary_fee_recipients (optional)</param>
            <param name="auxiliaryFeeRecipients">Comma separated string of fee recipients that are to be paired with auxiliary_fee_percentages (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of Order</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IOrdersApiSync.ListOrders(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Int32)">
            <summary>
            Get a list of orders
            </summary>
            <remarks>
            Get a list of orders
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this order (optional)</param>
            <param name="status">Status of this order (optional)</param>
            <param name="minTimestamp">Minimum created at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum created at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="updatedMinTimestamp">Minimum updated at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="updatedMaxTimestamp">Maximum updated at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="buyTokenType">Token type of the asset this order buys (optional)</param>
            <param name="buyTokenId">ERC721 Token ID of the asset this order buys (optional)</param>
            <param name="buyAssetId">Internal IMX ID of the asset this order buys (optional)</param>
            <param name="buyTokenAddress">Token address of the asset this order buys (optional)</param>
            <param name="buyTokenName">Token name of the asset this order buys (optional)</param>
            <param name="buyMinQuantity">Min quantity for the asset this order buys (optional)</param>
            <param name="buyMaxQuantity">Max quantity for the asset this order buys (optional)</param>
            <param name="buyMetadata">JSON-encoded metadata filters for the asset this order buys (optional)</param>
            <param name="sellTokenType">Token type of the asset this order sells (optional)</param>
            <param name="sellTokenId">ERC721 Token ID of the asset this order sells (optional)</param>
            <param name="sellAssetId">Internal IMX ID of the asset this order sells (optional)</param>
            <param name="sellTokenAddress">Token address of the asset this order sells (optional)</param>
            <param name="sellTokenName">Token name of the asset this order sells (optional)</param>
            <param name="sellMinQuantity">Min quantity for the asset this order sells (optional)</param>
            <param name="sellMaxQuantity">Max quantity for the asset this order sells (optional)</param>
            <param name="sellMetadata">JSON-encoded metadata filters for the asset this order sells (optional)</param>
            <param name="auxiliaryFeePercentages">Comma separated string of fee percentages that are to be paired with auxiliary_fee_recipients (optional)</param>
            <param name="auxiliaryFeeRecipients">Comma separated string of fee recipients that are to be paired with auxiliary_fee_percentages (optional)</param>
            <param name="includeFees">Set flag to true to include fee object for orders (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ListOrdersResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IOrdersApiSync.ListOrdersWithHttpInfo(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Int32)">
            <summary>
            Get a list of orders
            </summary>
            <remarks>
            Get a list of orders
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this order (optional)</param>
            <param name="status">Status of this order (optional)</param>
            <param name="minTimestamp">Minimum created at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum created at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="updatedMinTimestamp">Minimum updated at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="updatedMaxTimestamp">Maximum updated at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="buyTokenType">Token type of the asset this order buys (optional)</param>
            <param name="buyTokenId">ERC721 Token ID of the asset this order buys (optional)</param>
            <param name="buyAssetId">Internal IMX ID of the asset this order buys (optional)</param>
            <param name="buyTokenAddress">Token address of the asset this order buys (optional)</param>
            <param name="buyTokenName">Token name of the asset this order buys (optional)</param>
            <param name="buyMinQuantity">Min quantity for the asset this order buys (optional)</param>
            <param name="buyMaxQuantity">Max quantity for the asset this order buys (optional)</param>
            <param name="buyMetadata">JSON-encoded metadata filters for the asset this order buys (optional)</param>
            <param name="sellTokenType">Token type of the asset this order sells (optional)</param>
            <param name="sellTokenId">ERC721 Token ID of the asset this order sells (optional)</param>
            <param name="sellAssetId">Internal IMX ID of the asset this order sells (optional)</param>
            <param name="sellTokenAddress">Token address of the asset this order sells (optional)</param>
            <param name="sellTokenName">Token name of the asset this order sells (optional)</param>
            <param name="sellMinQuantity">Min quantity for the asset this order sells (optional)</param>
            <param name="sellMaxQuantity">Max quantity for the asset this order sells (optional)</param>
            <param name="sellMetadata">JSON-encoded metadata filters for the asset this order sells (optional)</param>
            <param name="auxiliaryFeePercentages">Comma separated string of fee percentages that are to be paired with auxiliary_fee_recipients (optional)</param>
            <param name="auxiliaryFeeRecipients">Comma separated string of fee recipients that are to be paired with auxiliary_fee_percentages (optional)</param>
            <param name="includeFees">Set flag to true to include fee object for orders (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of ListOrdersResponse</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.IOrdersApiAsync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IOrdersApiAsync.GetOrderAsync(System.String,System.Nullable{System.Boolean},System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get details of an order with the given ID
            </summary>
            <remarks>
            Get details of an order with the given ID
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Order ID</param>
            <param name="includeFees">Set flag to true to include fee body for the order (optional)</param>
            <param name="auxiliaryFeePercentages">Comma separated string of fee percentages that are to be paired with auxiliary_fee_recipients (optional)</param>
            <param name="auxiliaryFeeRecipients">Comma separated string of fee recipients that are to be paired with auxiliary_fee_percentages (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Order</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IOrdersApiAsync.GetOrderWithHttpInfoAsync(System.String,System.Nullable{System.Boolean},System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get details of an order with the given ID
            </summary>
            <remarks>
            Get details of an order with the given ID
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Order ID</param>
            <param name="includeFees">Set flag to true to include fee body for the order (optional)</param>
            <param name="auxiliaryFeePercentages">Comma separated string of fee percentages that are to be paired with auxiliary_fee_recipients (optional)</param>
            <param name="auxiliaryFeeRecipients">Comma separated string of fee recipients that are to be paired with auxiliary_fee_percentages (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (Order)</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IOrdersApiAsync.ListOrdersAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of orders
            </summary>
            <remarks>
            Get a list of orders
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this order (optional)</param>
            <param name="status">Status of this order (optional)</param>
            <param name="minTimestamp">Minimum created at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum created at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="updatedMinTimestamp">Minimum updated at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="updatedMaxTimestamp">Maximum updated at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="buyTokenType">Token type of the asset this order buys (optional)</param>
            <param name="buyTokenId">ERC721 Token ID of the asset this order buys (optional)</param>
            <param name="buyAssetId">Internal IMX ID of the asset this order buys (optional)</param>
            <param name="buyTokenAddress">Token address of the asset this order buys (optional)</param>
            <param name="buyTokenName">Token name of the asset this order buys (optional)</param>
            <param name="buyMinQuantity">Min quantity for the asset this order buys (optional)</param>
            <param name="buyMaxQuantity">Max quantity for the asset this order buys (optional)</param>
            <param name="buyMetadata">JSON-encoded metadata filters for the asset this order buys (optional)</param>
            <param name="sellTokenType">Token type of the asset this order sells (optional)</param>
            <param name="sellTokenId">ERC721 Token ID of the asset this order sells (optional)</param>
            <param name="sellAssetId">Internal IMX ID of the asset this order sells (optional)</param>
            <param name="sellTokenAddress">Token address of the asset this order sells (optional)</param>
            <param name="sellTokenName">Token name of the asset this order sells (optional)</param>
            <param name="sellMinQuantity">Min quantity for the asset this order sells (optional)</param>
            <param name="sellMaxQuantity">Max quantity for the asset this order sells (optional)</param>
            <param name="sellMetadata">JSON-encoded metadata filters for the asset this order sells (optional)</param>
            <param name="auxiliaryFeePercentages">Comma separated string of fee percentages that are to be paired with auxiliary_fee_recipients (optional)</param>
            <param name="auxiliaryFeeRecipients">Comma separated string of fee recipients that are to be paired with auxiliary_fee_percentages (optional)</param>
            <param name="includeFees">Set flag to true to include fee object for orders (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ListOrdersResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IOrdersApiAsync.ListOrdersWithHttpInfoAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of orders
            </summary>
            <remarks>
            Get a list of orders
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this order (optional)</param>
            <param name="status">Status of this order (optional)</param>
            <param name="minTimestamp">Minimum created at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum created at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="updatedMinTimestamp">Minimum updated at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="updatedMaxTimestamp">Maximum updated at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="buyTokenType">Token type of the asset this order buys (optional)</param>
            <param name="buyTokenId">ERC721 Token ID of the asset this order buys (optional)</param>
            <param name="buyAssetId">Internal IMX ID of the asset this order buys (optional)</param>
            <param name="buyTokenAddress">Token address of the asset this order buys (optional)</param>
            <param name="buyTokenName">Token name of the asset this order buys (optional)</param>
            <param name="buyMinQuantity">Min quantity for the asset this order buys (optional)</param>
            <param name="buyMaxQuantity">Max quantity for the asset this order buys (optional)</param>
            <param name="buyMetadata">JSON-encoded metadata filters for the asset this order buys (optional)</param>
            <param name="sellTokenType">Token type of the asset this order sells (optional)</param>
            <param name="sellTokenId">ERC721 Token ID of the asset this order sells (optional)</param>
            <param name="sellAssetId">Internal IMX ID of the asset this order sells (optional)</param>
            <param name="sellTokenAddress">Token address of the asset this order sells (optional)</param>
            <param name="sellTokenName">Token name of the asset this order sells (optional)</param>
            <param name="sellMinQuantity">Min quantity for the asset this order sells (optional)</param>
            <param name="sellMaxQuantity">Max quantity for the asset this order sells (optional)</param>
            <param name="sellMetadata">JSON-encoded metadata filters for the asset this order sells (optional)</param>
            <param name="auxiliaryFeePercentages">Comma separated string of fee percentages that are to be paired with auxiliary_fee_recipients (optional)</param>
            <param name="auxiliaryFeeRecipients">Comma separated string of fee recipients that are to be paired with auxiliary_fee_percentages (optional)</param>
            <param name="includeFees">Set flag to true to include fee object for orders (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ListOrdersResponse)</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.IOrdersApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.OrdersApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.OrdersApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.OrdersApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.OrdersApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.OrdersApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.OrdersApi.#ctor(Imx.Sdk.Gen.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.OrdersApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.OrdersApi.#ctor(Imx.Sdk.Gen.Client.ISynchronousClient,Imx.Sdk.Gen.Client.IAsynchronousClient,Imx.Sdk.Gen.Client.IReadableConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.OrdersApi"/> class
            using a Configuration object and client instance.
            </summary>
            <param name="client">The client interface for synchronous API access.</param>
            <param name="asyncClient">The client interface for asynchronous API access.</param>
            <param name="configuration">The configuration object.</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.OrdersApi.AsynchronousClient">
            <summary>
            The client for accessing this underlying API asynchronously.
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.OrdersApi.Client">
            <summary>
            The client for accessing this underlying API synchronously.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.OrdersApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.OrdersApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.OrdersApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.OrdersApi.GetOrder(System.String,System.Nullable{System.Boolean},System.String,System.String,System.Int32)">
            <summary>
            Get details of an order with the given ID Get details of an order with the given ID
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Order ID</param>
            <param name="includeFees">Set flag to true to include fee body for the order (optional)</param>
            <param name="auxiliaryFeePercentages">Comma separated string of fee percentages that are to be paired with auxiliary_fee_recipients (optional)</param>
            <param name="auxiliaryFeeRecipients">Comma separated string of fee recipients that are to be paired with auxiliary_fee_percentages (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>Order</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.OrdersApi.GetOrderWithHttpInfo(System.String,System.Nullable{System.Boolean},System.String,System.String,System.Int32)">
            <summary>
            Get details of an order with the given ID Get details of an order with the given ID
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Order ID</param>
            <param name="includeFees">Set flag to true to include fee body for the order (optional)</param>
            <param name="auxiliaryFeePercentages">Comma separated string of fee percentages that are to be paired with auxiliary_fee_recipients (optional)</param>
            <param name="auxiliaryFeeRecipients">Comma separated string of fee recipients that are to be paired with auxiliary_fee_percentages (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of Order</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.OrdersApi.GetOrderAsync(System.String,System.Nullable{System.Boolean},System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get details of an order with the given ID Get details of an order with the given ID
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Order ID</param>
            <param name="includeFees">Set flag to true to include fee body for the order (optional)</param>
            <param name="auxiliaryFeePercentages">Comma separated string of fee percentages that are to be paired with auxiliary_fee_recipients (optional)</param>
            <param name="auxiliaryFeeRecipients">Comma separated string of fee recipients that are to be paired with auxiliary_fee_percentages (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Order</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.OrdersApi.GetOrderWithHttpInfoAsync(System.String,System.Nullable{System.Boolean},System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get details of an order with the given ID Get details of an order with the given ID
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Order ID</param>
            <param name="includeFees">Set flag to true to include fee body for the order (optional)</param>
            <param name="auxiliaryFeePercentages">Comma separated string of fee percentages that are to be paired with auxiliary_fee_recipients (optional)</param>
            <param name="auxiliaryFeeRecipients">Comma separated string of fee recipients that are to be paired with auxiliary_fee_percentages (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (Order)</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.OrdersApi.ListOrders(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Int32)">
            <summary>
            Get a list of orders Get a list of orders
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this order (optional)</param>
            <param name="status">Status of this order (optional)</param>
            <param name="minTimestamp">Minimum created at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum created at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="updatedMinTimestamp">Minimum updated at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="updatedMaxTimestamp">Maximum updated at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="buyTokenType">Token type of the asset this order buys (optional)</param>
            <param name="buyTokenId">ERC721 Token ID of the asset this order buys (optional)</param>
            <param name="buyAssetId">Internal IMX ID of the asset this order buys (optional)</param>
            <param name="buyTokenAddress">Token address of the asset this order buys (optional)</param>
            <param name="buyTokenName">Token name of the asset this order buys (optional)</param>
            <param name="buyMinQuantity">Min quantity for the asset this order buys (optional)</param>
            <param name="buyMaxQuantity">Max quantity for the asset this order buys (optional)</param>
            <param name="buyMetadata">JSON-encoded metadata filters for the asset this order buys (optional)</param>
            <param name="sellTokenType">Token type of the asset this order sells (optional)</param>
            <param name="sellTokenId">ERC721 Token ID of the asset this order sells (optional)</param>
            <param name="sellAssetId">Internal IMX ID of the asset this order sells (optional)</param>
            <param name="sellTokenAddress">Token address of the asset this order sells (optional)</param>
            <param name="sellTokenName">Token name of the asset this order sells (optional)</param>
            <param name="sellMinQuantity">Min quantity for the asset this order sells (optional)</param>
            <param name="sellMaxQuantity">Max quantity for the asset this order sells (optional)</param>
            <param name="sellMetadata">JSON-encoded metadata filters for the asset this order sells (optional)</param>
            <param name="auxiliaryFeePercentages">Comma separated string of fee percentages that are to be paired with auxiliary_fee_recipients (optional)</param>
            <param name="auxiliaryFeeRecipients">Comma separated string of fee recipients that are to be paired with auxiliary_fee_percentages (optional)</param>
            <param name="includeFees">Set flag to true to include fee object for orders (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ListOrdersResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.OrdersApi.ListOrdersWithHttpInfo(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Int32)">
            <summary>
            Get a list of orders Get a list of orders
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this order (optional)</param>
            <param name="status">Status of this order (optional)</param>
            <param name="minTimestamp">Minimum created at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum created at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="updatedMinTimestamp">Minimum updated at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="updatedMaxTimestamp">Maximum updated at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="buyTokenType">Token type of the asset this order buys (optional)</param>
            <param name="buyTokenId">ERC721 Token ID of the asset this order buys (optional)</param>
            <param name="buyAssetId">Internal IMX ID of the asset this order buys (optional)</param>
            <param name="buyTokenAddress">Token address of the asset this order buys (optional)</param>
            <param name="buyTokenName">Token name of the asset this order buys (optional)</param>
            <param name="buyMinQuantity">Min quantity for the asset this order buys (optional)</param>
            <param name="buyMaxQuantity">Max quantity for the asset this order buys (optional)</param>
            <param name="buyMetadata">JSON-encoded metadata filters for the asset this order buys (optional)</param>
            <param name="sellTokenType">Token type of the asset this order sells (optional)</param>
            <param name="sellTokenId">ERC721 Token ID of the asset this order sells (optional)</param>
            <param name="sellAssetId">Internal IMX ID of the asset this order sells (optional)</param>
            <param name="sellTokenAddress">Token address of the asset this order sells (optional)</param>
            <param name="sellTokenName">Token name of the asset this order sells (optional)</param>
            <param name="sellMinQuantity">Min quantity for the asset this order sells (optional)</param>
            <param name="sellMaxQuantity">Max quantity for the asset this order sells (optional)</param>
            <param name="sellMetadata">JSON-encoded metadata filters for the asset this order sells (optional)</param>
            <param name="auxiliaryFeePercentages">Comma separated string of fee percentages that are to be paired with auxiliary_fee_recipients (optional)</param>
            <param name="auxiliaryFeeRecipients">Comma separated string of fee recipients that are to be paired with auxiliary_fee_percentages (optional)</param>
            <param name="includeFees">Set flag to true to include fee object for orders (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of ListOrdersResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.OrdersApi.ListOrdersAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of orders Get a list of orders
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this order (optional)</param>
            <param name="status">Status of this order (optional)</param>
            <param name="minTimestamp">Minimum created at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum created at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="updatedMinTimestamp">Minimum updated at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="updatedMaxTimestamp">Maximum updated at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="buyTokenType">Token type of the asset this order buys (optional)</param>
            <param name="buyTokenId">ERC721 Token ID of the asset this order buys (optional)</param>
            <param name="buyAssetId">Internal IMX ID of the asset this order buys (optional)</param>
            <param name="buyTokenAddress">Token address of the asset this order buys (optional)</param>
            <param name="buyTokenName">Token name of the asset this order buys (optional)</param>
            <param name="buyMinQuantity">Min quantity for the asset this order buys (optional)</param>
            <param name="buyMaxQuantity">Max quantity for the asset this order buys (optional)</param>
            <param name="buyMetadata">JSON-encoded metadata filters for the asset this order buys (optional)</param>
            <param name="sellTokenType">Token type of the asset this order sells (optional)</param>
            <param name="sellTokenId">ERC721 Token ID of the asset this order sells (optional)</param>
            <param name="sellAssetId">Internal IMX ID of the asset this order sells (optional)</param>
            <param name="sellTokenAddress">Token address of the asset this order sells (optional)</param>
            <param name="sellTokenName">Token name of the asset this order sells (optional)</param>
            <param name="sellMinQuantity">Min quantity for the asset this order sells (optional)</param>
            <param name="sellMaxQuantity">Max quantity for the asset this order sells (optional)</param>
            <param name="sellMetadata">JSON-encoded metadata filters for the asset this order sells (optional)</param>
            <param name="auxiliaryFeePercentages">Comma separated string of fee percentages that are to be paired with auxiliary_fee_recipients (optional)</param>
            <param name="auxiliaryFeeRecipients">Comma separated string of fee recipients that are to be paired with auxiliary_fee_percentages (optional)</param>
            <param name="includeFees">Set flag to true to include fee object for orders (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ListOrdersResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.OrdersApi.ListOrdersWithHttpInfoAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of orders Get a list of orders
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this order (optional)</param>
            <param name="status">Status of this order (optional)</param>
            <param name="minTimestamp">Minimum created at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum created at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="updatedMinTimestamp">Minimum updated at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="updatedMaxTimestamp">Maximum updated at timestamp for this order, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="buyTokenType">Token type of the asset this order buys (optional)</param>
            <param name="buyTokenId">ERC721 Token ID of the asset this order buys (optional)</param>
            <param name="buyAssetId">Internal IMX ID of the asset this order buys (optional)</param>
            <param name="buyTokenAddress">Token address of the asset this order buys (optional)</param>
            <param name="buyTokenName">Token name of the asset this order buys (optional)</param>
            <param name="buyMinQuantity">Min quantity for the asset this order buys (optional)</param>
            <param name="buyMaxQuantity">Max quantity for the asset this order buys (optional)</param>
            <param name="buyMetadata">JSON-encoded metadata filters for the asset this order buys (optional)</param>
            <param name="sellTokenType">Token type of the asset this order sells (optional)</param>
            <param name="sellTokenId">ERC721 Token ID of the asset this order sells (optional)</param>
            <param name="sellAssetId">Internal IMX ID of the asset this order sells (optional)</param>
            <param name="sellTokenAddress">Token address of the asset this order sells (optional)</param>
            <param name="sellTokenName">Token name of the asset this order sells (optional)</param>
            <param name="sellMinQuantity">Min quantity for the asset this order sells (optional)</param>
            <param name="sellMaxQuantity">Max quantity for the asset this order sells (optional)</param>
            <param name="sellMetadata">JSON-encoded metadata filters for the asset this order sells (optional)</param>
            <param name="auxiliaryFeePercentages">Comma separated string of fee percentages that are to be paired with auxiliary_fee_recipients (optional)</param>
            <param name="auxiliaryFeeRecipients">Comma separated string of fee recipients that are to be paired with auxiliary_fee_percentages (optional)</param>
            <param name="includeFees">Set flag to true to include fee object for orders (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ListOrdersResponse)</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.ITokensApiSync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ITokensApiSync.GetToken(System.String,System.Int32)">
            <summary>
            Get details of a token
            </summary>
            <remarks>
            Get details of a token
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Token Contract Address</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>TokenDetails</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ITokensApiSync.GetTokenWithHttpInfo(System.String,System.Int32)">
            <summary>
            Get details of a token
            </summary>
            <remarks>
            Get details of a token
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Token Contract Address</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of TokenDetails</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ITokensApiSync.ListTokens(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Get a list of tokens
            </summary>
            <remarks>
            Get a list of tokens
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="address">Contract address of the token (optional)</param>
            <param name="symbols">Token symbols for the token, e.g. ?symbols&#x3D;IMX,ETH (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ListTokensResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ITokensApiSync.ListTokensWithHttpInfo(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Get a list of tokens
            </summary>
            <remarks>
            Get a list of tokens
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="address">Contract address of the token (optional)</param>
            <param name="symbols">Token symbols for the token, e.g. ?symbols&#x3D;IMX,ETH (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of ListTokensResponse</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.ITokensApiAsync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ITokensApiAsync.GetTokenAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get details of a token
            </summary>
            <remarks>
            Get details of a token
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Token Contract Address</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TokenDetails</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ITokensApiAsync.GetTokenWithHttpInfoAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get details of a token
            </summary>
            <remarks>
            Get details of a token
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Token Contract Address</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TokenDetails)</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ITokensApiAsync.ListTokensAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of tokens
            </summary>
            <remarks>
            Get a list of tokens
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="address">Contract address of the token (optional)</param>
            <param name="symbols">Token symbols for the token, e.g. ?symbols&#x3D;IMX,ETH (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ListTokensResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ITokensApiAsync.ListTokensWithHttpInfoAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of tokens
            </summary>
            <remarks>
            Get a list of tokens
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="address">Contract address of the token (optional)</param>
            <param name="symbols">Token symbols for the token, e.g. ?symbols&#x3D;IMX,ETH (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ListTokensResponse)</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.ITokensApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.TokensApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.TokensApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.TokensApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.TokensApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.TokensApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.TokensApi.#ctor(Imx.Sdk.Gen.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.TokensApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.TokensApi.#ctor(Imx.Sdk.Gen.Client.ISynchronousClient,Imx.Sdk.Gen.Client.IAsynchronousClient,Imx.Sdk.Gen.Client.IReadableConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.TokensApi"/> class
            using a Configuration object and client instance.
            </summary>
            <param name="client">The client interface for synchronous API access.</param>
            <param name="asyncClient">The client interface for asynchronous API access.</param>
            <param name="configuration">The configuration object.</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.TokensApi.AsynchronousClient">
            <summary>
            The client for accessing this underlying API asynchronously.
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.TokensApi.Client">
            <summary>
            The client for accessing this underlying API synchronously.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.TokensApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.TokensApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.TokensApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.TokensApi.GetToken(System.String,System.Int32)">
            <summary>
            Get details of a token Get details of a token
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Token Contract Address</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>TokenDetails</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.TokensApi.GetTokenWithHttpInfo(System.String,System.Int32)">
            <summary>
            Get details of a token Get details of a token
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Token Contract Address</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of TokenDetails</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.TokensApi.GetTokenAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get details of a token Get details of a token
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Token Contract Address</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of TokenDetails</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.TokensApi.GetTokenWithHttpInfoAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get details of a token Get details of a token
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="address">Token Contract Address</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (TokenDetails)</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.TokensApi.ListTokens(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Get a list of tokens Get a list of tokens
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="address">Contract address of the token (optional)</param>
            <param name="symbols">Token symbols for the token, e.g. ?symbols&#x3D;IMX,ETH (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ListTokensResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.TokensApi.ListTokensWithHttpInfo(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Get a list of tokens Get a list of tokens
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="address">Contract address of the token (optional)</param>
            <param name="symbols">Token symbols for the token, e.g. ?symbols&#x3D;IMX,ETH (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of ListTokensResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.TokensApi.ListTokensAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of tokens Get a list of tokens
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="address">Contract address of the token (optional)</param>
            <param name="symbols">Token symbols for the token, e.g. ?symbols&#x3D;IMX,ETH (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ListTokensResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.TokensApi.ListTokensWithHttpInfoAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of tokens Get a list of tokens
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="address">Contract address of the token (optional)</param>
            <param name="symbols">Token symbols for the token, e.g. ?symbols&#x3D;IMX,ETH (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ListTokensResponse)</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.ITradesApiSync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ITradesApiSync.GetTrade(System.String,System.Int32)">
            <summary>
            Get details of a trade with the given ID
            </summary>
            <remarks>
            Get details of a trade with the given ID
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Trade ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>Trade</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ITradesApiSync.GetTradeWithHttpInfo(System.String,System.Int32)">
            <summary>
            Get details of a trade with the given ID
            </summary>
            <remarks>
            Get details of a trade with the given ID
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Trade ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of Trade</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ITradesApiSync.ListTrades(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Get a list of trades
            </summary>
            <remarks>
            Get a list of trades
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="partyATokenType">Party A&#39;s (buy order) token type of currency used to buy (optional)</param>
            <param name="partyATokenAddress">Party A&#39;s (buy order) token address of currency used to buy (optional)</param>
            <param name="partyBTokenType">Party B&#39;s (sell order) token type of NFT sold - always ERC721 (optional)</param>
            <param name="partyBTokenAddress">Party B&#39;s (sell order) collection address of NFT sold (optional)</param>
            <param name="partyBTokenId">Party B&#39;s (sell order) token id of NFT sold (optional)</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this trade, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this trade, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ListTradesResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ITradesApiSync.ListTradesWithHttpInfo(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Get a list of trades
            </summary>
            <remarks>
            Get a list of trades
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="partyATokenType">Party A&#39;s (buy order) token type of currency used to buy (optional)</param>
            <param name="partyATokenAddress">Party A&#39;s (buy order) token address of currency used to buy (optional)</param>
            <param name="partyBTokenType">Party B&#39;s (sell order) token type of NFT sold - always ERC721 (optional)</param>
            <param name="partyBTokenAddress">Party B&#39;s (sell order) collection address of NFT sold (optional)</param>
            <param name="partyBTokenId">Party B&#39;s (sell order) token id of NFT sold (optional)</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this trade, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this trade, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of ListTradesResponse</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.ITradesApiAsync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ITradesApiAsync.GetTradeAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get details of a trade with the given ID
            </summary>
            <remarks>
            Get details of a trade with the given ID
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Trade ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Trade</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ITradesApiAsync.GetTradeWithHttpInfoAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get details of a trade with the given ID
            </summary>
            <remarks>
            Get details of a trade with the given ID
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Trade ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (Trade)</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ITradesApiAsync.ListTradesAsync(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of trades
            </summary>
            <remarks>
            Get a list of trades
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="partyATokenType">Party A&#39;s (buy order) token type of currency used to buy (optional)</param>
            <param name="partyATokenAddress">Party A&#39;s (buy order) token address of currency used to buy (optional)</param>
            <param name="partyBTokenType">Party B&#39;s (sell order) token type of NFT sold - always ERC721 (optional)</param>
            <param name="partyBTokenAddress">Party B&#39;s (sell order) collection address of NFT sold (optional)</param>
            <param name="partyBTokenId">Party B&#39;s (sell order) token id of NFT sold (optional)</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this trade, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this trade, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ListTradesResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ITradesApiAsync.ListTradesWithHttpInfoAsync(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of trades
            </summary>
            <remarks>
            Get a list of trades
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="partyATokenType">Party A&#39;s (buy order) token type of currency used to buy (optional)</param>
            <param name="partyATokenAddress">Party A&#39;s (buy order) token address of currency used to buy (optional)</param>
            <param name="partyBTokenType">Party B&#39;s (sell order) token type of NFT sold - always ERC721 (optional)</param>
            <param name="partyBTokenAddress">Party B&#39;s (sell order) collection address of NFT sold (optional)</param>
            <param name="partyBTokenId">Party B&#39;s (sell order) token id of NFT sold (optional)</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this trade, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this trade, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ListTradesResponse)</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.ITradesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.TradesApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.TradesApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.TradesApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.TradesApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.TradesApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.TradesApi.#ctor(Imx.Sdk.Gen.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.TradesApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.TradesApi.#ctor(Imx.Sdk.Gen.Client.ISynchronousClient,Imx.Sdk.Gen.Client.IAsynchronousClient,Imx.Sdk.Gen.Client.IReadableConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.TradesApi"/> class
            using a Configuration object and client instance.
            </summary>
            <param name="client">The client interface for synchronous API access.</param>
            <param name="asyncClient">The client interface for asynchronous API access.</param>
            <param name="configuration">The configuration object.</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.TradesApi.AsynchronousClient">
            <summary>
            The client for accessing this underlying API asynchronously.
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.TradesApi.Client">
            <summary>
            The client for accessing this underlying API synchronously.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.TradesApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.TradesApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.TradesApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.TradesApi.GetTrade(System.String,System.Int32)">
            <summary>
            Get details of a trade with the given ID Get details of a trade with the given ID
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Trade ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>Trade</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.TradesApi.GetTradeWithHttpInfo(System.String,System.Int32)">
            <summary>
            Get details of a trade with the given ID Get details of a trade with the given ID
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Trade ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of Trade</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.TradesApi.GetTradeAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get details of a trade with the given ID Get details of a trade with the given ID
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Trade ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Trade</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.TradesApi.GetTradeWithHttpInfoAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get details of a trade with the given ID Get details of a trade with the given ID
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Trade ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (Trade)</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.TradesApi.ListTrades(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Get a list of trades Get a list of trades
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="partyATokenType">Party A&#39;s (buy order) token type of currency used to buy (optional)</param>
            <param name="partyATokenAddress">Party A&#39;s (buy order) token address of currency used to buy (optional)</param>
            <param name="partyBTokenType">Party B&#39;s (sell order) token type of NFT sold - always ERC721 (optional)</param>
            <param name="partyBTokenAddress">Party B&#39;s (sell order) collection address of NFT sold (optional)</param>
            <param name="partyBTokenId">Party B&#39;s (sell order) token id of NFT sold (optional)</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this trade, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this trade, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ListTradesResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.TradesApi.ListTradesWithHttpInfo(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Get a list of trades Get a list of trades
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="partyATokenType">Party A&#39;s (buy order) token type of currency used to buy (optional)</param>
            <param name="partyATokenAddress">Party A&#39;s (buy order) token address of currency used to buy (optional)</param>
            <param name="partyBTokenType">Party B&#39;s (sell order) token type of NFT sold - always ERC721 (optional)</param>
            <param name="partyBTokenAddress">Party B&#39;s (sell order) collection address of NFT sold (optional)</param>
            <param name="partyBTokenId">Party B&#39;s (sell order) token id of NFT sold (optional)</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this trade, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this trade, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of ListTradesResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.TradesApi.ListTradesAsync(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of trades Get a list of trades
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="partyATokenType">Party A&#39;s (buy order) token type of currency used to buy (optional)</param>
            <param name="partyATokenAddress">Party A&#39;s (buy order) token address of currency used to buy (optional)</param>
            <param name="partyBTokenType">Party B&#39;s (sell order) token type of NFT sold - always ERC721 (optional)</param>
            <param name="partyBTokenAddress">Party B&#39;s (sell order) collection address of NFT sold (optional)</param>
            <param name="partyBTokenId">Party B&#39;s (sell order) token id of NFT sold (optional)</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this trade, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this trade, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ListTradesResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.TradesApi.ListTradesWithHttpInfoAsync(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of trades Get a list of trades
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="partyATokenType">Party A&#39;s (buy order) token type of currency used to buy (optional)</param>
            <param name="partyATokenAddress">Party A&#39;s (buy order) token address of currency used to buy (optional)</param>
            <param name="partyBTokenType">Party B&#39;s (sell order) token type of NFT sold - always ERC721 (optional)</param>
            <param name="partyBTokenAddress">Party B&#39;s (sell order) collection address of NFT sold (optional)</param>
            <param name="partyBTokenId">Party B&#39;s (sell order) token id of NFT sold (optional)</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this trade, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this trade, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ListTradesResponse)</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.ITransfersApiSync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ITransfersApiSync.GetTransfer(System.String,System.Int32)">
            <summary>
            Get details of a transfer with the given ID
            </summary>
            <remarks>
            Get details of a transfer with the given ID
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Transfer ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>Transfer</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ITransfersApiSync.GetTransferWithHttpInfo(System.String,System.Int32)">
            <summary>
            Get details of a transfer with the given ID
            </summary>
            <remarks>
            Get details of a transfer with the given ID
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Transfer ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of Transfer</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ITransfersApiSync.ListTransfers(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Get a list of transfers
            </summary>
            <remarks>
            Get a list of transfers
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this transfer (optional)</param>
            <param name="receiver">Ethereum address of the user who received this transfer (optional)</param>
            <param name="status">Status of this transfer (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this transfer, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this transfer, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the transferred asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the transferred asset (optional)</param>
            <param name="tokenName">Token name of the transferred asset (optional)</param>
            <param name="minQuantity">Max quantity for the transferred asset (optional)</param>
            <param name="maxQuantity">Max quantity for the transferred asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the transferred asset (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ListTransfersResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ITransfersApiSync.ListTransfersWithHttpInfo(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Get a list of transfers
            </summary>
            <remarks>
            Get a list of transfers
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this transfer (optional)</param>
            <param name="receiver">Ethereum address of the user who received this transfer (optional)</param>
            <param name="status">Status of this transfer (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this transfer, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this transfer, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the transferred asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the transferred asset (optional)</param>
            <param name="tokenName">Token name of the transferred asset (optional)</param>
            <param name="minQuantity">Max quantity for the transferred asset (optional)</param>
            <param name="maxQuantity">Max quantity for the transferred asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the transferred asset (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of ListTransfersResponse</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.ITransfersApiAsync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ITransfersApiAsync.GetTransferAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get details of a transfer with the given ID
            </summary>
            <remarks>
            Get details of a transfer with the given ID
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Transfer ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Transfer</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ITransfersApiAsync.GetTransferWithHttpInfoAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get details of a transfer with the given ID
            </summary>
            <remarks>
            Get details of a transfer with the given ID
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Transfer ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (Transfer)</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ITransfersApiAsync.ListTransfersAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of transfers
            </summary>
            <remarks>
            Get a list of transfers
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this transfer (optional)</param>
            <param name="receiver">Ethereum address of the user who received this transfer (optional)</param>
            <param name="status">Status of this transfer (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this transfer, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this transfer, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the transferred asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the transferred asset (optional)</param>
            <param name="tokenName">Token name of the transferred asset (optional)</param>
            <param name="minQuantity">Max quantity for the transferred asset (optional)</param>
            <param name="maxQuantity">Max quantity for the transferred asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the transferred asset (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ListTransfersResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.ITransfersApiAsync.ListTransfersWithHttpInfoAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of transfers
            </summary>
            <remarks>
            Get a list of transfers
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this transfer (optional)</param>
            <param name="receiver">Ethereum address of the user who received this transfer (optional)</param>
            <param name="status">Status of this transfer (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this transfer, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this transfer, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the transferred asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the transferred asset (optional)</param>
            <param name="tokenName">Token name of the transferred asset (optional)</param>
            <param name="minQuantity">Max quantity for the transferred asset (optional)</param>
            <param name="maxQuantity">Max quantity for the transferred asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the transferred asset (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ListTransfersResponse)</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.ITransfersApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.TransfersApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.TransfersApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.TransfersApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.TransfersApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.TransfersApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.TransfersApi.#ctor(Imx.Sdk.Gen.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.TransfersApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.TransfersApi.#ctor(Imx.Sdk.Gen.Client.ISynchronousClient,Imx.Sdk.Gen.Client.IAsynchronousClient,Imx.Sdk.Gen.Client.IReadableConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.TransfersApi"/> class
            using a Configuration object and client instance.
            </summary>
            <param name="client">The client interface for synchronous API access.</param>
            <param name="asyncClient">The client interface for asynchronous API access.</param>
            <param name="configuration">The configuration object.</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.TransfersApi.AsynchronousClient">
            <summary>
            The client for accessing this underlying API asynchronously.
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.TransfersApi.Client">
            <summary>
            The client for accessing this underlying API synchronously.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.TransfersApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.TransfersApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.TransfersApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.TransfersApi.GetTransfer(System.String,System.Int32)">
            <summary>
            Get details of a transfer with the given ID Get details of a transfer with the given ID
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Transfer ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>Transfer</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.TransfersApi.GetTransferWithHttpInfo(System.String,System.Int32)">
            <summary>
            Get details of a transfer with the given ID Get details of a transfer with the given ID
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Transfer ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of Transfer</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.TransfersApi.GetTransferAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get details of a transfer with the given ID Get details of a transfer with the given ID
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Transfer ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Transfer</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.TransfersApi.GetTransferWithHttpInfoAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get details of a transfer with the given ID Get details of a transfer with the given ID
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Transfer ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (Transfer)</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.TransfersApi.ListTransfers(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Get a list of transfers Get a list of transfers
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this transfer (optional)</param>
            <param name="receiver">Ethereum address of the user who received this transfer (optional)</param>
            <param name="status">Status of this transfer (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this transfer, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this transfer, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the transferred asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the transferred asset (optional)</param>
            <param name="tokenName">Token name of the transferred asset (optional)</param>
            <param name="minQuantity">Max quantity for the transferred asset (optional)</param>
            <param name="maxQuantity">Max quantity for the transferred asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the transferred asset (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ListTransfersResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.TransfersApi.ListTransfersWithHttpInfo(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Get a list of transfers Get a list of transfers
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this transfer (optional)</param>
            <param name="receiver">Ethereum address of the user who received this transfer (optional)</param>
            <param name="status">Status of this transfer (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this transfer, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this transfer, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the transferred asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the transferred asset (optional)</param>
            <param name="tokenName">Token name of the transferred asset (optional)</param>
            <param name="minQuantity">Max quantity for the transferred asset (optional)</param>
            <param name="maxQuantity">Max quantity for the transferred asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the transferred asset (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of ListTransfersResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.TransfersApi.ListTransfersAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of transfers Get a list of transfers
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this transfer (optional)</param>
            <param name="receiver">Ethereum address of the user who received this transfer (optional)</param>
            <param name="status">Status of this transfer (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this transfer, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this transfer, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the transferred asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the transferred asset (optional)</param>
            <param name="tokenName">Token name of the transferred asset (optional)</param>
            <param name="minQuantity">Max quantity for the transferred asset (optional)</param>
            <param name="maxQuantity">Max quantity for the transferred asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the transferred asset (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ListTransfersResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.TransfersApi.ListTransfersWithHttpInfoAsync(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of transfers Get a list of transfers
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this transfer (optional)</param>
            <param name="receiver">Ethereum address of the user who received this transfer (optional)</param>
            <param name="status">Status of this transfer (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this transfer, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this transfer, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the transferred asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the transferred asset (optional)</param>
            <param name="tokenName">Token name of the transferred asset (optional)</param>
            <param name="minQuantity">Max quantity for the transferred asset (optional)</param>
            <param name="maxQuantity">Max quantity for the transferred asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the transferred asset (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ListTransfersResponse)</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.IUsersApiSync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IUsersApiSync.GetUsers(System.String,System.Int32)">
            <summary>
            Get stark keys for a registered user
            </summary>
            <remarks>
            Get stark keys for a registered user
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="user">User</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>GetUsersApiResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IUsersApiSync.GetUsersWithHttpInfo(System.String,System.Int32)">
            <summary>
            Get stark keys for a registered user
            </summary>
            <remarks>
            Get stark keys for a registered user
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="user">User</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of GetUsersApiResponse</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.IUsersApiAsync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IUsersApiAsync.GetUsersAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get stark keys for a registered user
            </summary>
            <remarks>
            Get stark keys for a registered user
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="user">User</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of GetUsersApiResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IUsersApiAsync.GetUsersWithHttpInfoAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get stark keys for a registered user
            </summary>
            <remarks>
            Get stark keys for a registered user
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="user">User</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (GetUsersApiResponse)</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.IUsersApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.UsersApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.UsersApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.UsersApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.UsersApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.UsersApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.UsersApi.#ctor(Imx.Sdk.Gen.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.UsersApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.UsersApi.#ctor(Imx.Sdk.Gen.Client.ISynchronousClient,Imx.Sdk.Gen.Client.IAsynchronousClient,Imx.Sdk.Gen.Client.IReadableConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.UsersApi"/> class
            using a Configuration object and client instance.
            </summary>
            <param name="client">The client interface for synchronous API access.</param>
            <param name="asyncClient">The client interface for asynchronous API access.</param>
            <param name="configuration">The configuration object.</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.UsersApi.AsynchronousClient">
            <summary>
            The client for accessing this underlying API asynchronously.
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.UsersApi.Client">
            <summary>
            The client for accessing this underlying API synchronously.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.UsersApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.UsersApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.UsersApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.UsersApi.GetUsers(System.String,System.Int32)">
            <summary>
            Get stark keys for a registered user Get stark keys for a registered user
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="user">User</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>GetUsersApiResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.UsersApi.GetUsersWithHttpInfo(System.String,System.Int32)">
            <summary>
            Get stark keys for a registered user Get stark keys for a registered user
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="user">User</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of GetUsersApiResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.UsersApi.GetUsersAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get stark keys for a registered user Get stark keys for a registered user
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="user">User</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of GetUsersApiResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.UsersApi.GetUsersWithHttpInfoAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get stark keys for a registered user Get stark keys for a registered user
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="user">User</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (GetUsersApiResponse)</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.IWithdrawalsApiSync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IWithdrawalsApiSync.GetWithdrawal(System.String,System.Int32)">
            <summary>
            Gets details of withdrawal with the given ID
            </summary>
            <remarks>
            Gets details of withdrawal with the given ID
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Withdrawal ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>Withdrawal</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IWithdrawalsApiSync.GetWithdrawalWithHttpInfo(System.String,System.Int32)">
            <summary>
            Gets details of withdrawal with the given ID
            </summary>
            <remarks>
            Gets details of withdrawal with the given ID
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Withdrawal ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of Withdrawal</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IWithdrawalsApiSync.ListWithdrawals(System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Get a list of withdrawals
            </summary>
            <remarks>
            Get a list of withdrawals
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="withdrawnToWallet">Withdrawal has been transferred to user&#39;s Layer 1 wallet (optional)</param>
            <param name="rollupStatus">Status of the on-chain batch confirmation for this withdrawal (optional)</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this withdrawal (optional)</param>
            <param name="status">Status of this withdrawal (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the withdrawn asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the withdrawn asset (optional)</param>
            <param name="tokenName">Token name of the withdrawn asset (optional)</param>
            <param name="minQuantity">Min quantity for the withdrawn asset (optional)</param>
            <param name="maxQuantity">Max quantity for the withdrawn asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the withdrawn asset (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ListWithdrawalsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IWithdrawalsApiSync.ListWithdrawalsWithHttpInfo(System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Get a list of withdrawals
            </summary>
            <remarks>
            Get a list of withdrawals
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="withdrawnToWallet">Withdrawal has been transferred to user&#39;s Layer 1 wallet (optional)</param>
            <param name="rollupStatus">Status of the on-chain batch confirmation for this withdrawal (optional)</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this withdrawal (optional)</param>
            <param name="status">Status of this withdrawal (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the withdrawn asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the withdrawn asset (optional)</param>
            <param name="tokenName">Token name of the withdrawn asset (optional)</param>
            <param name="minQuantity">Min quantity for the withdrawn asset (optional)</param>
            <param name="maxQuantity">Max quantity for the withdrawn asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the withdrawn asset (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of ListWithdrawalsResponse</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.IWithdrawalsApiAsync">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IWithdrawalsApiAsync.GetWithdrawalAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Gets details of withdrawal with the given ID
            </summary>
            <remarks>
            Gets details of withdrawal with the given ID
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Withdrawal ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Withdrawal</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IWithdrawalsApiAsync.GetWithdrawalWithHttpInfoAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Gets details of withdrawal with the given ID
            </summary>
            <remarks>
            Gets details of withdrawal with the given ID
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Withdrawal ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (Withdrawal)</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IWithdrawalsApiAsync.ListWithdrawalsAsync(System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of withdrawals
            </summary>
            <remarks>
            Get a list of withdrawals
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="withdrawnToWallet">Withdrawal has been transferred to user&#39;s Layer 1 wallet (optional)</param>
            <param name="rollupStatus">Status of the on-chain batch confirmation for this withdrawal (optional)</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this withdrawal (optional)</param>
            <param name="status">Status of this withdrawal (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the withdrawn asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the withdrawn asset (optional)</param>
            <param name="tokenName">Token name of the withdrawn asset (optional)</param>
            <param name="minQuantity">Min quantity for the withdrawn asset (optional)</param>
            <param name="maxQuantity">Max quantity for the withdrawn asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the withdrawn asset (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ListWithdrawalsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.IWithdrawalsApiAsync.ListWithdrawalsWithHttpInfoAsync(System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of withdrawals
            </summary>
            <remarks>
            Get a list of withdrawals
            </remarks>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="withdrawnToWallet">Withdrawal has been transferred to user&#39;s Layer 1 wallet (optional)</param>
            <param name="rollupStatus">Status of the on-chain batch confirmation for this withdrawal (optional)</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this withdrawal (optional)</param>
            <param name="status">Status of this withdrawal (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the withdrawn asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the withdrawn asset (optional)</param>
            <param name="tokenName">Token name of the withdrawn asset (optional)</param>
            <param name="minQuantity">Min quantity for the withdrawn asset (optional)</param>
            <param name="maxQuantity">Max quantity for the withdrawn asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the withdrawn asset (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ListWithdrawalsResponse)</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.IWithdrawalsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="T:Imx.Sdk.Gen.Api.WithdrawalsApi">
            <summary>
            Represents a collection of functions to interact with the API endpoints
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.WithdrawalsApi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.WithdrawalsApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.WithdrawalsApi.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.WithdrawalsApi"/> class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.WithdrawalsApi.#ctor(Imx.Sdk.Gen.Client.Configuration)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.WithdrawalsApi"/> class
            using Configuration object
            </summary>
            <param name="configuration">An instance of Configuration</param>
            <returns></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.WithdrawalsApi.#ctor(Imx.Sdk.Gen.Client.ISynchronousClient,Imx.Sdk.Gen.Client.IAsynchronousClient,Imx.Sdk.Gen.Client.IReadableConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Api.WithdrawalsApi"/> class
            using a Configuration object and client instance.
            </summary>
            <param name="client">The client interface for synchronous API access.</param>
            <param name="asyncClient">The client interface for asynchronous API access.</param>
            <param name="configuration">The configuration object.</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.WithdrawalsApi.AsynchronousClient">
            <summary>
            The client for accessing this underlying API asynchronously.
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.WithdrawalsApi.Client">
            <summary>
            The client for accessing this underlying API synchronously.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.WithdrawalsApi.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.WithdrawalsApi.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Api.WithdrawalsApi.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.WithdrawalsApi.GetWithdrawal(System.String,System.Int32)">
            <summary>
            Gets details of withdrawal with the given ID Gets details of withdrawal with the given ID
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Withdrawal ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>Withdrawal</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.WithdrawalsApi.GetWithdrawalWithHttpInfo(System.String,System.Int32)">
            <summary>
            Gets details of withdrawal with the given ID Gets details of withdrawal with the given ID
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Withdrawal ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of Withdrawal</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.WithdrawalsApi.GetWithdrawalAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Gets details of withdrawal with the given ID Gets details of withdrawal with the given ID
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Withdrawal ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of Withdrawal</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.WithdrawalsApi.GetWithdrawalWithHttpInfoAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Gets details of withdrawal with the given ID Gets details of withdrawal with the given ID
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="id">Withdrawal ID</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (Withdrawal)</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.WithdrawalsApi.ListWithdrawals(System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Get a list of withdrawals Get a list of withdrawals
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="withdrawnToWallet">Withdrawal has been transferred to user&#39;s Layer 1 wallet (optional)</param>
            <param name="rollupStatus">Status of the on-chain batch confirmation for this withdrawal (optional)</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this withdrawal (optional)</param>
            <param name="status">Status of this withdrawal (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the withdrawn asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the withdrawn asset (optional)</param>
            <param name="tokenName">Token name of the withdrawn asset (optional)</param>
            <param name="minQuantity">Min quantity for the withdrawn asset (optional)</param>
            <param name="maxQuantity">Max quantity for the withdrawn asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the withdrawn asset (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ListWithdrawalsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.WithdrawalsApi.ListWithdrawalsWithHttpInfo(System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Get a list of withdrawals Get a list of withdrawals
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="withdrawnToWallet">Withdrawal has been transferred to user&#39;s Layer 1 wallet (optional)</param>
            <param name="rollupStatus">Status of the on-chain batch confirmation for this withdrawal (optional)</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this withdrawal (optional)</param>
            <param name="status">Status of this withdrawal (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the withdrawn asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the withdrawn asset (optional)</param>
            <param name="tokenName">Token name of the withdrawn asset (optional)</param>
            <param name="minQuantity">Min quantity for the withdrawn asset (optional)</param>
            <param name="maxQuantity">Max quantity for the withdrawn asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the withdrawn asset (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <returns>ApiResponse of ListWithdrawalsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.WithdrawalsApi.ListWithdrawalsAsync(System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of withdrawals Get a list of withdrawals
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="withdrawnToWallet">Withdrawal has been transferred to user&#39;s Layer 1 wallet (optional)</param>
            <param name="rollupStatus">Status of the on-chain batch confirmation for this withdrawal (optional)</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this withdrawal (optional)</param>
            <param name="status">Status of this withdrawal (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the withdrawn asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the withdrawn asset (optional)</param>
            <param name="tokenName">Token name of the withdrawn asset (optional)</param>
            <param name="minQuantity">Min quantity for the withdrawn asset (optional)</param>
            <param name="maxQuantity">Max quantity for the withdrawn asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the withdrawn asset (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ListWithdrawalsResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Api.WithdrawalsApi.ListWithdrawalsWithHttpInfoAsync(System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get a list of withdrawals Get a list of withdrawals
            </summary>
            <exception cref="T:Imx.Sdk.Gen.Client.ApiException">Thrown when fails to make API call</exception>
            <param name="withdrawnToWallet">Withdrawal has been transferred to user&#39;s Layer 1 wallet (optional)</param>
            <param name="rollupStatus">Status of the on-chain batch confirmation for this withdrawal (optional)</param>
            <param name="pageSize">Page size of the result (optional)</param>
            <param name="cursor">Cursor (optional)</param>
            <param name="orderBy">Property to sort by (optional)</param>
            <param name="direction">Direction to sort (asc/desc) (optional)</param>
            <param name="user">Ethereum address of the user who submitted this withdrawal (optional)</param>
            <param name="status">Status of this withdrawal (optional)</param>
            <param name="minTimestamp">Minimum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="maxTimestamp">Maximum timestamp for this deposit, in ISO 8601 UTC format. Example: &#39;2022-05-27T00:10:22Z&#39; (optional)</param>
            <param name="tokenType">Token type of the withdrawn asset (optional)</param>
            <param name="tokenId">ERC721 Token ID of the minted asset (optional)</param>
            <param name="assetId">Internal IMX ID of the minted asset (optional)</param>
            <param name="tokenAddress">Token address of the withdrawn asset (optional)</param>
            <param name="tokenName">Token name of the withdrawn asset (optional)</param>
            <param name="minQuantity">Min quantity for the withdrawn asset (optional)</param>
            <param name="maxQuantity">Max quantity for the withdrawn asset (optional)</param>
            <param name="metadata">JSON-encoded metadata filters for the withdrawn asset (optional)</param>
            <param name="operationIndex">Index associated with the operation.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <returns>Task of ApiResponse (ListWithdrawalsResponse)</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Client.CustomJsonCodec">
            <summary>
            Allows RestSharp to Serialize/Deserialize JSON using our custom logic, but only when ContentType is JSON.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.CustomJsonCodec.Serialize(System.Object)">
            <summary>
            Serialize the object into a JSON string.
            </summary>
            <param name="obj">Object to be serialized.</param>
            <returns>A JSON string.</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.CustomJsonCodec.Deserialize(RestSharp.RestResponse,System.Type)">
            <summary>
            Deserialize the JSON string into a proper object.
            </summary>
            <param name="response">The HTTP response.</param>
            <param name="type">Object type.</param>
            <returns>Object representation of the JSON string.</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Client.ApiClient">
            <summary>
            Provides a default implementation of an Api client (both synchronous and asynchronous implementations),
            encapsulating general REST accessor use cases.
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.ApiClient.SerializerSettings">
            <summary>
            Specifies the settings on a <see cref="T:Newtonsoft.Json.JsonSerializer" /> object.
            These settings can be adjusted to accommodate custom serialization rules.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.ApiClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Client.ApiClient" />, defaulting to the global configurations' base url.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.ApiClient.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Client.ApiClient" />
            </summary>
            <param name="basePath">The target service's base path in URL format.</param>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.ApiClient.Method(Imx.Sdk.Gen.Client.HttpMethod)">
            <summary>
            Constructs the RestSharp version of an http method
            </summary>
            <param name="method">Swagger Client Custom HttpMethod</param>
            <returns>RestSharp's HttpMethod instance.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.ApiClient.NewRequest(Imx.Sdk.Gen.Client.HttpMethod,System.String,Imx.Sdk.Gen.Client.RequestOptions,Imx.Sdk.Gen.Client.IReadableConfiguration)">
            <summary>
            Provides all logic for constructing a new RestSharp <see cref="T:RestSharp.RestRequest"/>.
            At this point, all information for querying the service is known. Here, it is simply
            mapped into the RestSharp request.
            </summary>
            <param name="method">The http verb.</param>
            <param name="path">The target path (or resource).</param>
            <param name="options">The additional request options.</param>
            <param name="configuration">A per-request configuration object. It is assumed that any merge with
            GlobalConfiguration has been done before calling this method.</param>
            <returns>[private] A new RestRequest instance.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.ApiClient.GetAsync``1(System.String,Imx.Sdk.Gen.Client.RequestOptions,Imx.Sdk.Gen.Client.IReadableConfiguration,System.Threading.CancellationToken)">
            <summary>
            Make a HTTP GET request (async).
            </summary>
            <param name="path">The target path (or resource).</param>
            <param name="options">The additional request options.</param>
            <param name="configuration">A per-request configuration object. It is assumed that any merge with
            GlobalConfiguration has been done before calling this method.</param>
            <param name="cancellationToken">Token that enables callers to cancel the request.</param>
            <returns>A Task containing ApiResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.ApiClient.PostAsync``1(System.String,Imx.Sdk.Gen.Client.RequestOptions,Imx.Sdk.Gen.Client.IReadableConfiguration,System.Threading.CancellationToken)">
            <summary>
            Make a HTTP POST request (async).
            </summary>
            <param name="path">The target path (or resource).</param>
            <param name="options">The additional request options.</param>
            <param name="configuration">A per-request configuration object. It is assumed that any merge with
            GlobalConfiguration has been done before calling this method.</param>
            <param name="cancellationToken">Token that enables callers to cancel the request.</param>
            <returns>A Task containing ApiResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.ApiClient.PutAsync``1(System.String,Imx.Sdk.Gen.Client.RequestOptions,Imx.Sdk.Gen.Client.IReadableConfiguration,System.Threading.CancellationToken)">
            <summary>
            Make a HTTP PUT request (async).
            </summary>
            <param name="path">The target path (or resource).</param>
            <param name="options">The additional request options.</param>
            <param name="configuration">A per-request configuration object. It is assumed that any merge with
            GlobalConfiguration has been done before calling this method.</param>
            <param name="cancellationToken">Token that enables callers to cancel the request.</param>
            <returns>A Task containing ApiResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.ApiClient.DeleteAsync``1(System.String,Imx.Sdk.Gen.Client.RequestOptions,Imx.Sdk.Gen.Client.IReadableConfiguration,System.Threading.CancellationToken)">
            <summary>
            Make a HTTP DELETE request (async).
            </summary>
            <param name="path">The target path (or resource).</param>
            <param name="options">The additional request options.</param>
            <param name="configuration">A per-request configuration object. It is assumed that any merge with
            GlobalConfiguration has been done before calling this method.</param>
            <param name="cancellationToken">Token that enables callers to cancel the request.</param>
            <returns>A Task containing ApiResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.ApiClient.HeadAsync``1(System.String,Imx.Sdk.Gen.Client.RequestOptions,Imx.Sdk.Gen.Client.IReadableConfiguration,System.Threading.CancellationToken)">
            <summary>
            Make a HTTP HEAD request (async).
            </summary>
            <param name="path">The target path (or resource).</param>
            <param name="options">The additional request options.</param>
            <param name="configuration">A per-request configuration object. It is assumed that any merge with
            GlobalConfiguration has been done before calling this method.</param>
            <param name="cancellationToken">Token that enables callers to cancel the request.</param>
            <returns>A Task containing ApiResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.ApiClient.OptionsAsync``1(System.String,Imx.Sdk.Gen.Client.RequestOptions,Imx.Sdk.Gen.Client.IReadableConfiguration,System.Threading.CancellationToken)">
            <summary>
            Make a HTTP OPTION request (async).
            </summary>
            <param name="path">The target path (or resource).</param>
            <param name="options">The additional request options.</param>
            <param name="configuration">A per-request configuration object. It is assumed that any merge with
            GlobalConfiguration has been done before calling this method.</param>
            <param name="cancellationToken">Token that enables callers to cancel the request.</param>
            <returns>A Task containing ApiResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.ApiClient.PatchAsync``1(System.String,Imx.Sdk.Gen.Client.RequestOptions,Imx.Sdk.Gen.Client.IReadableConfiguration,System.Threading.CancellationToken)">
            <summary>
            Make a HTTP PATCH request (async).
            </summary>
            <param name="path">The target path (or resource).</param>
            <param name="options">The additional request options.</param>
            <param name="configuration">A per-request configuration object. It is assumed that any merge with
            GlobalConfiguration has been done before calling this method.</param>
            <param name="cancellationToken">Token that enables callers to cancel the request.</param>
            <returns>A Task containing ApiResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.ApiClient.Get``1(System.String,Imx.Sdk.Gen.Client.RequestOptions,Imx.Sdk.Gen.Client.IReadableConfiguration)">
            <summary>
            Make a HTTP GET request (synchronous).
            </summary>
            <param name="path">The target path (or resource).</param>
            <param name="options">The additional request options.</param>
            <param name="configuration">A per-request configuration object. It is assumed that any merge with
            GlobalConfiguration has been done before calling this method.</param>
            <returns>A Task containing ApiResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.ApiClient.Post``1(System.String,Imx.Sdk.Gen.Client.RequestOptions,Imx.Sdk.Gen.Client.IReadableConfiguration)">
            <summary>
            Make a HTTP POST request (synchronous).
            </summary>
            <param name="path">The target path (or resource).</param>
            <param name="options">The additional request options.</param>
            <param name="configuration">A per-request configuration object. It is assumed that any merge with
            GlobalConfiguration has been done before calling this method.</param>
            <returns>A Task containing ApiResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.ApiClient.Put``1(System.String,Imx.Sdk.Gen.Client.RequestOptions,Imx.Sdk.Gen.Client.IReadableConfiguration)">
            <summary>
            Make a HTTP PUT request (synchronous).
            </summary>
            <param name="path">The target path (or resource).</param>
            <param name="options">The additional request options.</param>
            <param name="configuration">A per-request configuration object. It is assumed that any merge with
            GlobalConfiguration has been done before calling this method.</param>
            <returns>A Task containing ApiResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.ApiClient.Delete``1(System.String,Imx.Sdk.Gen.Client.RequestOptions,Imx.Sdk.Gen.Client.IReadableConfiguration)">
            <summary>
            Make a HTTP DELETE request (synchronous).
            </summary>
            <param name="path">The target path (or resource).</param>
            <param name="options">The additional request options.</param>
            <param name="configuration">A per-request configuration object. It is assumed that any merge with
            GlobalConfiguration has been done before calling this method.</param>
            <returns>A Task containing ApiResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.ApiClient.Head``1(System.String,Imx.Sdk.Gen.Client.RequestOptions,Imx.Sdk.Gen.Client.IReadableConfiguration)">
            <summary>
            Make a HTTP HEAD request (synchronous).
            </summary>
            <param name="path">The target path (or resource).</param>
            <param name="options">The additional request options.</param>
            <param name="configuration">A per-request configuration object. It is assumed that any merge with
            GlobalConfiguration has been done before calling this method.</param>
            <returns>A Task containing ApiResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.ApiClient.Options``1(System.String,Imx.Sdk.Gen.Client.RequestOptions,Imx.Sdk.Gen.Client.IReadableConfiguration)">
            <summary>
            Make a HTTP OPTION request (synchronous).
            </summary>
            <param name="path">The target path (or resource).</param>
            <param name="options">The additional request options.</param>
            <param name="configuration">A per-request configuration object. It is assumed that any merge with
            GlobalConfiguration has been done before calling this method.</param>
            <returns>A Task containing ApiResponse</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.ApiClient.Patch``1(System.String,Imx.Sdk.Gen.Client.RequestOptions,Imx.Sdk.Gen.Client.IReadableConfiguration)">
            <summary>
            Make a HTTP PATCH request (synchronous).
            </summary>
            <param name="path">The target path (or resource).</param>
            <param name="options">The additional request options.</param>
            <param name="configuration">A per-request configuration object. It is assumed that any merge with
            GlobalConfiguration has been done before calling this method.</param>
            <returns>A Task containing ApiResponse</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Client.ApiException">
            <summary>
            API Exception
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.ApiException.ErrorCode">
            <summary>
            Gets or sets the error code (HTTP status code)
            </summary>
            <value>The error code (HTTP status code).</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.ApiException.ErrorContent">
            <summary>
            Gets or sets the error content (body json object)
            </summary>
            <value>The error content (Http response body).</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.ApiException.Headers">
            <summary>
            Gets or sets the HTTP headers
            </summary>
            <value>HTTP headers</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.ApiException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Client.ApiException"/> class.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.ApiException.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Client.ApiException"/> class.
            </summary>
            <param name="errorCode">HTTP status code.</param>
            <param name="message">Error message.</param>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.ApiException.#ctor(System.Int32,System.String,System.Object,Imx.Sdk.Gen.Client.Multimap{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Client.ApiException"/> class.
            </summary>
            <param name="errorCode">HTTP status code.</param>
            <param name="message">Error message.</param>
            <param name="errorContent">Error content.</param>
            <param name="headers">HTTP Headers.</param>
        </member>
        <member name="T:Imx.Sdk.Gen.Client.IApiResponse">
            <summary>
            Provides a non-generic contract for the ApiResponse wrapper.
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.IApiResponse.ResponseType">
            <summary>
            The data type of <see cref="P:Imx.Sdk.Gen.Client.IApiResponse.Content"/>
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.IApiResponse.Content">
            <summary>
            The content of this response
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.IApiResponse.StatusCode">
            <summary>
            Gets or sets the status code (HTTP status code)
            </summary>
            <value>The status code.</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.IApiResponse.Headers">
            <summary>
            Gets or sets the HTTP headers
            </summary>
            <value>HTTP headers</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.IApiResponse.ErrorText">
            <summary>
            Gets or sets any error text defined by the calling client.
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.IApiResponse.Cookies">
            <summary>
            Gets or sets any cookies passed along on the response.
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.IApiResponse.RawContent">
            <summary>
            The raw content of this response
            </summary>
        </member>
        <member name="T:Imx.Sdk.Gen.Client.ApiResponse`1">
            <summary>
            API Response
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.ApiResponse`1.StatusCode">
            <summary>
            Gets or sets the status code (HTTP status code)
            </summary>
            <value>The status code.</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.ApiResponse`1.Headers">
            <summary>
            Gets or sets the HTTP headers
            </summary>
            <value>HTTP headers</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.ApiResponse`1.Data">
            <summary>
            Gets or sets the data (parsed HTTP body)
            </summary>
            <value>The data.</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.ApiResponse`1.ErrorText">
            <summary>
            Gets or sets any error text defined by the calling client.
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.ApiResponse`1.Cookies">
            <summary>
            Gets or sets any cookies passed along on the response.
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.ApiResponse`1.ResponseType">
            <summary>
            The content of this response
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.ApiResponse`1.Content">
            <summary>
            The data type of <see cref="P:Imx.Sdk.Gen.Client.ApiResponse`1.Content"/>
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.ApiResponse`1.RawContent">
            <summary>
            The raw content
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.ApiResponse`1.#ctor(System.Net.HttpStatusCode,Imx.Sdk.Gen.Client.Multimap{System.String,System.String},`0,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Client.ApiResponse`1" /> class.
            </summary>
            <param name="statusCode">HTTP status code.</param>
            <param name="headers">HTTP headers.</param>
            <param name="data">Data (parsed HTTP body)</param>
            <param name="rawContent">Raw content.</param>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.ApiResponse`1.#ctor(System.Net.HttpStatusCode,Imx.Sdk.Gen.Client.Multimap{System.String,System.String},`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Client.ApiResponse`1" /> class.
            </summary>
            <param name="statusCode">HTTP status code.</param>
            <param name="headers">HTTP headers.</param>
            <param name="data">Data (parsed HTTP body)</param>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.ApiResponse`1.#ctor(System.Net.HttpStatusCode,`0,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Client.ApiResponse`1" /> class.
            </summary>
            <param name="statusCode">HTTP status code.</param>
            <param name="data">Data (parsed HTTP body)</param>
            <param name="rawContent">Raw content.</param>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.ApiResponse`1.#ctor(System.Net.HttpStatusCode,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Client.ApiResponse`1" /> class.
            </summary>
            <param name="statusCode">HTTP status code.</param>
            <param name="data">Data (parsed HTTP body)</param>
        </member>
        <member name="T:Imx.Sdk.Gen.Client.ClientUtils">
            <summary>
            Utility functions providing some benefit to API client consumers.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.ClientUtils.SanitizeFilename(System.String)">
            <summary>
            Sanitize filename by removing the path
            </summary>
            <param name="filename">Filename</param>
            <returns>Filename</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.ClientUtils.ParameterToMultiMap(System.String,System.String,System.Object)">
            <summary>
            Convert params to key/value pairs.
            Use collectionFormat to properly format lists and collections.
            </summary>
            <param name="collectionFormat">The swagger-supported collection format, one of: csv, tsv, ssv, pipes, multi</param>
            <param name="name">Key name.</param>
            <param name="value">Value object.</param>
            <returns>A multimap of keys with 1..n associated values.</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.ClientUtils.ParameterToString(System.Object,Imx.Sdk.Gen.Client.IReadableConfiguration)">
            <summary>
            If parameter is DateTime, output in a formatted string (default ISO 8601), customizable with Configuration.DateTime.
            If parameter is a list, join the list with ",".
            Otherwise just return the string.
            </summary>
            <param name="obj">The parameter (header, path, query, form).</param>
            <param name="configuration">An optional configuration instance, providing formatting options used in processing.</param>
            <returns>Formatted string.</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.ClientUtils.Serialize(System.Object)">
            <summary>
            Serializes the given object when not null. Otherwise return null.
            </summary>
            <param name="obj">The object to serialize.</param>
            <returns>Serialized string.</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.ClientUtils.Base64Encode(System.String)">
            <summary>
            Encode string in base64 format.
            </summary>
            <param name="text">string to be encoded.</param>
            <returns>Encoded string.</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.ClientUtils.ReadAsBytes(System.IO.Stream)">
            <summary>
            Convert stream to byte array
            </summary>
            <param name="inputStream">Input stream to be converted</param>
            <returns>Byte array</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.ClientUtils.SelectHeaderContentType(System.String[])">
            <summary>
            Select the Content-Type header's value from the given content-type array:
            if JSON type exists in the given array, use it;
            otherwise use the first one defined in 'consumes'
            </summary>
            <param name="contentTypes">The Content-Type array to select from.</param>
            <returns>The Content-Type header to use.</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.ClientUtils.SelectHeaderAccept(System.String[])">
            <summary>
            Select the Accept header's value from the given accepts array:
            if JSON exists in the given array, use it;
            otherwise use all of them (joining into a string)
            </summary>
            <param name="accepts">The accepts array to select from.</param>
            <returns>The Accept header to use.</returns>
        </member>
        <member name="F:Imx.Sdk.Gen.Client.ClientUtils.JsonRegex">
            <summary>
            Provides a case-insensitive check that a provided content type is a known JSON-like content type.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.ClientUtils.IsJsonMime(System.String)">
            <summary>
            Check if the given MIME is a JSON MIME.
            JSON MIME examples:
               application/json
               application/json; charset=UTF8
               APPLICATION/JSON
               application/vnd.company+json
            </summary>
            <param name="mime">MIME</param>
            <returns>Returns True if MIME type is json.</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.ClientUtils.HasEnumMemberAttrValue(System.Object)">
            <summary>
            Is the Enum decorated with EnumMember Attribute
            </summary>
            <param name="enumVal"></param>
            <returns>true if found</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.ClientUtils.GetEnumMemberAttrValue(System.Object)">
            <summary>
            Get the EnumMember value
            </summary>
            <param name="enumVal"></param>
            <returns>EnumMember value as string otherwise null</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Client.Configuration">
            <summary>
            Represents a set of configuration settings
            </summary>
        </member>
        <member name="F:Imx.Sdk.Gen.Client.Configuration.Version">
            <summary>
            Version of the package.
            </summary>
            <value>Version of the package.</value>
        </member>
        <member name="F:Imx.Sdk.Gen.Client.Configuration.ISO8601_DATETIME_FORMAT">
            <summary>
            Identifier for ISO 8601 DateTime Format
            </summary>
            <remarks>See https://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx#Anchor_8 for more information.</remarks>
        </member>
        <member name="F:Imx.Sdk.Gen.Client.Configuration.DefaultExceptionFactory">
            <summary>
            Default creation of exceptions for a given method name and response object
            </summary>
        </member>
        <member name="F:Imx.Sdk.Gen.Client.Configuration._basePath">
            <summary>
            Defines the base path of the target API server.
            Example: http://localhost:3000/v1/
            </summary>
        </member>
        <member name="F:Imx.Sdk.Gen.Client.Configuration._apiKey">
            <summary>
            Gets or sets the API key based on the authentication name.
            This is the key and value comprising the "secret" for accessing an API.
            </summary>
            <value>The API key.</value>
        </member>
        <member name="F:Imx.Sdk.Gen.Client.Configuration._apiKeyPrefix">
            <summary>
            Gets or sets the prefix (e.g. Token) of the API key based on the authentication name.
            </summary>
            <value>The prefix of the API key.</value>
        </member>
        <member name="F:Imx.Sdk.Gen.Client.Configuration._servers">
            <summary>
            Gets or sets the servers defined in the OpenAPI spec.
            </summary>
            <value>The servers</value>
        </member>
        <member name="F:Imx.Sdk.Gen.Client.Configuration._operationServers">
            <summary>
            Gets or sets the operation servers defined in the OpenAPI spec.
            </summary>
            <value>The operation servers</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.Configuration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Client.Configuration" /> class
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.Configuration.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Client.Configuration" /> class
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.Configuration.BasePath">
            <summary>
            Gets or sets the base path for API access.
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.Configuration.DefaultHeader">
            <summary>
            Gets or sets the default header.
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.Configuration.DefaultHeaders">
            <summary>
            Gets or sets the default headers.
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.Configuration.Timeout">
            <summary>
            Gets or sets the HTTP timeout (milliseconds) of ApiClient. Default to 100000 milliseconds.
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.Configuration.Proxy">
            <summary>
            Gets or sets the proxy
            </summary>
            <value>Proxy.</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.Configuration.UserAgent">
            <summary>
            Gets or sets the HTTP user agent.
            </summary>
            <value>Http user agent.</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.Configuration.Username">
            <summary>
            Gets or sets the username (HTTP basic authentication).
            </summary>
            <value>The username.</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.Configuration.Password">
            <summary>
            Gets or sets the password (HTTP basic authentication).
            </summary>
            <value>The password.</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.Configuration.GetApiKeyWithPrefix(System.String)">
            <summary>
            Gets the API key with prefix.
            </summary>
            <param name="apiKeyIdentifier">API key identifier (authentication scheme).</param>
            <returns>API key with prefix.</returns>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.Configuration.ClientCertificates">
            <summary>
            Gets or sets certificate collection to be sent with requests.
            </summary>
            <value>X509 Certificate collection.</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.Configuration.AccessToken">
             <summary>
             Gets or sets the access token for OAuth2 authentication.
            
             This helper property simplifies code generation.
             </summary>
             <value>The access token.</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.Configuration.TempFolderPath">
            <summary>
            Gets or sets the temporary folder path to store the files downloaded from the server.
            </summary>
            <value>Folder path.</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.Configuration.DateTimeFormat">
            <summary>
            Gets or sets the date time format used when serializing in the ApiClient
            By default, it's set to ISO 8601 - "o", for others see:
            https://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx
            and https://msdn.microsoft.com/en-us/library/8kb3ddd4(v=vs.110).aspx
            No validation is done to ensure that the string you're providing is valid
            </summary>
            <value>The DateTimeFormat string</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.Configuration.ApiKeyPrefix">
             <summary>
             Gets or sets the prefix (e.g. Token) of the API key based on the authentication name.
            
             Whatever you set here will be prepended to the value defined in AddApiKey.
            
             An example invocation here might be:
             <example>
             ApiKeyPrefix["Authorization"] = "Bearer";
             </example>
             … where ApiKey["Authorization"] would then be used to set the value of your bearer token.
            
             <remarks>
             OAuth2 workflows should set tokens via AccessToken.
             </remarks>
             </summary>
             <value>The prefix of the API key.</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.Configuration.ApiKey">
            <summary>
            Gets or sets the API key based on the authentication name.
            </summary>
            <value>The API key.</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.Configuration.Servers">
            <summary>
            Gets or sets the servers.
            </summary>
            <value>The servers.</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.Configuration.OperationServers">
            <summary>
            Gets or sets the operation servers.
            </summary>
            <value>The operation servers.</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.Configuration.GetServerUrl(System.Int32)">
            <summary>
            Returns URL based on server settings without providing values
            for the variables
            </summary>
            <param name="index">Array index of the server settings.</param>
            <return>The server URL.</return>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.Configuration.GetServerUrl(System.Int32,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Returns URL based on server settings.
            </summary>
            <param name="index">Array index of the server settings.</param>
            <param name="inputVariables">Dictionary of the variables and the corresponding values.</param>
            <return>The server URL.</return>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.Configuration.GetOperationServerUrl(System.String,System.Int32)">
            <summary>
            Returns URL based on operation server settings.
            </summary>
            <param name="operation">Operation associated with the request path.</param>
            <param name="index">Array index of the server settings.</param>
            <return>The operation server URL.</return>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.Configuration.GetOperationServerUrl(System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Returns URL based on operation server settings.
            </summary>
            <param name="operation">Operation associated with the request path.</param>
            <param name="index">Array index of the server settings.</param>
            <param name="inputVariables">Dictionary of the variables and the corresponding values.</param>
            <return>The operation server URL.</return>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.Configuration.GetServerUrl(System.Collections.Generic.IList{System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object}},System.Int32,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Returns URL based on server settings.
            </summary>
            <param name="servers">Dictionary of server settings.</param>
            <param name="index">Array index of the server settings.</param>
            <param name="inputVariables">Dictionary of the variables and the corresponding values.</param>
            <return>The server URL.</return>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.Configuration.ToDebugReport">
            <summary>
            Returns a string with essential information for debugging.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.Configuration.AddApiKey(System.String,System.String)">
            <summary>
            Add Api Key Header.
            </summary>
            <param name="key">Api Key name.</param>
            <param name="value">Api Key value.</param>
            <returns></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.Configuration.AddApiKeyPrefix(System.String,System.String)">
            <summary>
            Sets the API key prefix.
            </summary>
            <param name="key">Api Key name.</param>
            <param name="value">Api Key value.</param>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.Configuration.MergeConfigurations(Imx.Sdk.Gen.Client.IReadableConfiguration,Imx.Sdk.Gen.Client.IReadableConfiguration)">
            <summary>
            Merge configurations.
            </summary>
            <param name="first">First configuration.</param>
            <param name="second">Second configuration.</param>
            <return>Merged configuration.</return>
        </member>
        <member name="T:Imx.Sdk.Gen.Client.ExceptionFactory">
            <summary>
            A delegate to ExceptionFactory method
            </summary>
            <param name="methodName">Method name</param>
            <param name="response">Response</param>
            <returns>Exceptions</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Client.GlobalConfiguration">
            <summary>
            <see cref="T:Imx.Sdk.Gen.Client.GlobalConfiguration"/> provides a compile-time extension point for globally configuring
            API Clients.
            </summary>
            <remarks>
            A customized implementation via partial class may reside in another file and may
            be excluded from automatic generation via a .openapi-generator-ignore file.
            </remarks>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.GlobalConfiguration.#ctor">
            <inheritdoc />
        </member>
        <member name="M:Imx.Sdk.Gen.Client.GlobalConfiguration.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <inheritdoc />
        </member>
        <member name="P:Imx.Sdk.Gen.Client.GlobalConfiguration.Instance">
            <summary>
            Gets or sets the default Configuration.
            </summary>
            <value>Configuration.</value>
        </member>
        <member name="T:Imx.Sdk.Gen.Client.HttpMethod">
            <summary>
            Http methods supported by swagger
            </summary>
        </member>
        <member name="F:Imx.Sdk.Gen.Client.HttpMethod.Get">
            <summary>HTTP GET request.</summary>
        </member>
        <member name="F:Imx.Sdk.Gen.Client.HttpMethod.Post">
            <summary>HTTP POST request.</summary>
        </member>
        <member name="F:Imx.Sdk.Gen.Client.HttpMethod.Put">
            <summary>HTTP PUT request.</summary>
        </member>
        <member name="F:Imx.Sdk.Gen.Client.HttpMethod.Delete">
            <summary>HTTP DELETE request.</summary>
        </member>
        <member name="F:Imx.Sdk.Gen.Client.HttpMethod.Head">
            <summary>HTTP HEAD request.</summary>
        </member>
        <member name="F:Imx.Sdk.Gen.Client.HttpMethod.Options">
            <summary>HTTP OPTIONS request.</summary>
        </member>
        <member name="F:Imx.Sdk.Gen.Client.HttpMethod.Patch">
            <summary>HTTP PATCH request.</summary>
        </member>
        <member name="T:Imx.Sdk.Gen.Client.IApiAccessor">
            <summary>
            Represents configuration aspects required to interact with the API endpoints.
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.IApiAccessor.Configuration">
            <summary>
            Gets or sets the configuration object
            </summary>
            <value>An instance of the Configuration</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.IApiAccessor.GetBasePath">
            <summary>
            Gets the base path of the API client.
            </summary>
            <value>The base path</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.IApiAccessor.ExceptionFactory">
            <summary>
            Provides a factory method hook for the creation of exceptions.
            </summary>
        </member>
        <member name="T:Imx.Sdk.Gen.Client.IAsynchronousClient">
             <summary>
             Contract for Asynchronous RESTful API interactions.
            
             This interface allows consumers to provide a custom API accessor client.
             </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.IAsynchronousClient.GetAsync``1(System.String,Imx.Sdk.Gen.Client.RequestOptions,Imx.Sdk.Gen.Client.IReadableConfiguration,System.Threading.CancellationToken)">
            <summary>
            Executes a non-blocking call to some <paramref name="path"/> using the GET http verb.
            </summary>
            <param name="path">The relative path to invoke.</param>
            <param name="options">The request parameters to pass along to the client.</param>
            <param name="configuration">Per-request configurable settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <typeparam name="T">The return type.</typeparam>
            <returns>A task eventually representing the response data, decorated with <see cref="T:Imx.Sdk.Gen.Client.ApiResponse`1"/></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.IAsynchronousClient.PostAsync``1(System.String,Imx.Sdk.Gen.Client.RequestOptions,Imx.Sdk.Gen.Client.IReadableConfiguration,System.Threading.CancellationToken)">
            <summary>
            Executes a non-blocking call to some <paramref name="path"/> using the POST http verb.
            </summary>
            <param name="path">The relative path to invoke.</param>
            <param name="options">The request parameters to pass along to the client.</param>
            <param name="configuration">Per-request configurable settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <typeparam name="T">The return type.</typeparam>
            <returns>A task eventually representing the response data, decorated with <see cref="T:Imx.Sdk.Gen.Client.ApiResponse`1"/></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.IAsynchronousClient.PutAsync``1(System.String,Imx.Sdk.Gen.Client.RequestOptions,Imx.Sdk.Gen.Client.IReadableConfiguration,System.Threading.CancellationToken)">
            <summary>
            Executes a non-blocking call to some <paramref name="path"/> using the PUT http verb.
            </summary>
            <param name="path">The relative path to invoke.</param>
            <param name="options">The request parameters to pass along to the client.</param>
            <param name="configuration">Per-request configurable settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <typeparam name="T">The return type.</typeparam>
            <returns>A task eventually representing the response data, decorated with <see cref="T:Imx.Sdk.Gen.Client.ApiResponse`1"/></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.IAsynchronousClient.DeleteAsync``1(System.String,Imx.Sdk.Gen.Client.RequestOptions,Imx.Sdk.Gen.Client.IReadableConfiguration,System.Threading.CancellationToken)">
            <summary>
            Executes a non-blocking call to some <paramref name="path"/> using the DELETE http verb.
            </summary>
            <param name="path">The relative path to invoke.</param>
            <param name="options">The request parameters to pass along to the client.</param>
            <param name="configuration">Per-request configurable settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <typeparam name="T">The return type.</typeparam>
            <returns>A task eventually representing the response data, decorated with <see cref="T:Imx.Sdk.Gen.Client.ApiResponse`1"/></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.IAsynchronousClient.HeadAsync``1(System.String,Imx.Sdk.Gen.Client.RequestOptions,Imx.Sdk.Gen.Client.IReadableConfiguration,System.Threading.CancellationToken)">
            <summary>
            Executes a non-blocking call to some <paramref name="path"/> using the HEAD http verb.
            </summary>
            <param name="path">The relative path to invoke.</param>
            <param name="options">The request parameters to pass along to the client.</param>
            <param name="configuration">Per-request configurable settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <typeparam name="T">The return type.</typeparam>
            <returns>A task eventually representing the response data, decorated with <see cref="T:Imx.Sdk.Gen.Client.ApiResponse`1"/></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.IAsynchronousClient.OptionsAsync``1(System.String,Imx.Sdk.Gen.Client.RequestOptions,Imx.Sdk.Gen.Client.IReadableConfiguration,System.Threading.CancellationToken)">
            <summary>
            Executes a non-blocking call to some <paramref name="path"/> using the OPTIONS http verb.
            </summary>
            <param name="path">The relative path to invoke.</param>
            <param name="options">The request parameters to pass along to the client.</param>
            <param name="configuration">Per-request configurable settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <typeparam name="T">The return type.</typeparam>
            <returns>A task eventually representing the response data, decorated with <see cref="T:Imx.Sdk.Gen.Client.ApiResponse`1"/></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.IAsynchronousClient.PatchAsync``1(System.String,Imx.Sdk.Gen.Client.RequestOptions,Imx.Sdk.Gen.Client.IReadableConfiguration,System.Threading.CancellationToken)">
            <summary>
            Executes a non-blocking call to some <paramref name="path"/> using the PATCH http verb.
            </summary>
            <param name="path">The relative path to invoke.</param>
            <param name="options">The request parameters to pass along to the client.</param>
            <param name="configuration">Per-request configurable settings.</param>
            <param name="cancellationToken">Cancellation Token to cancel the request.</param>
            <typeparam name="T">The return type.</typeparam>
            <returns>A task eventually representing the response data, decorated with <see cref="T:Imx.Sdk.Gen.Client.ApiResponse`1"/></returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Client.IReadableConfiguration">
            <summary>
            Represents a readable-only configuration contract.
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.IReadableConfiguration.AccessToken">
            <summary>
            Gets the access token.
            </summary>
            <value>Access token.</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.IReadableConfiguration.ApiKey">
            <summary>
            Gets the API key.
            </summary>
            <value>API key.</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.IReadableConfiguration.ApiKeyPrefix">
            <summary>
            Gets the API key prefix.
            </summary>
            <value>API key prefix.</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.IReadableConfiguration.BasePath">
            <summary>
            Gets the base path.
            </summary>
            <value>Base path.</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.IReadableConfiguration.DateTimeFormat">
            <summary>
            Gets the date time format.
            </summary>
            <value>Date time format.</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.IReadableConfiguration.DefaultHeader">
            <summary>
            Gets the default header.
            </summary>
            <value>Default header.</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.IReadableConfiguration.DefaultHeaders">
            <summary>
            Gets the default headers.
            </summary>
            <value>Default headers.</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.IReadableConfiguration.TempFolderPath">
            <summary>
            Gets the temp folder path.
            </summary>
            <value>Temp folder path.</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.IReadableConfiguration.Timeout">
            <summary>
            Gets the HTTP connection timeout (in milliseconds)
            </summary>
            <value>HTTP connection timeout.</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.IReadableConfiguration.Proxy">
            <summary>
            Gets the proxy.
            </summary>
            <value>Proxy.</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.IReadableConfiguration.UserAgent">
            <summary>
            Gets the user agent.
            </summary>
            <value>User agent.</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.IReadableConfiguration.Username">
            <summary>
            Gets the username.
            </summary>
            <value>Username.</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.IReadableConfiguration.Password">
            <summary>
            Gets the password.
            </summary>
            <value>Password.</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.IReadableConfiguration.OperationServers">
            <summary>
            Get the servers associated with the operation.
            </summary>
            <value>Operation servers.</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.IReadableConfiguration.GetApiKeyWithPrefix(System.String)">
            <summary>
            Gets the API key with prefix.
            </summary>
            <param name="apiKeyIdentifier">API key identifier (authentication scheme).</param>
            <returns>API key with prefix.</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.IReadableConfiguration.GetOperationServerUrl(System.String,System.Int32)">
            <summary>
            Gets the Operation server url at the provided index.
            </summary>
            <param name="operation">Operation server name.</param>
            <param name="index">Index of the operation server settings.</param>
            <returns></returns>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.IReadableConfiguration.ClientCertificates">
            <summary>
            Gets certificate collection to be sent with requests.
            </summary>
            <value>X509 Certificate collection.</value>
        </member>
        <member name="T:Imx.Sdk.Gen.Client.ISynchronousClient">
             <summary>
             Contract for Synchronous RESTful API interactions.
            
             This interface allows consumers to provide a custom API accessor client.
             </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.ISynchronousClient.Get``1(System.String,Imx.Sdk.Gen.Client.RequestOptions,Imx.Sdk.Gen.Client.IReadableConfiguration)">
            <summary>
            Executes a blocking call to some <paramref name="path"/> using the GET http verb.
            </summary>
            <param name="path">The relative path to invoke.</param>
            <param name="options">The request parameters to pass along to the client.</param>
            <param name="configuration">Per-request configurable settings.</param>
            <typeparam name="T">The return type.</typeparam>
            <returns>The response data, decorated with <see cref="T:Imx.Sdk.Gen.Client.ApiResponse`1"/></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.ISynchronousClient.Post``1(System.String,Imx.Sdk.Gen.Client.RequestOptions,Imx.Sdk.Gen.Client.IReadableConfiguration)">
            <summary>
            Executes a blocking call to some <paramref name="path"/> using the POST http verb.
            </summary>
            <param name="path">The relative path to invoke.</param>
            <param name="options">The request parameters to pass along to the client.</param>
            <param name="configuration">Per-request configurable settings.</param>
            <typeparam name="T">The return type.</typeparam>
            <returns>The response data, decorated with <see cref="T:Imx.Sdk.Gen.Client.ApiResponse`1"/></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.ISynchronousClient.Put``1(System.String,Imx.Sdk.Gen.Client.RequestOptions,Imx.Sdk.Gen.Client.IReadableConfiguration)">
            <summary>
            Executes a blocking call to some <paramref name="path"/> using the PUT http verb.
            </summary>
            <param name="path">The relative path to invoke.</param>
            <param name="options">The request parameters to pass along to the client.</param>
            <param name="configuration">Per-request configurable settings.</param>
            <typeparam name="T">The return type.</typeparam>
            <returns>The response data, decorated with <see cref="T:Imx.Sdk.Gen.Client.ApiResponse`1"/></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.ISynchronousClient.Delete``1(System.String,Imx.Sdk.Gen.Client.RequestOptions,Imx.Sdk.Gen.Client.IReadableConfiguration)">
            <summary>
            Executes a blocking call to some <paramref name="path"/> using the DELETE http verb.
            </summary>
            <param name="path">The relative path to invoke.</param>
            <param name="options">The request parameters to pass along to the client.</param>
            <param name="configuration">Per-request configurable settings.</param>
            <typeparam name="T">The return type.</typeparam>
            <returns>The response data, decorated with <see cref="T:Imx.Sdk.Gen.Client.ApiResponse`1"/></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.ISynchronousClient.Head``1(System.String,Imx.Sdk.Gen.Client.RequestOptions,Imx.Sdk.Gen.Client.IReadableConfiguration)">
            <summary>
            Executes a blocking call to some <paramref name="path"/> using the HEAD http verb.
            </summary>
            <param name="path">The relative path to invoke.</param>
            <param name="options">The request parameters to pass along to the client.</param>
            <param name="configuration">Per-request configurable settings.</param>
            <typeparam name="T">The return type.</typeparam>
            <returns>The response data, decorated with <see cref="T:Imx.Sdk.Gen.Client.ApiResponse`1"/></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.ISynchronousClient.Options``1(System.String,Imx.Sdk.Gen.Client.RequestOptions,Imx.Sdk.Gen.Client.IReadableConfiguration)">
            <summary>
            Executes a blocking call to some <paramref name="path"/> using the OPTIONS http verb.
            </summary>
            <param name="path">The relative path to invoke.</param>
            <param name="options">The request parameters to pass along to the client.</param>
            <param name="configuration">Per-request configurable settings.</param>
            <typeparam name="T">The return type.</typeparam>
            <returns>The response data, decorated with <see cref="T:Imx.Sdk.Gen.Client.ApiResponse`1"/></returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.ISynchronousClient.Patch``1(System.String,Imx.Sdk.Gen.Client.RequestOptions,Imx.Sdk.Gen.Client.IReadableConfiguration)">
            <summary>
            Executes a blocking call to some <paramref name="path"/> using the PATCH http verb.
            </summary>
            <param name="path">The relative path to invoke.</param>
            <param name="options">The request parameters to pass along to the client.</param>
            <param name="configuration">Per-request configurable settings.</param>
            <typeparam name="T">The return type.</typeparam>
            <returns>The response data, decorated with <see cref="T:Imx.Sdk.Gen.Client.ApiResponse`1"/></returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Client.Multimap`2">
            <summary>
            A dictionary in which one key has many associated values.
            </summary>
            <typeparam name="TKey">The type of the key</typeparam>
            <typeparam name="TValue">The type of the value associated with the key.</typeparam>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.Multimap`2.#ctor">
            <summary>
            Empty Constructor.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.Multimap`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Constructor with comparer.
            </summary>
            <param name="comparer"></param>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.Multimap`2.GetEnumerator">
            <summary>
            To get the enumerator.
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.Multimap`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            To get the enumerator.
            </summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.Multimap`2.Add(System.Collections.Generic.KeyValuePair{`0,System.Collections.Generic.IList{`1}})">
            <summary>
            Add values to Multimap
            </summary>
            <param name="item">Key value pair</param>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.Multimap`2.Add(Imx.Sdk.Gen.Client.Multimap{`0,`1})">
            <summary>
            Add Multimap to Multimap
            </summary>
            <param name="multimap">Multimap</param>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.Multimap`2.Clear">
            <summary>
            Clear Multimap
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.Multimap`2.Contains(System.Collections.Generic.KeyValuePair{`0,System.Collections.Generic.IList{`1}})">
            <summary>
            Determines whether Multimap contains the specified item.
            </summary>
            <param name="item">Key value pair</param>
            <exception cref="T:System.NotImplementedException">Method needs to be implemented</exception>
            <returns>true if the Multimap contains the item; otherwise, false.</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.Multimap`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,System.Collections.Generic.IList{`1}}[],System.Int32)">
            <summary>
             Copy items of the Multimap to an array,
                starting at a particular array index.
            </summary>
            <param name="array">The array that is the destination of the items copied
                from Multimap. The array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
            <exception cref="T:System.NotImplementedException">Method needs to be implemented</exception>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.Multimap`2.Remove(System.Collections.Generic.KeyValuePair{`0,System.Collections.Generic.IList{`1}})">
            <summary>
            Removes the specified item from the Multimap.
            </summary>
            <param name="item">Key value pair</param>
            <returns>true if the item is successfully removed; otherwise, false.</returns>
            <exception cref="T:System.NotImplementedException">Method needs to be implemented</exception>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.Multimap`2.Count">
            <summary>
            Gets the number of items contained in the Multimap.
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.Multimap`2.IsReadOnly">
            <summary>
            Gets a value indicating whether the Multimap is read-only.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.Multimap`2.Add(`0,System.Collections.Generic.IList{`1})">
            <summary>
            Adds an item with the provided key and value to the Multimap.
            </summary>
            <param name="key">The object to use as the key of the item to add.</param>
            <param name="value">The object to use as the value of the item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown when couldn't add the value to Multimap.</exception>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.Multimap`2.ContainsKey(`0)">
            <summary>
            Determines whether the Multimap contains an item with the specified key.
            </summary>
            <param name="key">The key to locate in the Multimap.</param>
            <returns>true if the Multimap contains an item with
                the key; otherwise, false.</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.Multimap`2.Remove(`0)">
            <summary>
            Removes item with the specified key from the Multimap.
            </summary>
            <param name="key">The key to locate in the Multimap.</param>
            <returns>true if the item is successfully removed; otherwise, false.</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.Multimap`2.TryGetValue(`0,System.Collections.Generic.IList{`1}@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">The key whose value to get.</param>
            <param name="value">When this method returns, the value associated with the specified key, if the
                key is found; otherwise, the default value for the type of the value parameter.
                This parameter is passed uninitialized.</param>
            <returns> true if the object that implements Multimap contains
                an item with the specified key; otherwise, false.</returns>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.Multimap`2.Item(`0)">
            <summary>
            Gets or sets the item with the specified key.
            </summary>
            <param name="key">The key of the item to get or set.</param>
            <returns>The value of the specified key.</returns>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.Multimap`2.Keys">
            <summary>
            Gets a System.Collections.Generic.ICollection containing the keys of the Multimap.
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.Multimap`2.Values">
            <summary>
            Gets a System.Collections.Generic.ICollection containing the values of the Multimap.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.Multimap`2.CopyTo(System.Array,System.Int32)">
            <summary>
             Copy the items of the Multimap to an System.Array,
                starting at a particular System.Array index.
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the items copied
                from Multimap. The System.Array must have zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.Multimap`2.Add(`0,`1)">
            <summary>
            Adds an item with the provided key and value to the Multimap.
            </summary>
            <param name="key">The object to use as the key of the item to add.</param>
            <param name="value">The object to use as the value of the item to add.</param>
            <exception cref="T:System.InvalidOperationException">Thrown when couldn't add value to Multimap.</exception>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.Multimap`2.TryRemove(`0,System.Collections.Generic.IList{`1}@)">
            Helper method to encapsulate generator differences between dictionary types.
        </member>
        <member name="M:Imx.Sdk.Gen.Client.Multimap`2.TryAdd(`0,System.Collections.Generic.IList{`1})">
            Helper method to encapsulate generator differences between dictionary types.
        </member>
        <member name="T:Imx.Sdk.Gen.Client.OpenAPIDateConverter">
            <summary>
            Formatter for 'date' openapi formats ss defined by full-date - RFC3339
            see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#data-types
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.OpenAPIDateConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Client.OpenAPIDateConverter" /> class.
            </summary>
        </member>
        <member name="T:Imx.Sdk.Gen.Client.RequestOptions">
            <summary>
            A container for generalized request inputs. This type allows consumers to extend the request functionality
            by abstracting away from the default (built-in) request framework (e.g. RestSharp).
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.RequestOptions.PathParameters">
            <summary>
            Parameters to be bound to path parts of the Request's URL
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.RequestOptions.QueryParameters">
            <summary>
            Query parameters to be applied to the request.
            Keys may have 1 or more values associated.
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.RequestOptions.HeaderParameters">
            <summary>
            Header parameters to be applied to the request.
            Keys may have 1 or more values associated.
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.RequestOptions.FormParameters">
            <summary>
            Form parameters to be sent along with the request.
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.RequestOptions.FileParameters">
            <summary>
            File parameters to be sent along with the request.
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.RequestOptions.Cookies">
            <summary>
            Cookies to be sent along with the request.
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.RequestOptions.Operation">
            <summary>
            Operation associated with the request path.
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.RequestOptions.OperationIndex">
            <summary>
            Index associated with the operation.
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.RequestOptions.Data">
            <summary>
            Any data associated with a request body.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Client.RequestOptions.#ctor">
            <summary>
            Constructs a new instance of <see cref="T:Imx.Sdk.Gen.Client.RequestOptions"/>
            </summary>
        </member>
        <member name="T:Imx.Sdk.Gen.Client.RetryConfiguration">
            <summary>
            Configuration class to set the polly retry policies to be applied to the requests.
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.RetryConfiguration.RetryPolicy">
            <summary>
            Retry policy
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Client.RetryConfiguration.AsyncRetryPolicy">
            <summary>
            Async retry policy
            </summary>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.AbstractOpenAPISchema">
            <summary>
             Abstract base class for oneOf, anyOf schemas in the OpenAPI specification
            </summary>
        </member>
        <member name="F:Imx.Sdk.Gen.Model.AbstractOpenAPISchema.SerializerSettings">
            <summary>
             Custom JSON serializer
            </summary>
        </member>
        <member name="F:Imx.Sdk.Gen.Model.AbstractOpenAPISchema.AdditionalPropertiesSerializerSettings">
            <summary>
             Custom JSON serializer for objects with additional properties
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.AbstractOpenAPISchema.ActualInstance">
            <summary>
            Gets or Sets the actual instance
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.AbstractOpenAPISchema.IsNullable">
            <summary>
            Gets or Sets IsNullable to indicate whether the instance is nullable
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.AbstractOpenAPISchema.SchemaType">
            <summary>
            Gets or Sets the schema type, which can be either `oneOf` or `anyOf`
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.AbstractOpenAPISchema.ToJson">
            <summary>
            Converts the instance into JSON string.
            </summary>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.AggregateLimit">
            <summary>
            AggregateLimit
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.AggregateLimit.#ctor(System.Decimal,System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.AggregateLimit" /> class.
            </summary>
            <param name="maxAmount">Max transaction amount.</param>
            <param name="minAmount">Min transaction amount.</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.AggregateLimit.MaxAmount">
            <summary>
            Max transaction amount
            </summary>
            <value>Max transaction amount</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.AggregateLimit.MinAmount">
            <summary>
            Min transaction amount
            </summary>
            <value>Min transaction amount</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.AggregateLimit.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.AggregateLimit.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.AggregateLimit.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.AggregateLimit.Equals(Imx.Sdk.Gen.Model.AggregateLimit)">
            <summary>
            Returns true if AggregateLimit instances are equal
            </summary>
            <param name="input">Instance of AggregateLimit to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.AggregateLimit.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.AggregateLimit.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.APIError">
            <summary>
            APIError
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.APIError.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.APIError" /> class.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.APIError.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.APIError" /> class.
            </summary>
            <param name="code">The error code (required).</param>
            <param name="details">The error details.</param>
            <param name="message">The error message (required).</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.APIError.Code">
            <summary>
            The error code
            </summary>
            <value>The error code</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.APIError.Details">
            <summary>
            The error details
            </summary>
            <value>The error details</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.APIError.Message">
            <summary>
            The error message
            </summary>
            <value>The error message</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.APIError.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.APIError.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.APIError.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.APIError.Equals(Imx.Sdk.Gen.Model.APIError)">
            <summary>
            Returns true if APIError instances are equal
            </summary>
            <param name="input">Instance of APIError to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.APIError.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.APIError.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Asset.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.Asset" /> class.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Asset.#ctor(Imx.Sdk.Gen.Model.CollectionDetails,System.String,System.String,System.Collections.Generic.List{Imx.Sdk.Gen.Model.Fee},System.String,System.String,System.Object,System.String,Imx.Sdk.Gen.Model.OrderDetails,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.Asset" /> class.
            </summary>
            <param name="collection">collection (required).</param>
            <param name="createdAt">Timestamp of when the asset was created (required).</param>
            <param name="description">Description of this asset (required).</param>
            <param name="fees">Royalties to pay on this asset operations.</param>
            <param name="id">[DEPRECATED] Internal Immutable X Token ID.</param>
            <param name="imageUrl">URL of the image which should be used for this asset (required).</param>
            <param name="metadata">Metadata of this asset (required).</param>
            <param name="name">Name of this asset (required).</param>
            <param name="orders">orders.</param>
            <param name="status">Status of this asset (where it is in the system) (required).</param>
            <param name="tokenAddress">Address of the ERC721 contract (required).</param>
            <param name="tokenId">ERC721 Token ID of this asset (required).</param>
            <param name="updatedAt">Timestamp of when the asset was updated (required).</param>
            <param name="uri">URI to access this asset externally to Immutable X (required).</param>
            <param name="user">Ethereum address of the user who owns this asset (required).</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Asset.Collection">
            <summary>
            Gets or Sets Collection
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Asset.CreatedAt">
            <summary>
            Timestamp of when the asset was created
            </summary>
            <value>Timestamp of when the asset was created</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Asset.Description">
            <summary>
            Description of this asset
            </summary>
            <value>Description of this asset</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Asset.Fees">
            <summary>
            Royalties to pay on this asset operations
            </summary>
            <value>Royalties to pay on this asset operations</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Asset.Id">
            <summary>
            [DEPRECATED] Internal Immutable X Token ID
            </summary>
            <value>[DEPRECATED] Internal Immutable X Token ID</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Asset.ImageUrl">
            <summary>
            URL of the image which should be used for this asset
            </summary>
            <value>URL of the image which should be used for this asset</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Asset.Metadata">
            <summary>
            Metadata of this asset
            </summary>
            <value>Metadata of this asset</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Asset.Name">
            <summary>
            Name of this asset
            </summary>
            <value>Name of this asset</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Asset.Orders">
            <summary>
            Gets or Sets Orders
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Asset.Status">
            <summary>
            Status of this asset (where it is in the system)
            </summary>
            <value>Status of this asset (where it is in the system)</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Asset.TokenAddress">
            <summary>
            Address of the ERC721 contract
            </summary>
            <value>Address of the ERC721 contract</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Asset.TokenId">
            <summary>
            ERC721 Token ID of this asset
            </summary>
            <value>ERC721 Token ID of this asset</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Asset.UpdatedAt">
            <summary>
            Timestamp of when the asset was updated
            </summary>
            <value>Timestamp of when the asset was updated</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Asset.Uri">
            <summary>
            URI to access this asset externally to Immutable X
            </summary>
            <value>URI to access this asset externally to Immutable X</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Asset.User">
            <summary>
            Ethereum address of the user who owns this asset
            </summary>
            <value>Ethereum address of the user who owns this asset</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Asset.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Asset.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Asset.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Asset.Equals(Imx.Sdk.Gen.Model.Asset)">
            <summary>
            Returns true if Asset instances are equal
            </summary>
            <param name="input">Instance of Asset to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Asset.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Asset.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.AssetProperties">
            <summary>
            AssetProperties
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.AssetProperties.#ctor(Imx.Sdk.Gen.Model.CollectionDetails,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.AssetProperties" /> class.
            </summary>
            <param name="collection">collection.</param>
            <param name="imageUrl">Image URL of this asset.</param>
            <param name="name">Name of this asset.</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.AssetProperties.Collection">
            <summary>
            Gets or Sets Collection
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.AssetProperties.ImageUrl">
            <summary>
            Image URL of this asset
            </summary>
            <value>Image URL of this asset</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.AssetProperties.Name">
            <summary>
            Name of this asset
            </summary>
            <value>Name of this asset</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.AssetProperties.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.AssetProperties.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.AssetProperties.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.AssetProperties.Equals(Imx.Sdk.Gen.Model.AssetProperties)">
            <summary>
            Returns true if AssetProperties instances are equal
            </summary>
            <param name="input">Instance of AssetProperties to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.AssetProperties.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.AssetProperties.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.AssetWithOrders">
            <summary>
            AssetWithOrders
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.AssetWithOrders.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.AssetWithOrders" /> class.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.AssetWithOrders.#ctor(Imx.Sdk.Gen.Model.CollectionDetails,System.String,System.String,System.Collections.Generic.List{Imx.Sdk.Gen.Model.Fee},System.String,System.String,System.Object,System.String,Imx.Sdk.Gen.Model.OrderDetails,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.AssetWithOrders" /> class.
            </summary>
            <param name="collection">collection (required).</param>
            <param name="createdAt">Timestamp of when the asset was created (required).</param>
            <param name="description">Description of this asset (required).</param>
            <param name="fees">Royalties to pay on this asset operations.</param>
            <param name="id">[DEPRECATED] Internal Immutable X Token ID.</param>
            <param name="imageUrl">URL of the image which should be used for this asset (required).</param>
            <param name="metadata">Metadata of this asset (required).</param>
            <param name="name">Name of this asset (required).</param>
            <param name="orders">orders.</param>
            <param name="status">Status of this asset (where it is in the system) (required).</param>
            <param name="tokenAddress">Address of the ERC721 contract (required).</param>
            <param name="tokenId">ERC721 Token ID of this asset (required).</param>
            <param name="updatedAt">Timestamp of when the asset was updated (required).</param>
            <param name="uri">URI to access this asset externally to Immutable X (required).</param>
            <param name="user">Ethereum address of the user who owns this asset (required).</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.AssetWithOrders.Collection">
            <summary>
            Gets or Sets Collection
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.AssetWithOrders.CreatedAt">
            <summary>
            Timestamp of when the asset was created
            </summary>
            <value>Timestamp of when the asset was created</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.AssetWithOrders.Description">
            <summary>
            Description of this asset
            </summary>
            <value>Description of this asset</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.AssetWithOrders.Fees">
            <summary>
            Royalties to pay on this asset operations
            </summary>
            <value>Royalties to pay on this asset operations</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.AssetWithOrders.Id">
            <summary>
            [DEPRECATED] Internal Immutable X Token ID
            </summary>
            <value>[DEPRECATED] Internal Immutable X Token ID</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.AssetWithOrders.ImageUrl">
            <summary>
            URL of the image which should be used for this asset
            </summary>
            <value>URL of the image which should be used for this asset</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.AssetWithOrders.Metadata">
            <summary>
            Metadata of this asset
            </summary>
            <value>Metadata of this asset</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.AssetWithOrders.Name">
            <summary>
            Name of this asset
            </summary>
            <value>Name of this asset</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.AssetWithOrders.Orders">
            <summary>
            Gets or Sets Orders
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.AssetWithOrders.Status">
            <summary>
            Status of this asset (where it is in the system)
            </summary>
            <value>Status of this asset (where it is in the system)</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.AssetWithOrders.TokenAddress">
            <summary>
            Address of the ERC721 contract
            </summary>
            <value>Address of the ERC721 contract</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.AssetWithOrders.TokenId">
            <summary>
            ERC721 Token ID of this asset
            </summary>
            <value>ERC721 Token ID of this asset</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.AssetWithOrders.UpdatedAt">
            <summary>
            Timestamp of when the asset was updated
            </summary>
            <value>Timestamp of when the asset was updated</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.AssetWithOrders.Uri">
            <summary>
            URI to access this asset externally to Immutable X
            </summary>
            <value>URI to access this asset externally to Immutable X</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.AssetWithOrders.User">
            <summary>
            Ethereum address of the user who owns this asset
            </summary>
            <value>Ethereum address of the user who owns this asset</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.AssetWithOrders.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.AssetWithOrders.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.AssetWithOrders.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.AssetWithOrders.Equals(Imx.Sdk.Gen.Model.AssetWithOrders)">
            <summary>
            Returns true if AssetWithOrders instances are equal
            </summary>
            <param name="input">Instance of AssetWithOrders to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.AssetWithOrders.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.AssetWithOrders.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.Balance">
            <summary>
            Balance
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Balance.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.Balance" /> class.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Balance.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.Balance" /> class.
            </summary>
            <param name="balance">Amount which is currently inside the exchange (required).</param>
            <param name="preparingWithdrawal">Amount which is currently preparing withdrawal from the exchange (required).</param>
            <param name="symbol">Symbol of the token (e.g. ETH, IMX) (required).</param>
            <param name="tokenAddress">Address of the contract that represents this ERC20 token or empty for ETH (required).</param>
            <param name="withdrawable">Amount which is currently withdrawable from the exchange (required).</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Balance._Balance">
            <summary>
            Amount which is currently inside the exchange
            </summary>
            <value>Amount which is currently inside the exchange</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Balance.PreparingWithdrawal">
            <summary>
            Amount which is currently preparing withdrawal from the exchange
            </summary>
            <value>Amount which is currently preparing withdrawal from the exchange</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Balance.Symbol">
            <summary>
            Symbol of the token (e.g. ETH, IMX)
            </summary>
            <value>Symbol of the token (e.g. ETH, IMX)</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Balance.TokenAddress">
            <summary>
            Address of the contract that represents this ERC20 token or empty for ETH
            </summary>
            <value>Address of the contract that represents this ERC20 token or empty for ETH</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Balance.Withdrawable">
            <summary>
            Amount which is currently withdrawable from the exchange
            </summary>
            <value>Amount which is currently withdrawable from the exchange</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Balance.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Balance.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Balance.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Balance.Equals(Imx.Sdk.Gen.Model.Balance)">
            <summary>
            Returns true if Balance instances are equal
            </summary>
            <param name="input">Instance of Balance to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Balance.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Balance.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.Collection">
            <summary>
            Collection
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Collection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.Collection" /> class.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Collection.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.Collection" /> class.
            </summary>
            <param name="address">Ethereum address of the ERC721 contract (required).</param>
            <param name="collectionImageUrl">URL of the tile image for this collection (required).</param>
            <param name="createdAt">Timestamp of when the collection was created (required).</param>
            <param name="description">Description of the collection (required).</param>
            <param name="iconUrl">URL of the icon for this collection (required).</param>
            <param name="metadataApiUrl">URL of the metadata for this collection (required).</param>
            <param name="name">Name of the collection (required).</param>
            <param name="projectId">The collection&#39;s project ID (required).</param>
            <param name="projectOwnerAddress">Project owner address (required).</param>
            <param name="updatedAt">Timestamp of when the collection was updated (required).</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Collection.Address">
            <summary>
            Ethereum address of the ERC721 contract
            </summary>
            <value>Ethereum address of the ERC721 contract</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Collection.CollectionImageUrl">
            <summary>
            URL of the tile image for this collection
            </summary>
            <value>URL of the tile image for this collection</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Collection.CreatedAt">
            <summary>
            Timestamp of when the collection was created
            </summary>
            <value>Timestamp of when the collection was created</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Collection.Description">
            <summary>
            Description of the collection
            </summary>
            <value>Description of the collection</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Collection.IconUrl">
            <summary>
            URL of the icon for this collection
            </summary>
            <value>URL of the icon for this collection</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Collection.MetadataApiUrl">
            <summary>
            URL of the metadata for this collection
            </summary>
            <value>URL of the metadata for this collection</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Collection.Name">
            <summary>
            Name of the collection
            </summary>
            <value>Name of the collection</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Collection.ProjectId">
            <summary>
            The collection&#39;s project ID
            </summary>
            <value>The collection&#39;s project ID</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Collection.ProjectOwnerAddress">
            <summary>
            Project owner address
            </summary>
            <value>Project owner address</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Collection.UpdatedAt">
            <summary>
            Timestamp of when the collection was updated
            </summary>
            <value>Timestamp of when the collection was updated</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Collection.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Collection.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Collection.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Collection.Equals(Imx.Sdk.Gen.Model.Collection)">
            <summary>
            Returns true if Collection instances are equal
            </summary>
            <param name="input">Instance of Collection to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Collection.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Collection.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.CollectionDetails">
            <summary>
            CollectionDetails
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.CollectionDetails.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.CollectionDetails" /> class.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.CollectionDetails.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.CollectionDetails" /> class.
            </summary>
            <param name="iconUrl">URL of the icon of the collection (required).</param>
            <param name="name">Name of the collection (required).</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.CollectionDetails.IconUrl">
            <summary>
            URL of the icon of the collection
            </summary>
            <value>URL of the icon of the collection</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.CollectionDetails.Name">
            <summary>
            Name of the collection
            </summary>
            <value>Name of the collection</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.CollectionDetails.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.CollectionDetails.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.CollectionDetails.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.CollectionDetails.Equals(Imx.Sdk.Gen.Model.CollectionDetails)">
            <summary>
            Returns true if CollectionDetails instances are equal
            </summary>
            <param name="input">Instance of CollectionDetails to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.CollectionDetails.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.CollectionDetails.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.CollectionFilter">
            <summary>
            CollectionFilter
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.CollectionFilter.#ctor(System.String,Imx.Sdk.Gen.Model.Range,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.CollectionFilter" /> class.
            </summary>
            <param name="key">Key of this property.</param>
            <param name="range">range.</param>
            <param name="type">Type of this filter.</param>
            <param name="value">List of possible values for this property.</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.CollectionFilter.Key">
            <summary>
            Key of this property
            </summary>
            <value>Key of this property</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.CollectionFilter.Range">
            <summary>
            Gets or Sets Range
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.CollectionFilter.Type">
            <summary>
            Type of this filter
            </summary>
            <value>Type of this filter</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.CollectionFilter.Value">
            <summary>
            List of possible values for this property
            </summary>
            <value>List of possible values for this property</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.CollectionFilter.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.CollectionFilter.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.CollectionFilter.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.CollectionFilter.Equals(Imx.Sdk.Gen.Model.CollectionFilter)">
            <summary>
            Returns true if CollectionFilter instances are equal
            </summary>
            <param name="input">Instance of CollectionFilter to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.CollectionFilter.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.CollectionFilter.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.CurrencyWithLimits">
            <summary>
            CurrencyWithLimits
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.CurrencyWithLimits.#ctor(System.String,Imx.Sdk.Gen.Model.AggregateLimit,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.CurrencyWithLimits" /> class.
            </summary>
            <param name="currencyCode">Provider currency code.</param>
            <param name="limits">limits.</param>
            <param name="provider">Provider name (e.g. moonpay).</param>
            <param name="symbol">Currency Symbol.</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.CurrencyWithLimits.CurrencyCode">
            <summary>
            Provider currency code
            </summary>
            <value>Provider currency code</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.CurrencyWithLimits.Limits">
            <summary>
            Gets or Sets Limits
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.CurrencyWithLimits.Provider">
            <summary>
            Provider name (e.g. moonpay)
            </summary>
            <value>Provider name (e.g. moonpay)</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.CurrencyWithLimits.Symbol">
            <summary>
            Currency Symbol
            </summary>
            <value>Currency Symbol</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.CurrencyWithLimits.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.CurrencyWithLimits.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.CurrencyWithLimits.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.CurrencyWithLimits.Equals(Imx.Sdk.Gen.Model.CurrencyWithLimits)">
            <summary>
            Returns true if CurrencyWithLimits instances are equal
            </summary>
            <param name="input">Instance of CurrencyWithLimits to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.CurrencyWithLimits.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.CurrencyWithLimits.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.Deposit">
            <summary>
            Deposit
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Deposit.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.Deposit" /> class.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Deposit.#ctor(System.String,System.String,Imx.Sdk.Gen.Model.Token,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.Deposit" /> class.
            </summary>
            <param name="status">Status of this deposit in Immutable X (required).</param>
            <param name="timestamp">Timestamp of the deposit (required).</param>
            <param name="token">token (required).</param>
            <param name="transactionId">Sequential ID of this transaction within Immutable X (required).</param>
            <param name="user">Ethereum address of the user making this deposit (required).</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Deposit.Status">
            <summary>
            Status of this deposit in Immutable X
            </summary>
            <value>Status of this deposit in Immutable X</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Deposit.Timestamp">
            <summary>
            Timestamp of the deposit
            </summary>
            <value>Timestamp of the deposit</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Deposit.Token">
            <summary>
            Gets or Sets Token
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Deposit.TransactionId">
            <summary>
            Sequential ID of this transaction within Immutable X
            </summary>
            <value>Sequential ID of this transaction within Immutable X</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Deposit.User">
            <summary>
            Ethereum address of the user making this deposit
            </summary>
            <value>Ethereum address of the user making this deposit</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Deposit.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Deposit.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Deposit.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Deposit.Equals(Imx.Sdk.Gen.Model.Deposit)">
            <summary>
            Returns true if Deposit instances are equal
            </summary>
            <param name="input">Instance of Deposit to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Deposit.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Deposit.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.Exchange">
            <summary>
            Exchange
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Exchange.#ctor(System.String,Imx.Sdk.Gen.Model.OptionalExchangeData,System.Int32,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.Exchange" /> class.
            </summary>
            <param name="createdAt">Time this transaction was created.</param>
            <param name="data">data.</param>
            <param name="id">Transaction ID.</param>
            <param name="provider">Provider name.</param>
            <param name="status">Transaction status.</param>
            <param name="type">Transaction type.</param>
            <param name="updatedAt">Time this transaction was updates.</param>
            <param name="walletAddress">Ethereum address of the user who created transaction.</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Exchange.CreatedAt">
            <summary>
            Time this transaction was created
            </summary>
            <value>Time this transaction was created</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Exchange.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Exchange.Id">
            <summary>
            Transaction ID
            </summary>
            <value>Transaction ID</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Exchange.Provider">
            <summary>
            Provider name
            </summary>
            <value>Provider name</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Exchange.Status">
            <summary>
            Transaction status
            </summary>
            <value>Transaction status</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Exchange.Type">
            <summary>
            Transaction type
            </summary>
            <value>Transaction type</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Exchange.UpdatedAt">
            <summary>
            Time this transaction was updates
            </summary>
            <value>Time this transaction was updates</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Exchange.WalletAddress">
            <summary>
            Ethereum address of the user who created transaction
            </summary>
            <value>Ethereum address of the user who created transaction</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Exchange.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Exchange.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Exchange.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Exchange.Equals(Imx.Sdk.Gen.Model.Exchange)">
            <summary>
            Returns true if Exchange instances are equal
            </summary>
            <param name="input">Instance of Exchange to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Exchange.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Exchange.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Fee.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.Fee" /> class.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Fee.#ctor(System.String,System.Decimal,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.Fee" /> class.
            </summary>
            <param name="address">Wallet address (required).</param>
            <param name="percentage">The percentage of fee (required).</param>
            <param name="type">Type of fee. Examples: &#x60;royalty&#x60;, &#x60;maker&#x60;, &#x60;taker&#x60; or &#x60;protocol&#x60; (required).</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Fee.Address">
            <summary>
            Wallet address
            </summary>
            <value>Wallet address</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Fee.Percentage">
            <summary>
            The percentage of fee
            </summary>
            <value>The percentage of fee</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Fee.Type">
            <summary>
            Type of fee. Examples: &#x60;royalty&#x60;, &#x60;maker&#x60;, &#x60;taker&#x60; or &#x60;protocol&#x60;
            </summary>
            <value>Type of fee. Examples: &#x60;royalty&#x60;, &#x60;maker&#x60;, &#x60;taker&#x60; or &#x60;protocol&#x60;</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Fee.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Fee.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Fee.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Fee.Equals(Imx.Sdk.Gen.Model.Fee)">
            <summary>
            Returns true if Fee instances are equal
            </summary>
            <param name="input">Instance of Fee to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Fee.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Fee.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.FeeData">
            <summary>
            FeeData
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.FeeData.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.FeeData" /> class.
            </summary>
            <param name="contractAddress">Address of ERC721/ERC20 contract.</param>
            <param name="decimals">Number of decimals supported by this asset.</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.FeeData.ContractAddress">
            <summary>
            Address of ERC721/ERC20 contract
            </summary>
            <value>Address of ERC721/ERC20 contract</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.FeeData.Decimals">
            <summary>
            Number of decimals supported by this asset
            </summary>
            <value>Number of decimals supported by this asset</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.FeeData.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.FeeData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.FeeData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.FeeData.Equals(Imx.Sdk.Gen.Model.FeeData)">
            <summary>
            Returns true if FeeData instances are equal
            </summary>
            <param name="input">Instance of FeeData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.FeeData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.FeeData.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.FeeEntry">
            <summary>
            FeeEntry
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.FeeEntry.#ctor(System.String,System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.FeeEntry" /> class.
            </summary>
            <param name="address">address.</param>
            <param name="feePercentage">feePercentage.</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.FeeEntry.Address">
            <summary>
            Gets or Sets Address
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.FeeEntry.FeePercentage">
            <summary>
            Gets or Sets FeePercentage
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.FeeEntry.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.FeeEntry.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.FeeEntry.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.FeeEntry.Equals(Imx.Sdk.Gen.Model.FeeEntry)">
            <summary>
            Returns true if FeeEntry instances are equal
            </summary>
            <param name="input">Instance of FeeEntry to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.FeeEntry.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.FeeEntry.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.FeeInfo">
            <summary>
            FeeInfo
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.FeeInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.FeeInfo" /> class.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.FeeInfo.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.FeeInfo" /> class.
            </summary>
            <param name="assetId">ID of the asset these fees relate to (required).</param>
            <param name="feeLimit">Fee limit (required).</param>
            <param name="sourceVaultId">ID of vault the asset belong to (required).</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.FeeInfo.AssetId">
            <summary>
            ID of the asset these fees relate to
            </summary>
            <value>ID of the asset these fees relate to</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.FeeInfo.FeeLimit">
            <summary>
            Fee limit
            </summary>
            <value>Fee limit</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.FeeInfo.SourceVaultId">
            <summary>
            ID of vault the asset belong to
            </summary>
            <value>ID of vault the asset belong to</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.FeeInfo.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.FeeInfo.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.FeeInfo.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.FeeInfo.Equals(Imx.Sdk.Gen.Model.FeeInfo)">
            <summary>
            Returns true if FeeInfo instances are equal
            </summary>
            <param name="input">Instance of FeeInfo to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.FeeInfo.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.FeeInfo.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.FeeToken">
            <summary>
            FeeToken
            </summary>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.FeeToken.TypeEnum">
            <summary>
            Fee token type. One of ETH/ERC20
            </summary>
            <value>Fee token type. One of ETH/ERC20</value>
        </member>
        <member name="F:Imx.Sdk.Gen.Model.FeeToken.TypeEnum.ETH">
            <summary>
            Enum ETH for value: ETH
            </summary>
        </member>
        <member name="F:Imx.Sdk.Gen.Model.FeeToken.TypeEnum.ERC20">
            <summary>
            Enum ERC20 for value: ERC20
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.FeeToken.Type">
            <summary>
            Fee token type. One of ETH/ERC20
            </summary>
            <value>Fee token type. One of ETH/ERC20</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.FeeToken.#ctor(Imx.Sdk.Gen.Model.FeeData,System.Nullable{Imx.Sdk.Gen.Model.FeeToken.TypeEnum})">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.FeeToken" /> class.
            </summary>
            <param name="data">data.</param>
            <param name="type">Fee token type. One of ETH/ERC20.</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.FeeToken.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.FeeToken.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.FeeToken.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.FeeToken.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.FeeToken.Equals(Imx.Sdk.Gen.Model.FeeToken)">
            <summary>
            Returns true if FeeToken instances are equal
            </summary>
            <param name="input">Instance of FeeToken to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.FeeToken.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.FeeToken.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.GetTransactionsResponse">
            <summary>
            GetTransactionsResponse
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.GetTransactionsResponse.#ctor(System.String,System.Int32,System.Collections.Generic.List{Imx.Sdk.Gen.Model.Exchange})">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.GetTransactionsResponse" /> class.
            </summary>
            <param name="cursor">Generated cursor returned by previous query.</param>
            <param name="remaining">Remaining results flag. 1: there are remaining results matching this query, 0: no remaining results.</param>
            <param name="result">Transactions matching query parameters.</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.GetTransactionsResponse.Cursor">
            <summary>
            Generated cursor returned by previous query
            </summary>
            <value>Generated cursor returned by previous query</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.GetTransactionsResponse.Remaining">
            <summary>
            Remaining results flag. 1: there are remaining results matching this query, 0: no remaining results
            </summary>
            <value>Remaining results flag. 1: there are remaining results matching this query, 0: no remaining results</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.GetTransactionsResponse.Result">
            <summary>
            Transactions matching query parameters
            </summary>
            <value>Transactions matching query parameters</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.GetTransactionsResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.GetTransactionsResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.GetTransactionsResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.GetTransactionsResponse.Equals(Imx.Sdk.Gen.Model.GetTransactionsResponse)">
            <summary>
            Returns true if GetTransactionsResponse instances are equal
            </summary>
            <param name="input">Instance of GetTransactionsResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.GetTransactionsResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.GetTransactionsResponse.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.GetUsersApiResponse">
            <summary>
            GetUsersApiResponse
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.GetUsersApiResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.GetUsersApiResponse" /> class.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.GetUsersApiResponse.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.GetUsersApiResponse" /> class.
            </summary>
            <param name="accounts">Accounts (required).</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.GetUsersApiResponse.Accounts">
            <summary>
            Accounts
            </summary>
            <value>Accounts</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.GetUsersApiResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.GetUsersApiResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.GetUsersApiResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.GetUsersApiResponse.Equals(Imx.Sdk.Gen.Model.GetUsersApiResponse)">
            <summary>
            Returns true if GetUsersApiResponse instances are equal
            </summary>
            <param name="input">Instance of GetUsersApiResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.GetUsersApiResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.GetUsersApiResponse.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.LambdasAPIError">
            <summary>
            LambdasAPIError
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.LambdasAPIError.#ctor(System.String,System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.LambdasAPIError" /> class.
            </summary>
            <param name="code">The error code.</param>
            <param name="details">The error details.</param>
            <param name="message">The error message.</param>
            <param name="statusCode">The error status code.</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.LambdasAPIError.Code">
            <summary>
            The error code
            </summary>
            <value>The error code</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.LambdasAPIError.Details">
            <summary>
            The error details
            </summary>
            <value>The error details</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.LambdasAPIError.Message">
            <summary>
            The error message
            </summary>
            <value>The error message</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.LambdasAPIError.StatusCode">
            <summary>
            The error status code
            </summary>
            <value>The error status code</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.LambdasAPIError.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.LambdasAPIError.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.LambdasAPIError.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.LambdasAPIError.Equals(Imx.Sdk.Gen.Model.LambdasAPIError)">
            <summary>
            Returns true if LambdasAPIError instances are equal
            </summary>
            <param name="input">Instance of LambdasAPIError to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.LambdasAPIError.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.LambdasAPIError.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.ListAssetsResponse">
            <summary>
            ListAssetsResponse
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListAssetsResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.ListAssetsResponse" /> class.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListAssetsResponse.#ctor(System.String,System.Int32,System.Collections.Generic.List{Imx.Sdk.Gen.Model.AssetWithOrders})">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.ListAssetsResponse" /> class.
            </summary>
            <param name="cursor">Generated cursor returned by previous query (required).</param>
            <param name="remaining">Remaining results flag. 1: there are remaining results matching this query, 0: no remaining results (required).</param>
            <param name="result">Assets matching query parameters (required).</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.ListAssetsResponse.Cursor">
            <summary>
            Generated cursor returned by previous query
            </summary>
            <value>Generated cursor returned by previous query</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.ListAssetsResponse.Remaining">
            <summary>
            Remaining results flag. 1: there are remaining results matching this query, 0: no remaining results
            </summary>
            <value>Remaining results flag. 1: there are remaining results matching this query, 0: no remaining results</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.ListAssetsResponse.Result">
            <summary>
            Assets matching query parameters
            </summary>
            <value>Assets matching query parameters</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListAssetsResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListAssetsResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListAssetsResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListAssetsResponse.Equals(Imx.Sdk.Gen.Model.ListAssetsResponse)">
            <summary>
            Returns true if ListAssetsResponse instances are equal
            </summary>
            <param name="input">Instance of ListAssetsResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListAssetsResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListAssetsResponse.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.ListBalancesResponse">
            <summary>
            ListBalancesResponse
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListBalancesResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.ListBalancesResponse" /> class.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListBalancesResponse.#ctor(System.String,System.Int32,System.Collections.Generic.List{Imx.Sdk.Gen.Model.Balance})">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.ListBalancesResponse" /> class.
            </summary>
            <param name="cursor">Generated cursor returned by previous query (required).</param>
            <param name="remaining">Remaining results flag. 1: there are remaining results matching this query, 0: no remaining results (required).</param>
            <param name="result">Dictionary of tokens (required).</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.ListBalancesResponse.Cursor">
            <summary>
            Generated cursor returned by previous query
            </summary>
            <value>Generated cursor returned by previous query</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.ListBalancesResponse.Remaining">
            <summary>
            Remaining results flag. 1: there are remaining results matching this query, 0: no remaining results
            </summary>
            <value>Remaining results flag. 1: there are remaining results matching this query, 0: no remaining results</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.ListBalancesResponse.Result">
            <summary>
            Dictionary of tokens
            </summary>
            <value>Dictionary of tokens</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListBalancesResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListBalancesResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListBalancesResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListBalancesResponse.Equals(Imx.Sdk.Gen.Model.ListBalancesResponse)">
            <summary>
            Returns true if ListBalancesResponse instances are equal
            </summary>
            <param name="input">Instance of ListBalancesResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListBalancesResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListBalancesResponse.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.ListCollectionsResponse">
            <summary>
            ListCollectionsResponse
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListCollectionsResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.ListCollectionsResponse" /> class.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListCollectionsResponse.#ctor(System.String,System.Int32,System.Collections.Generic.List{Imx.Sdk.Gen.Model.Collection})">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.ListCollectionsResponse" /> class.
            </summary>
            <param name="cursor">Generated cursor returned by previous query (required).</param>
            <param name="remaining">Remaining results flag. 1: there are remaining results matching this query, 0: no remaining results (required).</param>
            <param name="result">Collections matching query parameters (required).</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.ListCollectionsResponse.Cursor">
            <summary>
            Generated cursor returned by previous query
            </summary>
            <value>Generated cursor returned by previous query</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.ListCollectionsResponse.Remaining">
            <summary>
            Remaining results flag. 1: there are remaining results matching this query, 0: no remaining results
            </summary>
            <value>Remaining results flag. 1: there are remaining results matching this query, 0: no remaining results</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.ListCollectionsResponse.Result">
            <summary>
            Collections matching query parameters
            </summary>
            <value>Collections matching query parameters</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListCollectionsResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListCollectionsResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListCollectionsResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListCollectionsResponse.Equals(Imx.Sdk.Gen.Model.ListCollectionsResponse)">
            <summary>
            Returns true if ListCollectionsResponse instances are equal
            </summary>
            <param name="input">Instance of ListCollectionsResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListCollectionsResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListCollectionsResponse.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.ListDepositsResponse">
            <summary>
            ListDepositsResponse
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListDepositsResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.ListDepositsResponse" /> class.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListDepositsResponse.#ctor(System.String,System.Int32,System.Collections.Generic.List{Imx.Sdk.Gen.Model.Deposit})">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.ListDepositsResponse" /> class.
            </summary>
            <param name="cursor">Generated cursor returned by previous query (required).</param>
            <param name="remaining">Remaining results flag. 1: there are remaining results matching this query, 0: no remaining results (required).</param>
            <param name="result">Deposits matching query parameters (required).</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.ListDepositsResponse.Cursor">
            <summary>
            Generated cursor returned by previous query
            </summary>
            <value>Generated cursor returned by previous query</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.ListDepositsResponse.Remaining">
            <summary>
            Remaining results flag. 1: there are remaining results matching this query, 0: no remaining results
            </summary>
            <value>Remaining results flag. 1: there are remaining results matching this query, 0: no remaining results</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.ListDepositsResponse.Result">
            <summary>
            Deposits matching query parameters
            </summary>
            <value>Deposits matching query parameters</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListDepositsResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListDepositsResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListDepositsResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListDepositsResponse.Equals(Imx.Sdk.Gen.Model.ListDepositsResponse)">
            <summary>
            Returns true if ListDepositsResponse instances are equal
            </summary>
            <param name="input">Instance of ListDepositsResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListDepositsResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListDepositsResponse.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.ListMintsResponse">
            <summary>
            ListMintsResponse
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListMintsResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.ListMintsResponse" /> class.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListMintsResponse.#ctor(System.String,System.Int32,System.Collections.Generic.List{Imx.Sdk.Gen.Model.Mint})">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.ListMintsResponse" /> class.
            </summary>
            <param name="cursor">Generated cursor returned by previous query (required).</param>
            <param name="remaining">Remaining results flag. 1: there are remaining results matching this query, 0: no remaining results (required).</param>
            <param name="result">Mints matching query parameters (required).</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.ListMintsResponse.Cursor">
            <summary>
            Generated cursor returned by previous query
            </summary>
            <value>Generated cursor returned by previous query</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.ListMintsResponse.Remaining">
            <summary>
            Remaining results flag. 1: there are remaining results matching this query, 0: no remaining results
            </summary>
            <value>Remaining results flag. 1: there are remaining results matching this query, 0: no remaining results</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.ListMintsResponse.Result">
            <summary>
            Mints matching query parameters
            </summary>
            <value>Mints matching query parameters</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListMintsResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListMintsResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListMintsResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListMintsResponse.Equals(Imx.Sdk.Gen.Model.ListMintsResponse)">
            <summary>
            Returns true if ListMintsResponse instances are equal
            </summary>
            <param name="input">Instance of ListMintsResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListMintsResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListMintsResponse.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.ListOrdersResponse">
            <summary>
            ListOrdersResponse
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListOrdersResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.ListOrdersResponse" /> class.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListOrdersResponse.#ctor(System.String,System.Int32,System.Collections.Generic.List{Imx.Sdk.Gen.Model.Order})">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.ListOrdersResponse" /> class.
            </summary>
            <param name="cursor">Generated cursor returned by previous query (required).</param>
            <param name="remaining">Remaining results flag. 1: there are remaining results matching this query, 0: no remaining results (required).</param>
            <param name="result">Orders matching query parameters (required).</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.ListOrdersResponse.Cursor">
            <summary>
            Generated cursor returned by previous query
            </summary>
            <value>Generated cursor returned by previous query</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.ListOrdersResponse.Remaining">
            <summary>
            Remaining results flag. 1: there are remaining results matching this query, 0: no remaining results
            </summary>
            <value>Remaining results flag. 1: there are remaining results matching this query, 0: no remaining results</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.ListOrdersResponse.Result">
            <summary>
            Orders matching query parameters
            </summary>
            <value>Orders matching query parameters</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListOrdersResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListOrdersResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListOrdersResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListOrdersResponse.Equals(Imx.Sdk.Gen.Model.ListOrdersResponse)">
            <summary>
            Returns true if ListOrdersResponse instances are equal
            </summary>
            <param name="input">Instance of ListOrdersResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListOrdersResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListOrdersResponse.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.ListTokensResponse">
            <summary>
            ListTokensResponse
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListTokensResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.ListTokensResponse" /> class.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListTokensResponse.#ctor(System.String,System.Collections.Generic.List{Imx.Sdk.Gen.Model.TokenDetails})">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.ListTokensResponse" /> class.
            </summary>
            <param name="cursor">Generated cursor returned by previous query (required).</param>
            <param name="result">Tokens matching query parameters (required).</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.ListTokensResponse.Cursor">
            <summary>
            Generated cursor returned by previous query
            </summary>
            <value>Generated cursor returned by previous query</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.ListTokensResponse.Result">
            <summary>
            Tokens matching query parameters
            </summary>
            <value>Tokens matching query parameters</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListTokensResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListTokensResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListTokensResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListTokensResponse.Equals(Imx.Sdk.Gen.Model.ListTokensResponse)">
            <summary>
            Returns true if ListTokensResponse instances are equal
            </summary>
            <param name="input">Instance of ListTokensResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListTokensResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListTokensResponse.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.ListTradesResponse">
            <summary>
            ListTradesResponse
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListTradesResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.ListTradesResponse" /> class.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListTradesResponse.#ctor(System.String,System.Int32,System.Collections.Generic.List{Imx.Sdk.Gen.Model.Trade})">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.ListTradesResponse" /> class.
            </summary>
            <param name="cursor">Generated cursor returned by previous query (required).</param>
            <param name="remaining">Remaining results flag. 1: there are remaining results matching this query, 0: no remaining results (required).</param>
            <param name="result">Trades matching query parameters (required).</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.ListTradesResponse.Cursor">
            <summary>
            Generated cursor returned by previous query
            </summary>
            <value>Generated cursor returned by previous query</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.ListTradesResponse.Remaining">
            <summary>
            Remaining results flag. 1: there are remaining results matching this query, 0: no remaining results
            </summary>
            <value>Remaining results flag. 1: there are remaining results matching this query, 0: no remaining results</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.ListTradesResponse.Result">
            <summary>
            Trades matching query parameters
            </summary>
            <value>Trades matching query parameters</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListTradesResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListTradesResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListTradesResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListTradesResponse.Equals(Imx.Sdk.Gen.Model.ListTradesResponse)">
            <summary>
            Returns true if ListTradesResponse instances are equal
            </summary>
            <param name="input">Instance of ListTradesResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListTradesResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListTradesResponse.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.ListTransfersResponse">
            <summary>
            ListTransfersResponse
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListTransfersResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.ListTransfersResponse" /> class.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListTransfersResponse.#ctor(System.String,System.Int32,System.Collections.Generic.List{Imx.Sdk.Gen.Model.Transfer})">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.ListTransfersResponse" /> class.
            </summary>
            <param name="cursor">Generated cursor returned by previous query (required).</param>
            <param name="remaining">Remaining results flag. 1: there are remaining results matching this query, 0: no remaining results (required).</param>
            <param name="result">Transfers matching query parameters (required).</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.ListTransfersResponse.Cursor">
            <summary>
            Generated cursor returned by previous query
            </summary>
            <value>Generated cursor returned by previous query</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.ListTransfersResponse.Remaining">
            <summary>
            Remaining results flag. 1: there are remaining results matching this query, 0: no remaining results
            </summary>
            <value>Remaining results flag. 1: there are remaining results matching this query, 0: no remaining results</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.ListTransfersResponse.Result">
            <summary>
            Transfers matching query parameters
            </summary>
            <value>Transfers matching query parameters</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListTransfersResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListTransfersResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListTransfersResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListTransfersResponse.Equals(Imx.Sdk.Gen.Model.ListTransfersResponse)">
            <summary>
            Returns true if ListTransfersResponse instances are equal
            </summary>
            <param name="input">Instance of ListTransfersResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListTransfersResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListTransfersResponse.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.ListWithdrawalsResponse">
            <summary>
            ListWithdrawalsResponse
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListWithdrawalsResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.ListWithdrawalsResponse" /> class.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListWithdrawalsResponse.#ctor(System.String,System.Int32,System.Collections.Generic.List{Imx.Sdk.Gen.Model.Withdrawal})">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.ListWithdrawalsResponse" /> class.
            </summary>
            <param name="cursor">Generated cursor returned by previous query (required).</param>
            <param name="remaining">Remaining results flag. 1: there are remaining results matching this query, 0: no remaining results (required).</param>
            <param name="result">Withdrawals matching query parameters (required).</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.ListWithdrawalsResponse.Cursor">
            <summary>
            Generated cursor returned by previous query
            </summary>
            <value>Generated cursor returned by previous query</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.ListWithdrawalsResponse.Remaining">
            <summary>
            Remaining results flag. 1: there are remaining results matching this query, 0: no remaining results
            </summary>
            <value>Remaining results flag. 1: there are remaining results matching this query, 0: no remaining results</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.ListWithdrawalsResponse.Result">
            <summary>
            Withdrawals matching query parameters
            </summary>
            <value>Withdrawals matching query parameters</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListWithdrawalsResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListWithdrawalsResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListWithdrawalsResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListWithdrawalsResponse.Equals(Imx.Sdk.Gen.Model.ListWithdrawalsResponse)">
            <summary>
            Returns true if ListWithdrawalsResponse instances are equal
            </summary>
            <param name="input">Instance of ListWithdrawalsResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListWithdrawalsResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.ListWithdrawalsResponse.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.MetadataSchemaProperty">
            <summary>
            MetadataSchemaProperty
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.MetadataSchemaProperty.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.MetadataSchemaProperty" /> class.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.MetadataSchemaProperty.#ctor(System.Boolean,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.MetadataSchemaProperty" /> class.
            </summary>
            <param name="filterable">Sets the metadata as filterable (required).</param>
            <param name="name">Name of the metadata key (required).</param>
            <param name="type">Type of the metadata. Values: \&quot;enum\&quot;, \&quot;text\&quot;, \&quot;boolean\&quot;, \&quot;continuous\&quot;, \&quot;discrete\&quot; | Default: \&quot;text\&quot;. Src: https://docs.x.immutable.com/docs/asset-metadata#property-type-mapping (required).</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.MetadataSchemaProperty.Filterable">
            <summary>
            Sets the metadata as filterable
            </summary>
            <value>Sets the metadata as filterable</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.MetadataSchemaProperty.Name">
            <summary>
            Name of the metadata key
            </summary>
            <value>Name of the metadata key</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.MetadataSchemaProperty.Type">
            <summary>
            Type of the metadata. Values: \&quot;enum\&quot;, \&quot;text\&quot;, \&quot;boolean\&quot;, \&quot;continuous\&quot;, \&quot;discrete\&quot; | Default: \&quot;text\&quot;. Src: https://docs.x.immutable.com/docs/asset-metadata#property-type-mapping
            </summary>
            <value>Type of the metadata. Values: \&quot;enum\&quot;, \&quot;text\&quot;, \&quot;boolean\&quot;, \&quot;continuous\&quot;, \&quot;discrete\&quot; | Default: \&quot;text\&quot;. Src: https://docs.x.immutable.com/docs/asset-metadata#property-type-mapping</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.MetadataSchemaProperty.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.MetadataSchemaProperty.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.MetadataSchemaProperty.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.MetadataSchemaProperty.Equals(Imx.Sdk.Gen.Model.MetadataSchemaProperty)">
            <summary>
            Returns true if MetadataSchemaProperty instances are equal
            </summary>
            <param name="input">Instance of MetadataSchemaProperty to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.MetadataSchemaProperty.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.MetadataSchemaProperty.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.MetadataSchemaRequest">
            <summary>
            MetadataSchemaRequest
            </summary>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.MetadataSchemaRequest.TypeEnum">
            <summary>
            Type of the metadata. Values: \&quot;enum\&quot;, \&quot;text\&quot;, \&quot;boolean\&quot;, \&quot;continuous\&quot;, \&quot;discrete\&quot; | Default: \&quot;text\&quot;. Src: https://docs.x.immutable.com/docs/asset-metadata#property-type-mapping
            </summary>
            <value>Type of the metadata. Values: \&quot;enum\&quot;, \&quot;text\&quot;, \&quot;boolean\&quot;, \&quot;continuous\&quot;, \&quot;discrete\&quot; | Default: \&quot;text\&quot;. Src: https://docs.x.immutable.com/docs/asset-metadata#property-type-mapping</value>
        </member>
        <member name="F:Imx.Sdk.Gen.Model.MetadataSchemaRequest.TypeEnum.Enum">
            <summary>
            Enum Enum for value: enum
            </summary>
        </member>
        <member name="F:Imx.Sdk.Gen.Model.MetadataSchemaRequest.TypeEnum.Text">
            <summary>
            Enum Text for value: text
            </summary>
        </member>
        <member name="F:Imx.Sdk.Gen.Model.MetadataSchemaRequest.TypeEnum.Boolean">
            <summary>
            Enum Boolean for value: boolean
            </summary>
        </member>
        <member name="F:Imx.Sdk.Gen.Model.MetadataSchemaRequest.TypeEnum.Continuous">
            <summary>
            Enum Continuous for value: continuous
            </summary>
        </member>
        <member name="F:Imx.Sdk.Gen.Model.MetadataSchemaRequest.TypeEnum.Discrete">
            <summary>
            Enum Discrete for value: discrete
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.MetadataSchemaRequest.Type">
            <summary>
            Type of the metadata. Values: \&quot;enum\&quot;, \&quot;text\&quot;, \&quot;boolean\&quot;, \&quot;continuous\&quot;, \&quot;discrete\&quot; | Default: \&quot;text\&quot;. Src: https://docs.x.immutable.com/docs/asset-metadata#property-type-mapping
            </summary>
            <value>Type of the metadata. Values: \&quot;enum\&quot;, \&quot;text\&quot;, \&quot;boolean\&quot;, \&quot;continuous\&quot;, \&quot;discrete\&quot; | Default: \&quot;text\&quot;. Src: https://docs.x.immutable.com/docs/asset-metadata#property-type-mapping</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.MetadataSchemaRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.MetadataSchemaRequest" /> class.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.MetadataSchemaRequest.#ctor(System.Boolean,System.String,System.Nullable{Imx.Sdk.Gen.Model.MetadataSchemaRequest.TypeEnum})">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.MetadataSchemaRequest" /> class.
            </summary>
            <param name="filterable">Sets the metadata as filterable.</param>
            <param name="name">Name of the metadata key (required).</param>
            <param name="type">Type of the metadata. Values: \&quot;enum\&quot;, \&quot;text\&quot;, \&quot;boolean\&quot;, \&quot;continuous\&quot;, \&quot;discrete\&quot; | Default: \&quot;text\&quot;. Src: https://docs.x.immutable.com/docs/asset-metadata#property-type-mapping.</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.MetadataSchemaRequest.Filterable">
            <summary>
            Sets the metadata as filterable
            </summary>
            <value>Sets the metadata as filterable</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.MetadataSchemaRequest.Name">
            <summary>
            Name of the metadata key
            </summary>
            <value>Name of the metadata key</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.MetadataSchemaRequest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.MetadataSchemaRequest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.MetadataSchemaRequest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.MetadataSchemaRequest.Equals(Imx.Sdk.Gen.Model.MetadataSchemaRequest)">
            <summary>
            Returns true if MetadataSchemaRequest instances are equal
            </summary>
            <param name="input">Instance of MetadataSchemaRequest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.MetadataSchemaRequest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.MetadataSchemaRequest.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.Mint">
            <summary>
            Mint
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Mint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.Mint" /> class.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Mint.#ctor(System.Collections.Generic.List{Imx.Sdk.Gen.Model.Fee},System.String,System.String,Imx.Sdk.Gen.Model.Token,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.Mint" /> class.
            </summary>
            <param name="fees">Fee details.</param>
            <param name="status">Status of this mint (required).</param>
            <param name="timestamp">Timestamp this mint was initiated (required).</param>
            <param name="token">token (required).</param>
            <param name="transactionId">Sequential ID of transaction in Immutable X (required).</param>
            <param name="user">Ethereum address of the user to whom the asset has been minted (required).</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Mint.Fees">
            <summary>
            Fee details
            </summary>
            <value>Fee details</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Mint.Status">
            <summary>
            Status of this mint
            </summary>
            <value>Status of this mint</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Mint.Timestamp">
            <summary>
            Timestamp this mint was initiated
            </summary>
            <value>Timestamp this mint was initiated</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Mint.Token">
            <summary>
            Gets or Sets Token
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Mint.TransactionId">
            <summary>
            Sequential ID of transaction in Immutable X
            </summary>
            <value>Sequential ID of transaction in Immutable X</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Mint.User">
            <summary>
            Ethereum address of the user to whom the asset has been minted
            </summary>
            <value>Ethereum address of the user to whom the asset has been minted</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Mint.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Mint.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Mint.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Mint.Equals(Imx.Sdk.Gen.Model.Mint)">
            <summary>
            Returns true if Mint instances are equal
            </summary>
            <param name="input">Instance of Mint to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Mint.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Mint.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.MintableTokenDetails">
            <summary>
            MintableTokenDetails
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.MintableTokenDetails.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.MintableTokenDetails" /> class.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.MintableTokenDetails.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.MintableTokenDetails" /> class.
            </summary>
            <param name="blueprint">Blueprint of this token (required).</param>
            <param name="clientTokenId">ID provided by the client for this token (required).</param>
            <param name="tokenId">IMX Id of this token (required).</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.MintableTokenDetails.Blueprint">
            <summary>
            Blueprint of this token
            </summary>
            <value>Blueprint of this token</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.MintableTokenDetails.ClientTokenId">
            <summary>
            ID provided by the client for this token
            </summary>
            <value>ID provided by the client for this token</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.MintableTokenDetails.TokenId">
            <summary>
            IMX Id of this token
            </summary>
            <value>IMX Id of this token</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.MintableTokenDetails.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.MintableTokenDetails.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.MintableTokenDetails.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.MintableTokenDetails.Equals(Imx.Sdk.Gen.Model.MintableTokenDetails)">
            <summary>
            Returns true if MintableTokenDetails instances are equal
            </summary>
            <param name="input">Instance of MintableTokenDetails to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.MintableTokenDetails.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.MintableTokenDetails.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.MintFee">
            <summary>
            MintFee
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.MintFee.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.MintFee" /> class.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.MintFee.#ctor(System.Decimal,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.MintFee" /> class.
            </summary>
            <param name="percentage">Fee percentage (required).</param>
            <param name="recipient">Recipient wallet address (required).</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.MintFee.Percentage">
            <summary>
            Fee percentage
            </summary>
            <value>Fee percentage</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.MintFee.Recipient">
            <summary>
            Recipient wallet address
            </summary>
            <value>Recipient wallet address</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.MintFee.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.MintFee.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.MintFee.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.MintFee.Equals(Imx.Sdk.Gen.Model.MintFee)">
            <summary>
            Returns true if MintFee instances are equal
            </summary>
            <param name="input">Instance of MintFee to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.MintFee.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.MintFee.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.NftprimarytransactionGetResponse">
            <summary>
            NftprimarytransactionGetResponse
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.NftprimarytransactionGetResponse.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.NftprimarytransactionGetResponse" /> class.
            </summary>
            <param name="contractAddress">Contract address of the asset.</param>
            <param name="offerId">Temporary asset id. Might be a token id if the token id is known or a generic description if it&#39;s not.</param>
            <param name="provider">Provider name.</param>
            <param name="sellerWalletAddress">Ethereum address of the seller.</param>
            <param name="status">Transaction status enums(created, waitingPayment, pending, completed, failed).</param>
            <param name="tokenId">ID of the token that has been successfully minted - might or not be the same as &#x60;offer_id&#x60;.</param>
            <param name="transactionId">Transaction id.</param>
            <param name="userWalletAddress">Wallet address that receives the minted NFT.</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.NftprimarytransactionGetResponse.ContractAddress">
            <summary>
            Contract address of the asset
            </summary>
            <value>Contract address of the asset</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.NftprimarytransactionGetResponse.OfferId">
            <summary>
            Temporary asset id. Might be a token id if the token id is known or a generic description if it&#39;s not
            </summary>
            <value>Temporary asset id. Might be a token id if the token id is known or a generic description if it&#39;s not</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.NftprimarytransactionGetResponse.Provider">
            <summary>
            Provider name
            </summary>
            <value>Provider name</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.NftprimarytransactionGetResponse.SellerWalletAddress">
            <summary>
            Ethereum address of the seller
            </summary>
            <value>Ethereum address of the seller</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.NftprimarytransactionGetResponse.Status">
            <summary>
            Transaction status enums(created, waitingPayment, pending, completed, failed)
            </summary>
            <value>Transaction status enums(created, waitingPayment, pending, completed, failed)</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.NftprimarytransactionGetResponse.TokenId">
            <summary>
            ID of the token that has been successfully minted - might or not be the same as &#x60;offer_id&#x60;
            </summary>
            <value>ID of the token that has been successfully minted - might or not be the same as &#x60;offer_id&#x60;</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.NftprimarytransactionGetResponse.TransactionId">
            <summary>
            Transaction id
            </summary>
            <value>Transaction id</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.NftprimarytransactionGetResponse.UserWalletAddress">
            <summary>
            Wallet address that receives the minted NFT
            </summary>
            <value>Wallet address that receives the minted NFT</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.NftprimarytransactionGetResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.NftprimarytransactionGetResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.NftprimarytransactionGetResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.NftprimarytransactionGetResponse.Equals(Imx.Sdk.Gen.Model.NftprimarytransactionGetResponse)">
            <summary>
            Returns true if NftprimarytransactionGetResponse instances are equal
            </summary>
            <param name="input">Instance of NftprimarytransactionGetResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.NftprimarytransactionGetResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.NftprimarytransactionGetResponse.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.NftprimarytransactionListTransactionsResponse">
            <summary>
            NftprimarytransactionListTransactionsResponse
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.NftprimarytransactionListTransactionsResponse.#ctor(System.String,System.Int32,System.Collections.Generic.List{Imx.Sdk.Gen.Model.NftprimarytransactionTransactionData})">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.NftprimarytransactionListTransactionsResponse" /> class.
            </summary>
            <param name="cursor">Generated cursor returned by previous query.</param>
            <param name="remaining">Remaining results flag. 1: there are remaining results matching this query, 0: no remaining results.</param>
            <param name="result">Transactions matching query parameters.</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.NftprimarytransactionListTransactionsResponse.Cursor">
            <summary>
            Generated cursor returned by previous query
            </summary>
            <value>Generated cursor returned by previous query</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.NftprimarytransactionListTransactionsResponse.Remaining">
            <summary>
            Remaining results flag. 1: there are remaining results matching this query, 0: no remaining results
            </summary>
            <value>Remaining results flag. 1: there are remaining results matching this query, 0: no remaining results</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.NftprimarytransactionListTransactionsResponse.Result">
            <summary>
            Transactions matching query parameters
            </summary>
            <value>Transactions matching query parameters</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.NftprimarytransactionListTransactionsResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.NftprimarytransactionListTransactionsResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.NftprimarytransactionListTransactionsResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.NftprimarytransactionListTransactionsResponse.Equals(Imx.Sdk.Gen.Model.NftprimarytransactionListTransactionsResponse)">
            <summary>
            Returns true if NftprimarytransactionListTransactionsResponse instances are equal
            </summary>
            <param name="input">Instance of NftprimarytransactionListTransactionsResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.NftprimarytransactionListTransactionsResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.NftprimarytransactionListTransactionsResponse.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.NftprimarytransactionTransactionData">
            <summary>
            NftprimarytransactionTransactionData
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.NftprimarytransactionTransactionData.#ctor(System.String,System.String,System.String,System.Decimal,System.Decimal,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Decimal,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.NftprimarytransactionTransactionData" /> class.
            </summary>
            <param name="contractAddress">Contract address of the asset.</param>
            <param name="createdAt">Timestamp when the transaction was created.</param>
            <param name="externalId">External transaction id.</param>
            <param name="feesAmount">Fees to pay on this transaction.</param>
            <param name="fromAmount">Amount of the currency specified in &#x60;from_currency&#x60; that the buyer paid for the transaction.</param>
            <param name="fromCurrency">Currency that the buyer used for the transaction.</param>
            <param name="mintId">Minting transaction ID - see mintTokens response.</param>
            <param name="mintStatus">Mint status.</param>
            <param name="offerId">Temporary asset id. Might be a token id if the token id is known or a generic description if it&#39;s not.</param>
            <param name="provider">Provider name.</param>
            <param name="sellerWalletAddress">Ethereum address of the seller.</param>
            <param name="status">Transaction status enums(created, waitingPayment, pending, completed, failed).</param>
            <param name="toAmount">Amount of the currency specified in &#x60;to_currency&#x60; that the seller received from the checkout provider for the transaction.</param>
            <param name="toCurrency">Currency (crypto) that the checkout provider sent to the seller for the transaction.</param>
            <param name="tokenId">ID of the token that has been successfully minted - should be the same as &#x60;offer_id&#x60;.</param>
            <param name="transactionId">Transaction id.</param>
            <param name="updatedAt">Timestamp when the transaction was updated.</param>
            <param name="userWalletAddress">Wallet address that receives the minted NFT.</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.NftprimarytransactionTransactionData.ContractAddress">
            <summary>
            Contract address of the asset
            </summary>
            <value>Contract address of the asset</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.NftprimarytransactionTransactionData.CreatedAt">
            <summary>
            Timestamp when the transaction was created
            </summary>
            <value>Timestamp when the transaction was created</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.NftprimarytransactionTransactionData.ExternalId">
            <summary>
            External transaction id
            </summary>
            <value>External transaction id</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.NftprimarytransactionTransactionData.FeesAmount">
            <summary>
            Fees to pay on this transaction
            </summary>
            <value>Fees to pay on this transaction</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.NftprimarytransactionTransactionData.FromAmount">
            <summary>
            Amount of the currency specified in &#x60;from_currency&#x60; that the buyer paid for the transaction
            </summary>
            <value>Amount of the currency specified in &#x60;from_currency&#x60; that the buyer paid for the transaction</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.NftprimarytransactionTransactionData.FromCurrency">
            <summary>
            Currency that the buyer used for the transaction
            </summary>
            <value>Currency that the buyer used for the transaction</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.NftprimarytransactionTransactionData.MintId">
            <summary>
            Minting transaction ID - see mintTokens response
            </summary>
            <value>Minting transaction ID - see mintTokens response</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.NftprimarytransactionTransactionData.MintStatus">
            <summary>
            Mint status
            </summary>
            <value>Mint status</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.NftprimarytransactionTransactionData.OfferId">
            <summary>
            Temporary asset id. Might be a token id if the token id is known or a generic description if it&#39;s not
            </summary>
            <value>Temporary asset id. Might be a token id if the token id is known or a generic description if it&#39;s not</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.NftprimarytransactionTransactionData.Provider">
            <summary>
            Provider name
            </summary>
            <value>Provider name</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.NftprimarytransactionTransactionData.SellerWalletAddress">
            <summary>
            Ethereum address of the seller
            </summary>
            <value>Ethereum address of the seller</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.NftprimarytransactionTransactionData.Status">
            <summary>
            Transaction status enums(created, waitingPayment, pending, completed, failed)
            </summary>
            <value>Transaction status enums(created, waitingPayment, pending, completed, failed)</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.NftprimarytransactionTransactionData.ToAmount">
            <summary>
            Amount of the currency specified in &#x60;to_currency&#x60; that the seller received from the checkout provider for the transaction
            </summary>
            <value>Amount of the currency specified in &#x60;to_currency&#x60; that the seller received from the checkout provider for the transaction</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.NftprimarytransactionTransactionData.ToCurrency">
            <summary>
            Currency (crypto) that the checkout provider sent to the seller for the transaction
            </summary>
            <value>Currency (crypto) that the checkout provider sent to the seller for the transaction</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.NftprimarytransactionTransactionData.TokenId">
            <summary>
            ID of the token that has been successfully minted - should be the same as &#x60;offer_id&#x60;
            </summary>
            <value>ID of the token that has been successfully minted - should be the same as &#x60;offer_id&#x60;</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.NftprimarytransactionTransactionData.TransactionId">
            <summary>
            Transaction id
            </summary>
            <value>Transaction id</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.NftprimarytransactionTransactionData.UpdatedAt">
            <summary>
            Timestamp when the transaction was updated
            </summary>
            <value>Timestamp when the transaction was updated</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.NftprimarytransactionTransactionData.UserWalletAddress">
            <summary>
            Wallet address that receives the minted NFT
            </summary>
            <value>Wallet address that receives the minted NFT</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.NftprimarytransactionTransactionData.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.NftprimarytransactionTransactionData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.NftprimarytransactionTransactionData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.NftprimarytransactionTransactionData.Equals(Imx.Sdk.Gen.Model.NftprimarytransactionTransactionData)">
            <summary>
            Returns true if NftprimarytransactionTransactionData instances are equal
            </summary>
            <param name="input">Instance of NftprimarytransactionTransactionData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.NftprimarytransactionTransactionData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.NftprimarytransactionTransactionData.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.OptionalExchangeData">
            <summary>
            OptionalExchangeData
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.OptionalExchangeData.#ctor(System.String,System.Decimal,System.Decimal,System.String,System.String,System.Decimal,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.OptionalExchangeData" /> class.
            </summary>
            <param name="externalId">Provider transaction ID.</param>
            <param name="feesAmount">Fees amount.</param>
            <param name="fromAmount">Amount that was exchanged from.</param>
            <param name="fromCurrency">Currency that was exchanged from.</param>
            <param name="providerWalletAddress">Provider wallet address that was used for transferring crypto.</param>
            <param name="toAmount">Amount that was exchanged to.</param>
            <param name="toCurrency">Currency that was exchanged to.</param>
            <param name="transferId">Transfer ID.</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.OptionalExchangeData.ExternalId">
            <summary>
            Provider transaction ID
            </summary>
            <value>Provider transaction ID</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.OptionalExchangeData.FeesAmount">
            <summary>
            Fees amount
            </summary>
            <value>Fees amount</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.OptionalExchangeData.FromAmount">
            <summary>
            Amount that was exchanged from
            </summary>
            <value>Amount that was exchanged from</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.OptionalExchangeData.FromCurrency">
            <summary>
            Currency that was exchanged from
            </summary>
            <value>Currency that was exchanged from</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.OptionalExchangeData.ProviderWalletAddress">
            <summary>
            Provider wallet address that was used for transferring crypto
            </summary>
            <value>Provider wallet address that was used for transferring crypto</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.OptionalExchangeData.ToAmount">
            <summary>
            Amount that was exchanged to
            </summary>
            <value>Amount that was exchanged to</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.OptionalExchangeData.ToCurrency">
            <summary>
            Currency that was exchanged to
            </summary>
            <value>Currency that was exchanged to</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.OptionalExchangeData.TransferId">
            <summary>
            Transfer ID
            </summary>
            <value>Transfer ID</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.OptionalExchangeData.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.OptionalExchangeData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.OptionalExchangeData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.OptionalExchangeData.Equals(Imx.Sdk.Gen.Model.OptionalExchangeData)">
            <summary>
            Returns true if OptionalExchangeData instances are equal
            </summary>
            <param name="input">Instance of OptionalExchangeData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.OptionalExchangeData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.OptionalExchangeData.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.Order">
            <summary>
            Order
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Order.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.Order" /> class.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Order.#ctor(System.String,Imx.Sdk.Gen.Model.Token,System.String,System.Collections.Generic.List{Imx.Sdk.Gen.Model.OrderFeeInfo},System.Int32,Imx.Sdk.Gen.Model.Token,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.Order" /> class.
            </summary>
            <param name="amountSold">Amount of the asset already sold by this order (required).</param>
            <param name="buy">buy (required).</param>
            <param name="expirationTimestamp">Expiration timestamp of this order (required).</param>
            <param name="fees">Fee information for the order.</param>
            <param name="orderId">ID of the order (required).</param>
            <param name="sell">sell (required).</param>
            <param name="status">Status of the order (required).</param>
            <param name="timestamp">Timestamp this order was created (required).</param>
            <param name="updatedTimestamp">Updated timestamp of this order (required).</param>
            <param name="user">Ethereum address of the user who submitted the order (required).</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Order.AmountSold">
            <summary>
            Amount of the asset already sold by this order
            </summary>
            <value>Amount of the asset already sold by this order</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Order.Buy">
            <summary>
            Gets or Sets Buy
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Order.ExpirationTimestamp">
            <summary>
            Expiration timestamp of this order
            </summary>
            <value>Expiration timestamp of this order</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Order.Fees">
            <summary>
            Fee information for the order
            </summary>
            <value>Fee information for the order</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Order.OrderId">
            <summary>
            ID of the order
            </summary>
            <value>ID of the order</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Order.Sell">
            <summary>
            Gets or Sets Sell
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Order.Status">
            <summary>
            Status of the order
            </summary>
            <value>Status of the order</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Order.Timestamp">
            <summary>
            Timestamp this order was created
            </summary>
            <value>Timestamp this order was created</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Order.UpdatedTimestamp">
            <summary>
            Updated timestamp of this order
            </summary>
            <value>Updated timestamp of this order</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Order.User">
            <summary>
            Ethereum address of the user who submitted the order
            </summary>
            <value>Ethereum address of the user who submitted the order</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Order.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Order.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Order.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Order.Equals(Imx.Sdk.Gen.Model.Order)">
            <summary>
            Returns true if Order instances are equal
            </summary>
            <param name="input">Instance of Order to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Order.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Order.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.OrderDetails">
            <summary>
            OrderDetails
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.OrderDetails.#ctor(System.Collections.Generic.List{System.Object},System.Collections.Generic.List{System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.OrderDetails" /> class.
            </summary>
            <param name="buyOrders">Buy orders for this asset.</param>
            <param name="sellOrders">Sell orders for this asset.</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.OrderDetails.BuyOrders">
            <summary>
            Buy orders for this asset
            </summary>
            <value>Buy orders for this asset</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.OrderDetails.SellOrders">
            <summary>
            Sell orders for this asset
            </summary>
            <value>Sell orders for this asset</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.OrderDetails.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.OrderDetails.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.OrderDetails.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.OrderDetails.Equals(Imx.Sdk.Gen.Model.OrderDetails)">
            <summary>
            Returns true if OrderDetails instances are equal
            </summary>
            <param name="input">Instance of OrderDetails to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.OrderDetails.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.OrderDetails.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.OrderFeeInfo">
            <summary>
            OrderFeeInfo
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.OrderFeeInfo.#ctor(System.String,System.String,Imx.Sdk.Gen.Model.FeeToken,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.OrderFeeInfo" /> class.
            </summary>
            <param name="address">Address of the fee recipient.</param>
            <param name="amount">Fee amount.</param>
            <param name="token">token.</param>
            <param name="type">Fee type.</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.OrderFeeInfo.Address">
            <summary>
            Address of the fee recipient
            </summary>
            <value>Address of the fee recipient</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.OrderFeeInfo.Amount">
            <summary>
            Fee amount
            </summary>
            <value>Fee amount</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.OrderFeeInfo.Token">
            <summary>
            Gets or Sets Token
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.OrderFeeInfo.Type">
            <summary>
            Fee type
            </summary>
            <value>Fee type</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.OrderFeeInfo.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.OrderFeeInfo.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.OrderFeeInfo.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.OrderFeeInfo.Equals(Imx.Sdk.Gen.Model.OrderFeeInfo)">
            <summary>
            Returns true if OrderFeeInfo instances are equal
            </summary>
            <param name="input">Instance of OrderFeeInfo to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.OrderFeeInfo.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.OrderFeeInfo.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.Range">
            <summary>
            Range
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Range.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.Range" /> class.
            </summary>
            <param name="max">Maximum value.</param>
            <param name="min">Minimum value.</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Range.Max">
            <summary>
            Maximum value
            </summary>
            <value>Maximum value</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Range.Min">
            <summary>
            Minimum value
            </summary>
            <value>Minimum value</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Range.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Range.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Range.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Range.Equals(Imx.Sdk.Gen.Model.Range)">
            <summary>
            Returns true if Range instances are equal
            </summary>
            <param name="input">Instance of Range to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Range.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Range.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.SuccessResponse">
            <summary>
            SuccessResponse
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.SuccessResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.SuccessResponse" /> class.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.SuccessResponse.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.SuccessResponse" /> class.
            </summary>
            <param name="result">result (required).</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.SuccessResponse.Result">
            <summary>
            Gets or Sets Result
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.SuccessResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.SuccessResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.SuccessResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.SuccessResponse.Equals(Imx.Sdk.Gen.Model.SuccessResponse)">
            <summary>
            Returns true if SuccessResponse instances are equal
            </summary>
            <param name="input">Instance of SuccessResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.SuccessResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.SuccessResponse.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.Token">
            <summary>
            Token
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Token.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.Token" /> class.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Token.#ctor(Imx.Sdk.Gen.Model.TokenData,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.Token" /> class.
            </summary>
            <param name="data">data (required).</param>
            <param name="type">Type of this asset (ETH/ERC20/ERC721) (required).</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Token.Data">
            <summary>
            Gets or Sets Data
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Token.Type">
            <summary>
            Type of this asset (ETH/ERC20/ERC721)
            </summary>
            <value>Type of this asset (ETH/ERC20/ERC721)</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Token.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Token.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Token.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Token.Equals(Imx.Sdk.Gen.Model.Token)">
            <summary>
            Returns true if Token instances are equal
            </summary>
            <param name="input">Instance of Token to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Token.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Token.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.TokenData">
            <summary>
            TokenData
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.TokenData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.TokenData" /> class.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.TokenData.#ctor(System.Int32,System.String,Imx.Sdk.Gen.Model.AssetProperties,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.TokenData" /> class.
            </summary>
            <param name="decimals">Number of decimals supported by this asset.</param>
            <param name="id">[DEPRECATED] Internal Immutable X Token ID.</param>
            <param name="properties">properties.</param>
            <param name="quantity">Quantity of this asset - inclusive of fees for buy order in v1 API and exclusive of fees in v3 API (required).</param>
            <param name="quantityWithFees">Quantity of this asset with the sum of all fees applied to the asset (required).</param>
            <param name="symbol">Symbol of a token.</param>
            <param name="tokenAddress">Address of ERC721/ERC20 contract.</param>
            <param name="tokenId">ERC721 Token ID.</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.TokenData.Decimals">
            <summary>
            Number of decimals supported by this asset
            </summary>
            <value>Number of decimals supported by this asset</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.TokenData.Id">
            <summary>
            [DEPRECATED] Internal Immutable X Token ID
            </summary>
            <value>[DEPRECATED] Internal Immutable X Token ID</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.TokenData.Properties">
            <summary>
            Gets or Sets Properties
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.TokenData.Quantity">
            <summary>
            Quantity of this asset - inclusive of fees for buy order in v1 API and exclusive of fees in v3 API
            </summary>
            <value>Quantity of this asset - inclusive of fees for buy order in v1 API and exclusive of fees in v3 API</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.TokenData.QuantityWithFees">
            <summary>
            Quantity of this asset with the sum of all fees applied to the asset
            </summary>
            <value>Quantity of this asset with the sum of all fees applied to the asset</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.TokenData.Symbol">
            <summary>
            Symbol of a token
            </summary>
            <value>Symbol of a token</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.TokenData.TokenAddress">
            <summary>
            Address of ERC721/ERC20 contract
            </summary>
            <value>Address of ERC721/ERC20 contract</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.TokenData.TokenId">
            <summary>
            ERC721 Token ID
            </summary>
            <value>ERC721 Token ID</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.TokenData.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.TokenData.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.TokenData.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.TokenData.Equals(Imx.Sdk.Gen.Model.TokenData)">
            <summary>
            Returns true if TokenData instances are equal
            </summary>
            <param name="input">Instance of TokenData to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.TokenData.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.TokenData.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.TokenDetails">
            <summary>
            TokenDetails
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.TokenDetails.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.TokenDetails" /> class.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.TokenDetails.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.TokenDetails" /> class.
            </summary>
            <param name="decimals">Number of decimals for token (required).</param>
            <param name="imageUrl">Url for the icon of the token (required).</param>
            <param name="name">Full name of the token (e.g. Ether) (required).</param>
            <param name="quantum">Quantum for token (required).</param>
            <param name="symbol">Ticker symbol for token (e.g. ETH/USDC/IMX) (required).</param>
            <param name="tokenAddress">Address of the ERC721 contract (required).</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.TokenDetails.Decimals">
            <summary>
            Number of decimals for token
            </summary>
            <value>Number of decimals for token</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.TokenDetails.ImageUrl">
            <summary>
            Url for the icon of the token
            </summary>
            <value>Url for the icon of the token</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.TokenDetails.Name">
            <summary>
            Full name of the token (e.g. Ether)
            </summary>
            <value>Full name of the token (e.g. Ether)</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.TokenDetails.Quantum">
            <summary>
            Quantum for token
            </summary>
            <value>Quantum for token</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.TokenDetails.Symbol">
            <summary>
            Ticker symbol for token (e.g. ETH/USDC/IMX)
            </summary>
            <value>Ticker symbol for token (e.g. ETH/USDC/IMX)</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.TokenDetails.TokenAddress">
            <summary>
            Address of the ERC721 contract
            </summary>
            <value>Address of the ERC721 contract</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.TokenDetails.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.TokenDetails.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.TokenDetails.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.TokenDetails.Equals(Imx.Sdk.Gen.Model.TokenDetails)">
            <summary>
            Returns true if TokenDetails instances are equal
            </summary>
            <param name="input">Instance of TokenDetails to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.TokenDetails.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.TokenDetails.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.Trade">
            <summary>
            Trade
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Trade.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.Trade" /> class.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Trade.#ctor(Imx.Sdk.Gen.Model.TradeSide,Imx.Sdk.Gen.Model.TradeSide,System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.Trade" /> class.
            </summary>
            <param name="a">a (required).</param>
            <param name="b">b (required).</param>
            <param name="status">Status of this trade (required).</param>
            <param name="timestamp">Time this trade occurred (required).</param>
            <param name="transactionId">Sequential ID of this trade within Immutable X (required).</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Trade.A">
            <summary>
            Gets or Sets A
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Trade.B">
            <summary>
            Gets or Sets B
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Trade.Status">
            <summary>
            Status of this trade
            </summary>
            <value>Status of this trade</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Trade.Timestamp">
            <summary>
            Time this trade occurred
            </summary>
            <value>Time this trade occurred</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Trade.TransactionId">
            <summary>
            Sequential ID of this trade within Immutable X
            </summary>
            <value>Sequential ID of this trade within Immutable X</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Trade.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Trade.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Trade.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Trade.Equals(Imx.Sdk.Gen.Model.Trade)">
            <summary>
            Returns true if Trade instances are equal
            </summary>
            <param name="input">Instance of Trade to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Trade.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Trade.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.TradeSide">
            <summary>
            TradeSide
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.TradeSide.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.TradeSide" /> class.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.TradeSide.#ctor(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.TradeSide" /> class.
            </summary>
            <param name="orderId">The ID of the order involved in the trade (required).</param>
            <param name="sold">The amount of that order&#39;s asset this trade sold (required).</param>
            <param name="tokenAddress">The contract address of the token that this trade sold.</param>
            <param name="tokenId">The ID of the token that this trade sold.</param>
            <param name="tokenType">The type of the token that this trade sold (required).</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.TradeSide.OrderId">
            <summary>
            The ID of the order involved in the trade
            </summary>
            <value>The ID of the order involved in the trade</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.TradeSide.Sold">
            <summary>
            The amount of that order&#39;s asset this trade sold
            </summary>
            <value>The amount of that order&#39;s asset this trade sold</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.TradeSide.TokenAddress">
            <summary>
            The contract address of the token that this trade sold
            </summary>
            <value>The contract address of the token that this trade sold</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.TradeSide.TokenId">
            <summary>
            The ID of the token that this trade sold
            </summary>
            <value>The ID of the token that this trade sold</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.TradeSide.TokenType">
            <summary>
            The type of the token that this trade sold
            </summary>
            <value>The type of the token that this trade sold</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.TradeSide.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.TradeSide.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.TradeSide.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.TradeSide.Equals(Imx.Sdk.Gen.Model.TradeSide)">
            <summary>
            Returns true if TradeSide instances are equal
            </summary>
            <param name="input">Instance of TradeSide to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.TradeSide.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.TradeSide.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.Transfer">
            <summary>
            Transfer
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Transfer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.Transfer" /> class.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Transfer.#ctor(System.String,System.String,System.String,Imx.Sdk.Gen.Model.Token,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.Transfer" /> class.
            </summary>
            <param name="receiver">Ethereum address of the user who received this transfer (required).</param>
            <param name="status">Status of the transaction (required).</param>
            <param name="timestamp">Timestamp of the transfer (required).</param>
            <param name="token">token (required).</param>
            <param name="transactionId">Sequential transaction ID (required).</param>
            <param name="user">Ethereum address of the user  who submitted this transfer (required).</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Transfer.Receiver">
            <summary>
            Ethereum address of the user who received this transfer
            </summary>
            <value>Ethereum address of the user who received this transfer</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Transfer.Status">
            <summary>
            Status of the transaction
            </summary>
            <value>Status of the transaction</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Transfer.Timestamp">
            <summary>
            Timestamp of the transfer
            </summary>
            <value>Timestamp of the transfer</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Transfer.Token">
            <summary>
            Gets or Sets Token
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Transfer.TransactionId">
            <summary>
            Sequential transaction ID
            </summary>
            <value>Sequential transaction ID</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Transfer.User">
            <summary>
            Ethereum address of the user  who submitted this transfer
            </summary>
            <value>Ethereum address of the user  who submitted this transfer</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Transfer.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Transfer.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Transfer.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Transfer.Equals(Imx.Sdk.Gen.Model.Transfer)">
            <summary>
            Returns true if Transfer instances are equal
            </summary>
            <param name="input">Instance of Transfer to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Transfer.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Transfer.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
        <member name="T:Imx.Sdk.Gen.Model.Withdrawal">
            <summary>
            Withdrawal
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Withdrawal.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.Withdrawal" /> class.
            </summary>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Withdrawal.#ctor(System.String,System.String,System.String,System.String,Imx.Sdk.Gen.Model.Token,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Imx.Sdk.Gen.Model.Withdrawal" /> class.
            </summary>
            <param name="rollupStatus">Status of the on-chain batch confirmation for this withdrawal (required).</param>
            <param name="sender">Ethereum address of the user who requested this withdrawal (required).</param>
            <param name="status">Status of this withdrawal (required).</param>
            <param name="timestamp">Time when this withdrawal was initiated (required).</param>
            <param name="token">token (required).</param>
            <param name="transactionId">Sequential ID of this transaction (required).</param>
            <param name="withdrawnToWallet">Withdrawal has been transferred to user&#39;s Layer 1 wallet (required).</param>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Withdrawal.RollupStatus">
            <summary>
            Status of the on-chain batch confirmation for this withdrawal
            </summary>
            <value>Status of the on-chain batch confirmation for this withdrawal</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Withdrawal.Sender">
            <summary>
            Ethereum address of the user who requested this withdrawal
            </summary>
            <value>Ethereum address of the user who requested this withdrawal</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Withdrawal.Status">
            <summary>
            Status of this withdrawal
            </summary>
            <value>Status of this withdrawal</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Withdrawal.Timestamp">
            <summary>
            Time when this withdrawal was initiated
            </summary>
            <value>Time when this withdrawal was initiated</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Withdrawal.Token">
            <summary>
            Gets or Sets Token
            </summary>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Withdrawal.TransactionId">
            <summary>
            Sequential ID of this transaction
            </summary>
            <value>Sequential ID of this transaction</value>
        </member>
        <member name="P:Imx.Sdk.Gen.Model.Withdrawal.WithdrawnToWallet">
            <summary>
            Withdrawal has been transferred to user&#39;s Layer 1 wallet
            </summary>
            <value>Withdrawal has been transferred to user&#39;s Layer 1 wallet</value>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Withdrawal.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Withdrawal.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Withdrawal.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="input">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Withdrawal.Equals(Imx.Sdk.Gen.Model.Withdrawal)">
            <summary>
            Returns true if Withdrawal instances are equal
            </summary>
            <param name="input">Instance of Withdrawal to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Withdrawal.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Imx.Sdk.Gen.Model.Withdrawal.Validate(System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            To validate all properties of the instance
            </summary>
            <param name="validationContext">Validation context</param>
            <returns>Validation Result</returns>
        </member>
    </members>
</doc>
